"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SnapshotEmptyPrompt = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _reactRouterDom = require("react-router-dom");
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _common = require("../../../../../../common");
var _shared_imports = require("../../../../../shared_imports");
var _navigation = require("../../../../services/navigation");
var _app_context = require("../../../../app_context");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const SnapshotEmptyPrompt = ({
  policiesCount
}) => {
  const {
    docLinks
  } = (0, _app_context.useCore)();
  const history = (0, _reactRouterDom.useHistory)();
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPageTemplate.EmptyPrompt, {
    iconType: "managementApp",
    title: /*#__PURE__*/_react.default.createElement("h1", {
      "data-test-subj": "title"
    }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.snapshotRestore.snapshotList.emptyPrompt.noSnapshotsTitle",
      defaultMessage: "You don't have any snapshots yet"
    })),
    body: /*#__PURE__*/_react.default.createElement(_shared_imports.WithPrivileges, {
      privileges: _common.APP_SLM_CLUSTER_PRIVILEGES.map(name => `cluster.${name}`)
    }, ({
      hasPrivileges
    }) => hasPrivileges ? /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.snapshotRestore.snapshotList.emptyPrompt.usePolicyDescription",
      defaultMessage: "Run a Snapshot Lifecycle Policy to create a snapshot. You can also create a snapshot using {docLink}.",
      values: {
        docLink: /*#__PURE__*/_react.default.createElement(_eui.EuiLink, {
          href: docLinks.links.snapshotRestore.createSnapshot,
          target: "_blank",
          "data-test-subj": "documentationLink"
        }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
          id: "xpack.snapshotRestore.emptyPrompt.usePolicyDocLinkText",
          defaultMessage: "the Elasticsearch API"
        }))
      }
    })), /*#__PURE__*/_react.default.createElement("p", null, policiesCount === 0 ? /*#__PURE__*/_react.default.createElement(_eui.EuiButton, (0, _extends2.default)({}, (0, _shared_imports.reactRouterNavigate)(history, (0, _navigation.linkToAddPolicy)()), {
      fill: true,
      iconType: "plusInCircle",
      "data-test-subj": "addPolicyButton"
    }), /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.snapshotRestore.snapshotList.emptyPrompt.addPolicyText",
      defaultMessage: "Create a policy"
    })) : /*#__PURE__*/_react.default.createElement(_eui.EuiButton, (0, _extends2.default)({}, (0, _shared_imports.reactRouterNavigate)(history, (0, _navigation.linkToPolicies)()), {
      fill: true,
      iconType: "list",
      "data-test-subj": "goToPoliciesButton"
    }), /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.snapshotRestore.snapshotList.emptyPrompt.goToPoliciesText",
      defaultMessage: "View policies"
    })))) : /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.snapshotRestore.snapshotList.emptyPrompt.noSnapshotsDescription",
      defaultMessage: "Create a snapshot using the Elasticsearch API."
    })), /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement(_eui.EuiLink, {
      href: docLinks.links.snapshotRestore.createSnapshot,
      target: "_blank",
      "data-test-subj": "documentationLink"
    }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.snapshotRestore.emptyPrompt.noSnapshotsDocLinkText",
      defaultMessage: "Learn how to create a snapshot"
    }), ' ', /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
      type: "link"
    }))))),
    "data-test-subj": "emptyPrompt"
  });
};
exports.SnapshotEmptyPrompt = SnapshotEmptyPrompt;