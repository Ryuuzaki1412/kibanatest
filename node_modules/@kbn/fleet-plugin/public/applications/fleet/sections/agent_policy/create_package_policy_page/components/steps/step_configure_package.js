"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StepConfigurePackagePolicy = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _services = require("../../../../../../../../common/services");
var _components = require("../../../../../components");
var _services2 = require("../../../../../services");
var _components2 = require("./components");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const StepConfigurePackagePolicy = ({
  packageInfo,
  showOnlyIntegration,
  packagePolicy,
  updatePackagePolicy,
  validationResults,
  submitAttempted,
  noTopRule = false,
  isEditPage = false
}) => {
  const hasIntegrations = (0, _react.useMemo)(() => (0, _services2.doesPackageHaveIntegrations)(packageInfo), [packageInfo]);
  const packagePolicyTemplates = (0, _react.useMemo)(() => showOnlyIntegration ? (packageInfo.policy_templates || []).filter(policyTemplate => policyTemplate.name === showOnlyIntegration) : packageInfo.policy_templates || [], [packageInfo.policy_templates, showOnlyIntegration]);
  // Configure inputs (and their streams)
  const renderConfigureInputs = () => packagePolicyTemplates.length ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, !noTopRule && /*#__PURE__*/_react.default.createElement(_eui.EuiHorizontalRule, {
    margin: "m"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    direction: "column",
    gutterSize: "none"
  }, packagePolicyTemplates.map(policyTemplate => {
    const inputs = (0, _services.getNormalizedInputs)(policyTemplate);
    return inputs.map(packageInput => {
      var _validationResults$in, _validationResults$in2;
      const packagePolicyInput = packagePolicy.inputs.find(input => input.type === packageInput.type && (hasIntegrations ? input.policy_template === policyTemplate.name : true));
      const packageInputStreams = (0, _services.getRegistryStreamWithDataStreamForInputType)(packageInput.type, packageInfo, hasIntegrations && (0, _services.isIntegrationPolicyTemplate)(policyTemplate) ? policyTemplate.data_streams : []);
      return packagePolicyInput ? /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
        key: packageInput.type
      }, /*#__PURE__*/_react.default.createElement(_components2.PackagePolicyInputPanel, {
        packageInput: packageInput,
        packageInfo: packageInfo,
        packagePolicy: packagePolicy,
        packageInputStreams: packageInputStreams,
        packagePolicyInput: packagePolicyInput,
        updatePackagePolicy: updatePackagePolicy,
        updatePackagePolicyInput: updatedInput => {
          const indexOfUpdatedInput = packagePolicy.inputs.findIndex(input => input.type === packageInput.type && (hasIntegrations ? input.policy_template === policyTemplate.name : true));
          const newInputs = [...packagePolicy.inputs];
          newInputs[indexOfUpdatedInput] = {
            ...newInputs[indexOfUpdatedInput],
            ...updatedInput
          };
          updatePackagePolicy({
            inputs: newInputs
          });
        },
        inputValidationResults: (_validationResults$in = validationResults === null || validationResults === void 0 ? void 0 : (_validationResults$in2 = validationResults.inputs) === null || _validationResults$in2 === void 0 ? void 0 : _validationResults$in2[hasIntegrations ? `${policyTemplate.name}-${packagePolicyInput.type}` : packagePolicyInput.type]) !== null && _validationResults$in !== void 0 ? _validationResults$in : {},
        forceShowErrors: submitAttempted,
        isEditPage: isEditPage
      }), /*#__PURE__*/_react.default.createElement(_eui.EuiHorizontalRule, {
        margin: "m"
      })) : null;
    });
  }))) : /*#__PURE__*/_react.default.createElement(_eui.EuiEmptyPrompt, {
    iconType: "checkInCircleFilled",
    iconColor: "success",
    body: /*#__PURE__*/_react.default.createElement(_eui.EuiText, null, /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.fleet.createPackagePolicy.stepConfigure.noPolicyOptionsMessage",
      defaultMessage: "Nothing to configure"
    })))
  });
  return validationResults ? renderConfigureInputs() : /*#__PURE__*/_react.default.createElement(_components.Loading, null);
};
exports.StepConfigurePackagePolicy = StepConfigurePackagePolicy;