"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AgentPolicyGeneralFields = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _i18n = require("@kbn/i18n");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const AgentPolicyGeneralFields = ({
  agentPolicy,
  updateAgentPolicy,
  validation,
  nameLabel
}) => {
  const [touchedFields, setTouchedFields] = (0, _react.useState)({});
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    fullWidth: true,
    key: "name",
    label: nameLabel || /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.fleet.agentPolicyForm.nameFieldLabel",
      defaultMessage: "Name"
    }),
    error: touchedFields.name && validation.name ? validation.name : null,
    isInvalid: Boolean(touchedFields.name && validation.name)
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFieldText, {
    "data-test-subj": "createAgentPolicyNameField",
    disabled: agentPolicy.is_managed === true,
    fullWidth: true,
    value: agentPolicy.name,
    onChange: e => updateAgentPolicy({
      name: e.target.value
    }),
    isInvalid: Boolean(touchedFields.name && validation.name),
    onBlur: () => setTouchedFields({
      ...touchedFields,
      name: true
    }),
    placeholder: _i18n.i18n.translate('xpack.fleet.agentPolicyForm.nameFieldPlaceholder', {
      defaultMessage: 'Choose a name'
    })
  }));
};
exports.AgentPolicyGeneralFields = AgentPolicyGeneralFields;