/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.apm_bundle_jsonpfunction=window.apm_bundle_jsonpfunction||[]).push([[26],{74:function(e,r,i){"use strict";i.r(r),i.d(r,"APMLocatorPayloadValidator",(function(){return c})),i.d(r,"getPathForServiceDetail",(function(){return v}));var s=i(34),a=i(88),n=i(148),t=i(149),o=i(481);const c=s.union([s.type({serviceName:s[void 0]}),s.intersection([s.type({serviceName:s.string}),s.type({dashboardId:s.string}),s.type({query:t.a})]),s.intersection([s.type({serviceName:s.string}),s.partial({dashboardId:s[void 0]}),s.partial({serviceOverviewTab:s.keyof({traces:null,metrics:null,logs:null,errors:null})}),s.type({query:t.a})])]);function v(e,{from:r,to:i,isComparisonEnabledByDefault:s,defaultEnvironment:t}){const v=c.decode(e);if(!Object(a.isRight)(v))throw new Error(n.PathReporter.report(v).join("\n"));const d={kuery:"",serviceGroup:"",comparisonEnabled:s,rangeFrom:r,rangeTo:i,environment:t};if(!e.serviceName)return o.a.link("/services",{query:d});let u;if(void 0!==e.dashboardId){const r="/services/{serviceName}/dashboards";return u=o.a.link(r,{path:{serviceName:e.serviceName},query:{...d,...e.query,dashboardId:e.dashboardId}}),u}{const r={logs:"/services/{serviceName}/logs",metrics:"/services/{serviceName}/metrics",traces:"/services/{serviceName}/transactions",errors:"/services/{serviceName}/errors",default:"/services/{serviceName}/overview"}[e.serviceOverviewTab||"default"],i={...d,...e.query};u=o.a.link(r,{path:{serviceName:e.serviceName},query:i})}return u}}}]);