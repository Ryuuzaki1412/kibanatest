"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SOURCE_FEATURES_SYNC_FREQUENCY_TITLE = exports.SOURCE_FEATURES_SYNC_FREQUENCY_TIME = exports.SOURCE_FEATURES_SYNCED_ITEMS_TITLE = exports.SOURCE_FEATURES_SEARCHABLE_TITLE = exports.SOURCE_FEATURES_SEARCHABLE_DESCRIPTION = exports.SOURCE_FEATURES_REMOTE_FEATURE_TITLE = exports.SOURCE_FEATURES_REMOTE_FEATURE_DESCRIPTION = exports.SOURCE_FEATURES_PRIVATE_FEATURE_TITLE = exports.SOURCE_FEATURES_PRIVATE_FEATURE_DESCRIPTION = exports.SOURCE_FEATURES_GLOBAL_ACCESS_PERMISSIONS_FEATURE_TITLE = exports.SOURCE_FEATURES_GLOBAL_ACCESS_PERMISSIONS_FEATURE_DESCRIPTION = exports.SOURCE_FEATURES_DOCUMENT_LEVEL_PERMISSIONS_TITLE = exports.SOURCE_FEATURES_DOCUMENT_LEVEL_PERMISSIONS_FEATURE = exports.SAVE_CUSTOM_BODY1 = exports.OAUTH_SAVE_CONFIG_BUTTON = exports.OAUTH_BACK_BUTTON = exports.INCLUDED_FEATURES_TITLE = exports.CONNECT_WHICH_OPTION_LINK = exports.CONNECT_NOT_SYNCED_TITLE = exports.CONNECT_NOT_SYNCED_TEXT = exports.CONNECT_NEEDS_PERMISSIONS = exports.CONNECT_DOC_PERMISSIONS_TITLE = exports.CONNECT_DOC_PERMISSIONS_LABEL = exports.CONFIG_OAUTH_LABEL = exports.CONFIG_OAUTH_BUTTON = exports.CONFIG_INTRO_STEPS_TEXT = exports.CONFIG_INTRO_STEP2_TITLE = exports.CONFIG_INTRO_STEP2_TEXT = exports.CONFIG_INTRO_STEP2_HEADING = exports.CONFIG_INTRO_STEP1_TEXT = exports.CONFIG_INTRO_STEP1_HEADING = exports.CONFIG_INTRO_STEP1_BADGE = exports.CONFIG_INTRO_ALT_TEXT = exports.CONFIG_CUSTOM_LINK_TEXT = exports.CONFIG_CUSTOM_BUTTON = exports.CONFIG_COMPLETED_PRIVATE_SOURCES_DOCS_LINK = exports.CONFIG_COMPLETED_PRIVATE_SOURCES_DISABLED_LINK = exports.CONFIG_COMPLETED_CONFIGURE_NEW_BUTTON = exports.CONFIGURED_SOURCES_TITLE = exports.CONFIGURED_SOURCES_LIST_UNCONNECTED_TOOLTIP = exports.CONFIGURED_SOURCES_LIST_ACCOUNT_ONLY_TOOLTIP = exports.CONFIGURED_SOURCES_EMPTY_STATE = exports.CONFIGURED_SOURCES_EMPTY_BODY = exports.AVAILABLE_SOURCE_TITLE = exports.AVAILABLE_SOURCE_EMPTY_STATE = exports.AVAILABLE_SOURCE_CUSTOM_SOURCE_BUTTON = exports.AVAILABLE_SOURCE_BODY = exports.ADD_SOURCE_PRIVATE_SOURCE_DESCRIPTION = exports.ADD_SOURCE_PRIVATE_SOURCES_TITLE = exports.ADD_SOURCE_PLACEHOLDER = exports.ADD_SOURCE_ORG_SOURCE_DESCRIPTION = exports.ADD_SOURCE_ORG_SOURCES_TITLE = exports.ADD_SOURCE_NO_SOURCES_TITLE = exports.ADD_SOURCE_NEW_SOURCE_DESCRIPTION = exports.ADD_SOURCE_EMPTY_TITLE = exports.ADD_SOURCE_EMPTY_BODY = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ADD_SOURCE_NEW_SOURCE_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.addSourceList.newSourceDescription', {
  defaultMessage: 'When configuring and connecting a source, you are creating distinct entities with searchable content synchronized from the content platform itself. A source can be added using one of the available source connectors or via Custom API Sources, for additional flexibility. '
});
exports.ADD_SOURCE_NEW_SOURCE_DESCRIPTION = ADD_SOURCE_NEW_SOURCE_DESCRIPTION;
const ADD_SOURCE_ORG_SOURCE_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.addSourceList.orgSourceDescription', {
  defaultMessage: 'Organizational content sources are available to your entire organization or can be assigned to specific user groups.'
});
exports.ADD_SOURCE_ORG_SOURCE_DESCRIPTION = ADD_SOURCE_ORG_SOURCE_DESCRIPTION;
const ADD_SOURCE_PRIVATE_SOURCE_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.addSourceList.privateSourceDescription', {
  defaultMessage: 'Connect a new source to add its content and documents to your search experience.'
});
exports.ADD_SOURCE_PRIVATE_SOURCE_DESCRIPTION = ADD_SOURCE_PRIVATE_SOURCE_DESCRIPTION;
const ADD_SOURCE_NO_SOURCES_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.addSourceList.noSourcesTitle', {
  defaultMessage: 'Configure and connect your first content source'
});
exports.ADD_SOURCE_NO_SOURCES_TITLE = ADD_SOURCE_NO_SOURCES_TITLE;
const ADD_SOURCE_ORG_SOURCES_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.addSourceList.orgSourcesTitle', {
  defaultMessage: 'Add an organizational content source'
});
exports.ADD_SOURCE_ORG_SOURCES_TITLE = ADD_SOURCE_ORG_SOURCES_TITLE;
const ADD_SOURCE_PRIVATE_SOURCES_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.addSourceList.privateSourcesTitle', {
  defaultMessage: 'Add a new content source'
});
exports.ADD_SOURCE_PRIVATE_SOURCES_TITLE = ADD_SOURCE_PRIVATE_SOURCES_TITLE;
const ADD_SOURCE_PLACEHOLDER = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.addSourceList.placeholder', {
  defaultMessage: 'Filter sources...'
});
exports.ADD_SOURCE_PLACEHOLDER = ADD_SOURCE_PLACEHOLDER;
const ADD_SOURCE_EMPTY_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.addSourceList.emptyTitle', {
  defaultMessage: 'No available sources'
});
exports.ADD_SOURCE_EMPTY_TITLE = ADD_SOURCE_EMPTY_TITLE;
const ADD_SOURCE_EMPTY_BODY = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.addSourceList.emptyBody', {
  defaultMessage: 'Sources will be available for search when an administrator adds them to this organization.'
});
exports.ADD_SOURCE_EMPTY_BODY = ADD_SOURCE_EMPTY_BODY;
const AVAILABLE_SOURCE_EMPTY_STATE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.availableSourceList.emptyState', {
  defaultMessage: 'No available sources matching your query.'
});
exports.AVAILABLE_SOURCE_EMPTY_STATE = AVAILABLE_SOURCE_EMPTY_STATE;
const AVAILABLE_SOURCE_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.availableSourceList.title', {
  defaultMessage: 'Available for configuration'
});
exports.AVAILABLE_SOURCE_TITLE = AVAILABLE_SOURCE_TITLE;
const AVAILABLE_SOURCE_BODY = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.availableSourceList.body', {
  defaultMessage: 'Configure an available source or build your own with the '
});
exports.AVAILABLE_SOURCE_BODY = AVAILABLE_SOURCE_BODY;
const AVAILABLE_SOURCE_CUSTOM_SOURCE_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.availableSourceList.customSource.button', {
  defaultMessage: 'Custom API Source'
});
exports.AVAILABLE_SOURCE_CUSTOM_SOURCE_BUTTON = AVAILABLE_SOURCE_CUSTOM_SOURCE_BUTTON;
const CONFIG_COMPLETED_PRIVATE_SOURCES_DISABLED_LINK = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configCompleted.privateDisabled.link', {
  defaultMessage: 'enable private source connection'
});
exports.CONFIG_COMPLETED_PRIVATE_SOURCES_DISABLED_LINK = CONFIG_COMPLETED_PRIVATE_SOURCES_DISABLED_LINK;
const CONFIG_COMPLETED_PRIVATE_SOURCES_DOCS_LINK = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configCompleted.privateDisabled.button', {
  defaultMessage: 'Learn more about private content sources.'
});
exports.CONFIG_COMPLETED_PRIVATE_SOURCES_DOCS_LINK = CONFIG_COMPLETED_PRIVATE_SOURCES_DOCS_LINK;
const CONFIG_COMPLETED_CONFIGURE_NEW_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configCompleted.configureNew.button', {
  defaultMessage: 'Configure a new content source'
});
exports.CONFIG_COMPLETED_CONFIGURE_NEW_BUTTON = CONFIG_COMPLETED_CONFIGURE_NEW_BUTTON;
const CONFIG_INTRO_ALT_TEXT = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configIntro.alt.text', {
  defaultMessage: 'Connection illustration'
});
exports.CONFIG_INTRO_ALT_TEXT = CONFIG_INTRO_ALT_TEXT;
const CONFIG_INTRO_STEPS_TEXT = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configIntro.steps.text', {
  defaultMessage: 'Quick setup, then all of your documents will be searchable.'
});
exports.CONFIG_INTRO_STEPS_TEXT = CONFIG_INTRO_STEPS_TEXT;
const CONFIG_INTRO_STEP1_HEADING = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configIntro.step1.heading', {
  defaultMessage: 'Step 1'
});
exports.CONFIG_INTRO_STEP1_HEADING = CONFIG_INTRO_STEP1_HEADING;
const CONFIG_INTRO_STEP1_BADGE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configIntro.step1.badge', {
  defaultMessage: 'One-Time Action'
});
exports.CONFIG_INTRO_STEP1_BADGE = CONFIG_INTRO_STEP1_BADGE;
const CONFIG_INTRO_STEP1_TEXT = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configIntro.step1.text', {
  defaultMessage: 'Setup a secure OAuth application through the content source that you or your team will use to connect and synchronize content. You only have to do this once per content source.'
});
exports.CONFIG_INTRO_STEP1_TEXT = CONFIG_INTRO_STEP1_TEXT;
const CONFIG_INTRO_STEP2_HEADING = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configIntro.step2.heading', {
  defaultMessage: 'Step 2'
});
exports.CONFIG_INTRO_STEP2_HEADING = CONFIG_INTRO_STEP2_HEADING;
const CONFIG_INTRO_STEP2_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configIntro.step2.title', {
  defaultMessage: 'Connect the content source'
});
exports.CONFIG_INTRO_STEP2_TITLE = CONFIG_INTRO_STEP2_TITLE;
const CONFIG_INTRO_STEP2_TEXT = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configIntro.step2.text', {
  defaultMessage: 'Use the new OAuth application to connect any number of instances of the content source to Workplace Search.'
});
exports.CONFIG_INTRO_STEP2_TEXT = CONFIG_INTRO_STEP2_TEXT;
const CONFIG_CUSTOM_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configCustom.button', {
  defaultMessage: 'Create Custom API Source'
});
exports.CONFIG_CUSTOM_BUTTON = CONFIG_CUSTOM_BUTTON;
const CONFIG_CUSTOM_LINK_TEXT = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configCustom.docs.link.text', {
  defaultMessage: 'Read the documentation'
});
exports.CONFIG_CUSTOM_LINK_TEXT = CONFIG_CUSTOM_LINK_TEXT;
const CONFIG_OAUTH_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configOauth.label', {
  defaultMessage: 'Select GitHub organizations to sync'
});
exports.CONFIG_OAUTH_LABEL = CONFIG_OAUTH_LABEL;
const CONFIG_OAUTH_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configOauth.button', {
  defaultMessage: 'Complete connection'
});
exports.CONFIG_OAUTH_BUTTON = CONFIG_OAUTH_BUTTON;
const CONFIGURED_SOURCES_LIST_UNCONNECTED_TOOLTIP = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configuredSources.unConnectedTooltip', {
  defaultMessage: 'No connected sources'
});
exports.CONFIGURED_SOURCES_LIST_UNCONNECTED_TOOLTIP = CONFIGURED_SOURCES_LIST_UNCONNECTED_TOOLTIP;
const CONFIGURED_SOURCES_LIST_ACCOUNT_ONLY_TOOLTIP = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configuredSources.accountOnlyTooltip', {
  defaultMessage: 'Private content source. Each user must add the content source from their own personal dashboard.'
});
exports.CONFIGURED_SOURCES_LIST_ACCOUNT_ONLY_TOOLTIP = CONFIGURED_SOURCES_LIST_ACCOUNT_ONLY_TOOLTIP;
const CONFIGURED_SOURCES_EMPTY_STATE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configuredSources.emptyState', {
  defaultMessage: 'There are no configured sources matching your query.'
});
exports.CONFIGURED_SOURCES_EMPTY_STATE = CONFIGURED_SOURCES_EMPTY_STATE;
const CONFIGURED_SOURCES_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configuredSources.title', {
  defaultMessage: 'Configured content sources'
});
exports.CONFIGURED_SOURCES_TITLE = CONFIGURED_SOURCES_TITLE;
const CONFIGURED_SOURCES_EMPTY_BODY = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.configuredSources.body', {
  defaultMessage: 'Configured and ready for connection.'
});
exports.CONFIGURED_SOURCES_EMPTY_BODY = CONFIGURED_SOURCES_EMPTY_BODY;
const OAUTH_SAVE_CONFIG_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.saveConfig.button', {
  defaultMessage: 'Save configuration'
});
exports.OAUTH_SAVE_CONFIG_BUTTON = OAUTH_SAVE_CONFIG_BUTTON;
const OAUTH_BACK_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.back.button', {
  defaultMessage: ' Go back'
});
exports.OAUTH_BACK_BUTTON = OAUTH_BACK_BUTTON;
const SAVE_CUSTOM_BODY1 = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.saveCustom.body1', {
  defaultMessage: 'Your endpoints are ready to accept requests.'
});
exports.SAVE_CUSTOM_BODY1 = SAVE_CUSTOM_BODY1;
const INCLUDED_FEATURES_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.includedFeaturesTitle', {
  defaultMessage: 'Included features'
});
exports.INCLUDED_FEATURES_TITLE = INCLUDED_FEATURES_TITLE;
const SOURCE_FEATURES_SYNC_FREQUENCY_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.syncFrequency.title', {
  defaultMessage: 'Syncs every 2 hours'
});
exports.SOURCE_FEATURES_SYNC_FREQUENCY_TITLE = SOURCE_FEATURES_SYNC_FREQUENCY_TITLE;
const SOURCE_FEATURES_SYNC_FREQUENCY_TIME = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.syncFrequency.time', {
  defaultMessage: '2 hours'
});
exports.SOURCE_FEATURES_SYNC_FREQUENCY_TIME = SOURCE_FEATURES_SYNC_FREQUENCY_TIME;
const SOURCE_FEATURES_SYNCED_ITEMS_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.syncedItems.title', {
  defaultMessage: 'Synced items'
});
exports.SOURCE_FEATURES_SYNCED_ITEMS_TITLE = SOURCE_FEATURES_SYNCED_ITEMS_TITLE;
const SOURCE_FEATURES_SEARCHABLE_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.searchable.title', {
  defaultMessage: 'Searchable content'
});
exports.SOURCE_FEATURES_SEARCHABLE_TITLE = SOURCE_FEATURES_SEARCHABLE_TITLE;
const SOURCE_FEATURES_SEARCHABLE_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.searchable.description', {
  defaultMessage: 'The following items are searchable:'
});
exports.SOURCE_FEATURES_SEARCHABLE_DESCRIPTION = SOURCE_FEATURES_SEARCHABLE_DESCRIPTION;
const SOURCE_FEATURES_REMOTE_FEATURE_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.remote.title', {
  defaultMessage: 'Always up-to-date'
});
exports.SOURCE_FEATURES_REMOTE_FEATURE_TITLE = SOURCE_FEATURES_REMOTE_FEATURE_TITLE;
const SOURCE_FEATURES_REMOTE_FEATURE_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.remote.description', {
  defaultMessage: 'Message data and other information is searchable in real-time from the Workplace Search experience.'
});
exports.SOURCE_FEATURES_REMOTE_FEATURE_DESCRIPTION = SOURCE_FEATURES_REMOTE_FEATURE_DESCRIPTION;
const SOURCE_FEATURES_PRIVATE_FEATURE_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.private.title', {
  defaultMessage: 'Always private'
});
exports.SOURCE_FEATURES_PRIVATE_FEATURE_TITLE = SOURCE_FEATURES_PRIVATE_FEATURE_TITLE;
const SOURCE_FEATURES_PRIVATE_FEATURE_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.private.description', {
  defaultMessage: 'Results returned are specific and relevant to you. Connecting this source does not expose your personal data to other search users - only you.'
});
exports.SOURCE_FEATURES_PRIVATE_FEATURE_DESCRIPTION = SOURCE_FEATURES_PRIVATE_FEATURE_DESCRIPTION;
const SOURCE_FEATURES_GLOBAL_ACCESS_PERMISSIONS_FEATURE_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.globalAccessPermissions.title', {
  defaultMessage: 'Global access permissions'
});
exports.SOURCE_FEATURES_GLOBAL_ACCESS_PERMISSIONS_FEATURE_TITLE = SOURCE_FEATURES_GLOBAL_ACCESS_PERMISSIONS_FEATURE_TITLE;
const SOURCE_FEATURES_GLOBAL_ACCESS_PERMISSIONS_FEATURE_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.globalAccessPermissions.description', {
  defaultMessage: 'All documents accessible to the connecting service user will be synchronized and made available to the organization’s users, or group’s users. Documents are immediately available for search'
});
exports.SOURCE_FEATURES_GLOBAL_ACCESS_PERMISSIONS_FEATURE_DESCRIPTION = SOURCE_FEATURES_GLOBAL_ACCESS_PERMISSIONS_FEATURE_DESCRIPTION;
const SOURCE_FEATURES_DOCUMENT_LEVEL_PERMISSIONS_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.documentLevelPermissions.title', {
  defaultMessage: 'Document-level permissions available with Platinum license'
});
exports.SOURCE_FEATURES_DOCUMENT_LEVEL_PERMISSIONS_TITLE = SOURCE_FEATURES_DOCUMENT_LEVEL_PERMISSIONS_TITLE;
const SOURCE_FEATURES_DOCUMENT_LEVEL_PERMISSIONS_FEATURE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.sourceFeatures.documentLevelPermissions.text', {
  defaultMessage: 'Document-level permissions manage user content access based on defined rules. Allow or deny access to certain documents for individuals and groups.'
});
exports.SOURCE_FEATURES_DOCUMENT_LEVEL_PERMISSIONS_FEATURE = SOURCE_FEATURES_DOCUMENT_LEVEL_PERMISSIONS_FEATURE;
const CONNECT_WHICH_OPTION_LINK = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.connect.whichOption.link', {
  defaultMessage: 'Which option should I choose?'
});
exports.CONNECT_WHICH_OPTION_LINK = CONNECT_WHICH_OPTION_LINK;
const CONNECT_DOC_PERMISSIONS_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.connect.permissions.label', {
  defaultMessage: 'Enable document-level permission synchronization'
});
exports.CONNECT_DOC_PERMISSIONS_LABEL = CONNECT_DOC_PERMISSIONS_LABEL;
const CONNECT_DOC_PERMISSIONS_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.connect.permissions.title', {
  defaultMessage: 'Document-level permissions'
});
exports.CONNECT_DOC_PERMISSIONS_TITLE = CONNECT_DOC_PERMISSIONS_TITLE;
const CONNECT_NEEDS_PERMISSIONS = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.connect.needsPermissions.text', {
  defaultMessage: 'Document-level permission information will be synchronized. Additional configuration is required following the initial connection before documents are available for search.'
});
exports.CONNECT_NEEDS_PERMISSIONS = CONNECT_NEEDS_PERMISSIONS;
const CONNECT_NOT_SYNCED_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.connect.notSynced.title', {
  defaultMessage: 'Document-level permissions will not be synchronized'
});
exports.CONNECT_NOT_SYNCED_TITLE = CONNECT_NOT_SYNCED_TITLE;
const CONNECT_NOT_SYNCED_TEXT = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.connect.notSynced.text', {
  defaultMessage: 'All documents accessible to the connecting service user will be synchronized and made available to the organization’s users, or group’s users. Documents are immediately available for search. '
});
exports.CONNECT_NOT_SYNCED_TEXT = CONNECT_NOT_SYNCED_TEXT;