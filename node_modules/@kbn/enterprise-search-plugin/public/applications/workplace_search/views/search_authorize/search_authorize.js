"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SearchAuthorize = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRouterDom = require("react-router-dom");
var _kea = require("kea");
var _eui = require("@elastic/eui");
var _flash_messages = require("../../../shared/flash_messages");
var _loading = require("../../../shared/loading");
var _app_logic = require("../../app_logic");
var _search_authorize_logic = require("./search_authorize_logic");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const SearchAuthorize = () => {
  const {
    search
  } = (0, _reactRouterDom.useLocation)();
  const {
    initializeSearchAuth
  } = (0, _kea.useActions)(_search_authorize_logic.SearchAuthorizeLogic);
  const {
    searchOAuth
  } = (0, _kea.useValues)(_app_logic.AppLogic);
  const {
    redirectPending
  } = (0, _kea.useValues)(_search_authorize_logic.SearchAuthorizeLogic);
  (0, _react.useEffect)(() => {
    if (searchOAuth.clientId) {
      initializeSearchAuth(searchOAuth, search);
    }
  }, [searchOAuth]);
  if (redirectPending) return /*#__PURE__*/_react.default.createElement(_loading.Loading, null);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPage, {
    restrictWidth: true
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiPageBody, null, /*#__PURE__*/_react.default.createElement(_flash_messages.FlashMessages, null)));
};
exports.SearchAuthorize = SearchAuthorize;