/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.maps_bundle_jsonpfunction=window.maps_bundle_jsonpfunction||[]).push([[19,9],{81:function(e,n,t){"use strict";t.r(n),t.d(n,"getKibanaTileMap",(function(){return i})),t.d(n,"getEmsFileLayers",(function(){return c})),t.d(n,"getEmsTmsServices",(function(){return r})),t.d(n,"isRetina",(function(){return d}));var s=t(5),a=t(20);function i(){const e=Object(s.A)();return e.config.tilemap?e.config.tilemap:{}}async function c(){return Object(s.l)().isEMSEnabled()?(await l()).getFileLayers():[]}async function r(){return Object(s.l)().isEMSEnabled()?(await l()).getTMSServices():[]}let o,u=null;async function l(){u||(u=new Promise((async(e,n)=>{try{e(await Object(s.A)().createEMSClient())}catch(e){n(e)}})));const e=await u,n=Object(a.c)();return o!==n&&(o=n,e.addQueryParams({license:n||""})),e}function d(){return 2===window.devicePixelRatio}},98:function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));var s=t(1),a=t(5);function i(){const e=Object(a.l)();return e.isIncludeElasticMapsService()?e.isEMSUrlSet()?e.hasOnPremLicense()?s.i18n.translate("xpack.maps.source.ems.noOnPremConnectionDescription",{defaultMessage:"Cannot connect to {host}.",values:{host:e.getEMSRoot()}}):s.i18n.translate("xpack.maps.source.ems.noOnPremLicenseDescription",{defaultMessage:"An enterprise license is required to connect to local Elastic Maps Server installations."}):s.i18n.translate("xpack.maps.source.ems.noAccessDescription",{defaultMessage:"Kibana is unable to access Elastic Maps Service. Contact your system administrator."}):s.i18n.translate("xpack.maps.source.ems.disabledDescription",{defaultMessage:'Access to Elastic Maps Service has been disabled. Ask your system administrator to set "map.includeElasticMapsService" in kibana.yml.'})}}}]);