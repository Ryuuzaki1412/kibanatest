"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getEditModalOpener = exports.getCreateModalOpener = void 0;
var _react = _interopRequireDefault(require("react"));
var _eui = require("@elastic/eui");
var _public = require("@kbn/kibana-react-plugin/public");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; } /*
opyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
or more contributor license agreements. Licensed under the Elastic License
you may not use this file except in compliance with the Elastic License


const LoadingIndicator = () => /*#__PURE__*/_react.default.createElement(_eui.EuiDelayRender, null, /*#__PURE__*/_react.default.createElement(_eui.EuiLoadingSpinner, null));
const LazyCreateTagModal = /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./create_modal'))).then(({
  CreateTagModal
}) => ({
  default: CreateTagModal
})));
const LazyEditTagModal = /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./edit_modal'))).then(({
  EditTagModal
}) => ({
  default: EditTagModal
})));
const getCreateModalOpener = ({
  overlays,
  theme,
  tagClient,
  notifications
}) => async ({
  onCreate,
  defaultValues
}) => {
  const modal = overlays.openModal((0, _public.toMountPoint)( /*#__PURE__*/_react.default.createElement(_react.default.Suspense, {
    fallback: /*#__PURE__*/_react.default.createElement(LoadingIndicator, null)
  }, /*#__PURE__*/_react.default.createElement(LazyCreateTagModal, {
    defaultValues: defaultValues,
    onClose: () => {
      modal.close();
    },
    onSave: tag => {
      modal.close();
      onCreate(tag);
    },
    tagClient: tagClient,
    notifications: notifications
  })), {
    theme$: theme.theme$
  }));
  return modal;
};
exports.getCreateModalOpener = getCreateModalOpener;
const getEditModalOpener = ({
  overlays,
  theme,
  tagClient,
  notifications
}) => async ({
  tagId,
  onUpdate
}) => {
  const tag = await tagClient.get(tagId);
  const modal = overlays.openModal((0, _public.toMountPoint)( /*#__PURE__*/_react.default.createElement(_react.default.Suspense, {
    fallback: /*#__PURE__*/_react.default.createElement(LoadingIndicator, null)
  }, /*#__PURE__*/_react.default.createElement(LazyEditTagModal, {
    tag: tag,
    onClose: () => {
      modal.close();
    },
    onSave: saved => {
      modal.close();
      onUpdate(saved);
    },
    tagClient: tagClient,
    notifications: notifications
  })), {
    theme$: theme.theme$
  }));
  return modal;
};
exports.getEditModalOpener = getEditModalOpener;