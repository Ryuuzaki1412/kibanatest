"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DrilldownManager = void 0;
var React = _interopRequireWildcard(require("react"));
var _context = require("../context");
var _flyout_frame = require("../../components/flyout_frame");
var _drilldown_manager_content = require("./drilldown_manager_content");
var _drilldown_manager_title = require("../drilldown_manager_title");
var _drilldown_manager_footer = require("../drilldown_manager_footer");
var _hello_bar = require("../hello_bar");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const DrilldownManager = ({}) => {
  const drilldowns = (0, _context.useDrilldownManager)();
  const route = drilldowns.useRoute();
  const handleBack = route.length < 2 ? undefined : () => drilldowns.setRoute(route.slice(0, route.length - 1));
  return /*#__PURE__*/React.createElement(_flyout_frame.FlyoutFrame, {
    title: /*#__PURE__*/React.createElement(_drilldown_manager_title.RenderDrilldownManagerTitle, null),
    banner: /*#__PURE__*/React.createElement(_hello_bar.HelloBar, null),
    footer: /*#__PURE__*/React.createElement(_drilldown_manager_footer.RenderDrilldownManagerFooter, null),
    onClose: drilldowns.close,
    onBack: handleBack
  }, /*#__PURE__*/React.createElement(_drilldown_manager_content.DrilldownManagerContent, null));
};
exports.DrilldownManager = DrilldownManager;