/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[26],{272:function(e,t,a){"use strict";a.d(t,"a",(function(){return r})),a.d(t,"c",(function(){return d})),a.d(t,"b",(function(){return u}));var n=a(7),s=a(24),i=a(111),l=a(43);const o=60;function r(e){return function(e,t){var a,n;const l=Math.ceil(null!==(a=Object(i.v)(e.map((e=>e.analysis_config.bucket_span))))&&void 0!==a?a:0),r=Math.ceil(null!==(n=Object(i.v)(t.map((e=>e.query_delay)).filter(s.a)))&&void 0!==n?n:0),d=Math.max(2*o,2*l)+r+1;return`${Math.ceil(d/60)}m`}(e,e.map((e=>e.datafeed_config)))}function d(e){const t=Object(l.a)(e.analysis_config.bucket_span);if(null===t)throw new Error("Unable to resolve a bucket span length");return Math.ceil(o/t.asSeconds())}const c=["datafeed","mml","delayedData","errorMessages"];function u(e){var t,a,s,i,l,o,r,d,u,p,m,b,g,y;const h={datafeed:{enabled:null===(t=null==e||null===(a=e.datafeed)||void 0===a?void 0:a.enabled)||void 0===t||t},mml:{enabled:null===(s=null==e||null===(i=e.mml)||void 0===i?void 0:i.enabled)||void 0===s||s},delayedData:{enabled:null===(l=null==e||null===(o=e.delayedData)||void 0===o?void 0:o.enabled)||void 0===l||l,docsCount:null!==(r=null==e||null===(d=e.delayedData)||void 0===d?void 0:d.docsCount)&&void 0!==r?r:1,timeInterval:null!==(u=null==e||null===(p=e.delayedData)||void 0===p?void 0:p.timeInterval)&&void 0!==u?u:null},behindRealtime:{enabled:null===(m=null==e||null===(b=e.behindRealtime)||void 0===b?void 0:b.enabled)||void 0===m||m},errorMessages:{enabled:null===(g=null==e||null===(y=e.errorMessages)||void 0===y?void 0:y.enabled)||void 0===g||g}};return Object(n.pick)(h,c)}},691:function(e,t,a){"use strict";a.r(t),a.d(t,"registerEmbeddables",(function(){return n.f})),a.d(t,"registerManagementSection",(function(){return s.a})),a.d(t,"registerMlUiActions",(function(){return i.b})),a.d(t,"registerSearchLinks",(function(){return c})),a.d(t,"registerMlAlerts",(function(){return f})),a.d(t,"registerMapExtension",(function(){return w})),a.d(t,"registerCasesAttachments",(function(){return J}));var n=a(127),s=a(53),i=a(203),l=a(3),o=a(39),r=a(1);function d(e,t,a){const n=function(e,t,a){function n(e,t=!0){return!1===a?t&&e?o.AppNavLinkStatus.visible:o.AppNavLinkStatus.hidden:e?o.AppNavLinkStatus.default:o.AppNavLinkStatus.hidden}return{getOverviewLinkDeepLink:()=>{const t=n(e.isADEnabled||e.isDFAEnabled);return{id:"overview",title:l.i18n.translate("xpack.ml.deepLink.overview",{defaultMessage:"Overview"}),path:`/${r.b.OVERVIEW}`,navLinkStatus:t}},getAnomalyDetectionDeepLink:()=>{const t=n(e.isADEnabled);return{id:"anomalyDetection",title:l.i18n.translate("xpack.ml.deepLink.anomalyDetection",{defaultMessage:"Anomaly Detection"}),path:`/${r.b.ANOMALY_DETECTION_JOBS_MANAGE}`,navLinkStatus:t,deepLinks:[{id:"anomalyExplorer",title:l.i18n.translate("xpack.ml.deepLink.anomalyExplorer",{defaultMessage:"Anomaly explorer"}),path:`/${r.b.ANOMALY_EXPLORER}`,navLinkStatus:t},{id:"singleMetricViewer",title:l.i18n.translate("xpack.ml.deepLink.singleMetricViewer",{defaultMessage:"Single metric viewer"}),path:`/${r.b.SINGLE_METRIC_VIEWER}`,navLinkStatus:t}]}},getDataFrameAnalyticsDeepLink:()=>{const t=n(e.isDFAEnabled);return{id:"dataFrameAnalytics",title:l.i18n.translate("xpack.ml.deepLink.dataFrameAnalytics",{defaultMessage:"Data Frame Analytics"}),path:`/${r.b.DATA_FRAME_ANALYTICS_JOBS_MANAGE}`,navLinkStatus:t,deepLinks:[{id:"resultExplorer",title:l.i18n.translate("xpack.ml.deepLink.resultExplorer",{defaultMessage:"Results explorer"}),path:`/${r.b.DATA_FRAME_ANALYTICS_EXPLORATION}`,navLinkStatus:t},{id:"analyticsMap",title:l.i18n.translate("xpack.ml.deepLink.analyticsMap",{defaultMessage:"Analytics map"}),path:`/${r.b.DATA_FRAME_ANALYTICS_MAP}`,navLinkStatus:t}]}},getModelManagementDeepLink:()=>{const t=n(e.isDFAEnabled||e.isNLPEnabled);return{id:"modelManagement",title:l.i18n.translate("xpack.ml.deepLink.modelManagement",{defaultMessage:"Model Management"}),path:`/${r.b.TRAINED_MODELS_MANAGE}`,navLinkStatus:t,deepLinks:[{id:"nodesOverview",title:l.i18n.translate("xpack.ml.deepLink.trainedModels",{defaultMessage:"Trained Models"}),path:`/${r.b.TRAINED_MODELS_MANAGE}`,navLinkStatus:t},{id:"nodes",title:l.i18n.translate("xpack.ml.deepLink.nodes",{defaultMessage:"Nodes"}),path:`/${r.b.NODES}`,navLinkStatus:n(e.isDFAEnabled||e.isNLPEnabled,!1)}]}},getMemoryUsageDeepLink:()=>({id:"memoryUsage",title:l.i18n.translate("xpack.ml.deepLink.memoryUsage",{defaultMessage:"Memory Usage"}),path:`/${r.b.MEMORY_USAGE}`,navLinkStatus:n(t,!0)}),getSettingsDeepLink:()=>{const t=n(e.isADEnabled);return{id:"settings",title:l.i18n.translate("xpack.ml.deepLink.settings",{defaultMessage:"Settings"}),path:`/${r.b.SETTINGS}`,navLinkStatus:t,deepLinks:[{id:"calendarSettings",title:l.i18n.translate("xpack.ml.deepLink.calendarSettings",{defaultMessage:"Calendars"}),path:`/${r.b.CALENDARS_MANAGE}`,navLinkStatus:t},{id:"filterListsSettings",title:l.i18n.translate("xpack.ml.deepLink.filterListsSettings",{defaultMessage:"Filter Lists"}),path:`/${r.b.SETTINGS}`,navLinkStatus:t}]}},getAiopsDeepLink:()=>{const t=n(e.canUseAiops);return{id:"aiOps",title:l.i18n.translate("xpack.ml.deepLink.aiOps",{defaultMessage:"AIOps"}),path:`/${r.b.AIOPS_LOG_RATE_ANALYSIS_INDEX_SELECT}`,navLinkStatus:t,deepLinks:[{id:"logRateAnalysis",title:l.i18n.translate("xpack.ml.deepLink.logRateAnalysis",{defaultMessage:"Log Rate Analysis"}),path:`/${r.b.AIOPS_LOG_RATE_ANALYSIS_INDEX_SELECT}`,navLinkStatus:t},{id:"logPatternAnalysis",title:l.i18n.translate("xpack.ml.deepLink.logPatternAnalysis",{defaultMessage:"Log Pattern Analysis"}),path:`/${r.b.AIOPS_LOG_CATEGORIZATION_INDEX_SELECT}`,navLinkStatus:t},{id:"changePointDetections",title:l.i18n.translate("xpack.ml.deepLink.changePointDetection",{defaultMessage:"Change Point Detection"}),path:`/${r.b.AIOPS_CHANGE_POINT_DETECTION_INDEX_SELECT}`,navLinkStatus:t}]}},getNotificationsDeepLink:()=>({id:"notifications",title:l.i18n.translate("xpack.ml.deepLink.notifications",{defaultMessage:"Notifications"}),path:`/${r.b.NOTIFICATIONS}`,navLinkStatus:n(t)}),getDataVisualizerDeepLink:()=>({id:"dataVisualizer",title:l.i18n.translate("xpack.ml.deepLink.dataVisualizer",{defaultMessage:"Data Visualizer"}),path:`/${r.b.DATA_VISUALIZER}`,navLinkStatus:n(!0)}),getFileUploadDeepLink:()=>({id:"fileUpload",title:l.i18n.translate("xpack.ml.deepLink.fileUpload",{defaultMessage:"File Upload"}),keywords:["CSV","JSON"],path:`/${r.b.DATA_VISUALIZER_FILE}`,navLinkStatus:n(!0)}),getIndexDataVisualizerDeepLink:()=>({id:"indexDataVisualizer",title:l.i18n.translate("xpack.ml.deepLink.indexDataVisualizer",{defaultMessage:"Index Data Visualizer"}),path:`/${r.b.DATA_VISUALIZER_INDEX_SELECT}`,navLinkStatus:n(!0)}),getDataDriftDeepLink:()=>({id:"dataDrift",title:l.i18n.translate("xpack.ml.deepLink.dataDrift",{defaultMessage:"Data Drift"}),path:`/${r.b.DATA_DRIFT_INDEX_SELECT}`,navLinkStatus:n(!0)})}}(t,e,a);return Object.values(n).map((e=>e()))}function c(e,t,a,n){e.next((()=>({keywords:[l.i18n.translate("xpack.ml.keyword.ml",{defaultMessage:"ML"})],deepLinks:d(t,a,n)})))}var u=a(2),p=a.n(u),m=a(27),b=a(0),g=a(54),y=a(176),h=a(33);const A=Object(h.g)(),_=Object(y.c)({min:1});var v=a(272);function f(e,t,n){e.ruleTypeRegistry.register({id:m.g.ANOMALY_DETECTION,description:l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.description",{defaultMessage:"Alert when anomaly detection jobs results match the condition."}),iconClass:"bell",documentationUrl:e=>e.links.ml.alertingRules,ruleParamsExpression:Object(u.lazy)((()=>a.e(12).then(a.bind(null,696)))),validate:e=>{var t,a,n,s,i,o,r,d;const c={errors:{jobSelection:new Array,severity:new Array,resultType:new Array,topNBuckets:new Array,lookbackInterval:new Array}};return null!==(t=e.jobSelection)&&void 0!==t&&null!==(a=t.jobIds)&&void 0!==a&&a.length||null!==(n=e.jobSelection)&&void 0!==n&&null!==(s=n.groupIds)&&void 0!==s&&s.length||c.errors.jobSelection.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.jobSelection.errorMessage",{defaultMessage:"Job selection is required"})),(Array.isArray(null===(i=e.jobSelection)||void 0===i?void 0:i.groupIds)&&(null===(o=e.jobSelection)||void 0===o?void 0:o.groupIds.length)>0||Array.isArray(null===(r=e.jobSelection)||void 0===r?void 0:r.jobIds)&&(null===(d=e.jobSelection)||void 0===d?void 0:d.jobIds.length)>1)&&c.errors.jobSelection.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.singleJobSelection.errorMessage",{defaultMessage:"Only one job per rule is allowed"})),void 0===e.severity&&c.errors.severity.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.severity.errorMessage",{defaultMessage:"Anomaly severity is required"})),void 0===e.resultType&&c.errors.resultType.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.resultType.errorMessage",{defaultMessage:"Result type is required"})),e.lookbackInterval&&A(e.lookbackInterval)&&c.errors.lookbackInterval.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.lookbackInterval.errorMessage",{defaultMessage:"Lookback interval is invalid"})),"number"==typeof e.topNBuckets&&_(e.topNBuckets)&&c.errors.topNBuckets.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.topNBuckets.errorMessage",{defaultMessage:"Number of buckets is invalid"})),c},requiresAppContext:!1,defaultActionMessage:l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.defaultActionMessage",{defaultMessage:"[\\{\\{rule.name\\}\\}] Elastic Stack Machine Learning Alert:\n- Job IDs: \\{\\{context.jobIds\\}\\}\n- Time: \\{\\{context.timestampIso8601\\}\\}\n- Anomaly score: \\{\\{context.score\\}\\}\n\n\\{\\{context.message\\}\\}\n\n\\{\\{#context.topInfluencers.length\\}\\}\n  Top influencers:\n  \\{\\{#context.topInfluencers\\}\\}\n    \\{\\{influencer_field_name\\}\\} = \\{\\{influencer_field_value\\}\\} [\\{\\{score\\}\\}]\n  \\{\\{/context.topInfluencers\\}\\}\n\\{\\{/context.topInfluencers.length\\}\\}\n\n\\{\\{#context.topRecords.length\\}\\}\n  Top records:\n  \\{\\{#context.topRecords\\}\\}\n    \\{\\{function\\}\\}(\\{\\{field_name\\}\\}) \\{\\{by_field_value\\}\\}\\{\\{over_field_value\\}\\}\\{\\{partition_field_value\\}\\} [\\{\\{score\\}\\}]. Typical: \\{\\{typical\\}\\}, Actual: \\{\\{actual\\}\\}\n  \\{\\{/context.topRecords\\}\\}\n\\{\\{/context.topRecords.length\\}\\}\n\n\\{\\{! Replace kibanaBaseUrl if not configured in Kibana \\}\\}\n[Open in Anomaly Explorer](\\{\\{\\{kibanaBaseUrl\\}\\}\\}\\{\\{\\{context.anomalyExplorerUrl\\}\\}\\})\n"})}),function(e,t){e.ruleTypeRegistry.register({id:m.g.AD_JOBS_HEALTH,description:l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.description",{defaultMessage:"Alert when anomaly detection jobs experience operational issues. Enable suitable alerts for critically important jobs."}),iconClass:"bell",documentationUrl:e=>e.links.ml.alertingRules,ruleParamsExpression:Object(u.lazy)((()=>a.e(14).then(a.bind(null,702)))),validate:e=>{var t,a,n,s;const i={errors:{includeJobs:new Array,testsConfig:new Array,delayedData:new Array}};null!==(t=e.includeJobs)&&void 0!==t&&null!==(a=t.jobIds)&&void 0!==a&&a.length||null!==(n=e.includeJobs)&&void 0!==n&&null!==(s=n.groupIds)&&void 0!==s&&s.length||i.errors.includeJobs.push(l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.includeJobs.errorMessage",{defaultMessage:"Job selection is required"}));const o=Object(v.b)(e.testsConfig);return Object.values(o).every((e=>!1===(null==e?void 0:e.enabled)))&&i.errors.testsConfig.push(l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.testsConfig.errorMessage",{defaultMessage:"At least one health check must be enabled."})),o.delayedData.timeInterval&&A(o.delayedData.timeInterval)&&i.errors.delayedData.push(l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.testsConfig.delayedData.timeIntervalErrorMessage",{defaultMessage:"Invalid time interval"})),0===o.delayedData.docsCount&&i.errors.delayedData.push(l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.testsConfig.delayedData.docsCountErrorMessage",{defaultMessage:"Invalid number of documents"})),i},requiresAppContext:!1,defaultActionMessage:l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.defaultActionMessage",{defaultMessage:"[\\{\\{rule.name\\}\\}] Anomaly detection jobs health check result:\n\\{\\{context.message\\}\\}\n\\{\\{#context.results\\}\\}\n  Job ID: \\{\\{job_id\\}\\}\n  \\{\\{#datafeed_id\\}\\}Datafeed ID: \\{\\{datafeed_id\\}\\}\n  \\{\\{/datafeed_id\\}\\}\\{\\{#datafeed_state\\}\\}Datafeed state: \\{\\{datafeed_state\\}\\}\n  \\{\\{/datafeed_state\\}\\}\\{\\{#memory_status\\}\\}Memory status: \\{\\{memory_status\\}\\}\n  \\{\\{/memory_status\\}\\}\\{\\{#model_bytes\\}\\}Model size: \\{\\{model_bytes\\}\\}\n  \\{\\{/model_bytes\\}\\}\\{\\{#model_bytes_memory_limit\\}\\}Model memory limit: \\{\\{model_bytes_memory_limit\\}\\}\n  \\{\\{/model_bytes_memory_limit\\}\\}\\{\\{#peak_model_bytes\\}\\}Peak model bytes: \\{\\{peak_model_bytes\\}\\}\n  \\{\\{/peak_model_bytes\\}\\}\\{\\{#model_bytes_exceeded\\}\\}Model exceeded: \\{\\{model_bytes_exceeded\\}\\}\n  \\{\\{/model_bytes_exceeded\\}\\}\\{\\{#log_time\\}\\}Memory logging time: \\{\\{log_time\\}\\}\n  \\{\\{/log_time\\}\\}\\{\\{#failed_category_count\\}\\}Failed category count: \\{\\{failed_category_count\\}\\}\n  \\{\\{/failed_category_count\\}\\}\\{\\{#annotation\\}\\}Annotation: \\{\\{annotation\\}\\}\n  \\{\\{/annotation\\}\\}\\{\\{#missed_docs_count\\}\\}Number of missed documents: \\{\\{missed_docs_count\\}\\}\n  \\{\\{/missed_docs_count\\}\\}\\{\\{#end_timestamp\\}\\}Latest finalized bucket with missing docs: \\{\\{end_timestamp\\}\\}\n  \\{\\{/end_timestamp\\}\\}\\{\\{#errors\\}\\}Error message: \\{\\{message\\}\\} \\{\\{/errors\\}\\}\n\\{\\{/context.results\\}\\}\n"})})}(e),n&&function(e){e.registerNavigation(b.g,m.g.ANOMALY_DETECTION,(e=>{var t,a;const n=e.params,s=[...new Set([...null!==(t=n.jobSelection.jobIds)&&void 0!==t?t:[],...null!==(a=n.jobSelection.groupIds)&&void 0!==a?a:[]])];return Object(g.d)(b.b,{jobIds:s})}))}(n),Promise.all([t(),a.e(23).then(a.bind(null,686))]).then((([[t,a],{registerAlertsTableConfiguration:n}])=>{n(e,a.fieldFormats)}))}var k=a(5),S=a.n(k),M=a(70),L=a(13);class anomaly_source_factory_AnomalySourceFactory{constructor(e){S()(this,"type",M.SOURCE_TYPES.ES_ML_ANOMALIES),this.getStartServices=e}async getServices(){const[e,t]=await this.getStartServices(),{mlApiServicesProvider:n}=await Promise.resolve().then(a.bind(null,11)),s=t.share.url.locators.get(r.a);return{mlResultsService:n(new L.a(e.http)).results,mlLocator:s}}async create(){const{mlResultsService:e,mlLocator:t}=await this.getServices(),{AnomalySource:n}=await Promise.resolve().then(a.bind(null,375));return n.mlResultsService=e,n.mlLocator=t,n}}var j=a(29),E=a(172),x=a(7),I=a(15),D=a(6);const O=({jobsManagementPath:e,canCreateJobs:t})=>Object(D.jsx)(j.EuiEmptyPrompt,{layout:"vertical",hasBorder:!1,hasShadow:!1,color:"subdued",title:Object(D.jsx)("h2",null,Object(D.jsx)(I.FormattedMessage,{id:"xpack.ml.mapsAnomaliesLayerEmptyPrompt.createJobMessage",defaultMessage:"Create an anomaly detection job"})),body:Object(D.jsx)("p",null,Object(D.jsx)(I.FormattedMessage,{id:"xpack.ml.mapsAnomaliesLayerEmptyPrompt.emptyPromptText",defaultMessage:"Anomaly detection enables you to find unusual behaviour in your geographic data. Create a job that uses the lat_long function, which is necessary for the maps anomaly layer."})),actions:Object(D.jsx)(j.EuiButton,{color:"primary",href:e,fill:!0,iconType:"plusInCircle",isDisabled:!t,"data-test-subj":"mlMapsCreateNewJobButton"},Object(D.jsx)(I.FormattedMessage,{id:"xpack.ml.mapsAnomaliesLayerEmptyPrompt.createJobButtonText",defaultMessage:"Create job"})),"data-test-subj":"mlMapsAnomalyDetectionEmptyState"});class anomaly_job_selector_AnomalyJobSelector extends u.Component{constructor(...e){super(...e),S()(this,"_isMounted",!1),S()(this,"state",{}),S()(this,"onJobIdSelect",(e=>{const t=e[0].value;this._isMounted&&(this.setState({jobId:t}),this.props.onJobChange(t))}))}async _loadJobs(){const e=(await this.props.mlJobsService.jobIdsWithGeo()).map((e=>({label:e,value:e})));this._isMounted&&!Object(x.isEqual)(e,this.state.jobIdList)&&this.setState({jobIdList:e})}componentDidUpdate(e,t){this._loadJobs()}componentDidMount(){this._isMounted=!0,this._loadJobs()}componentWillUnmount(){this._isMounted=!1}render(){var e,t;return(null===(e=this.state.jobIdList)||void 0===e?void 0:e.length)&&(null===(t=this.state.jobIdList)||void 0===t?void 0:t.length)>0||!this.props.jobsManagementPath?Object(D.jsx)(j.EuiFormRow,{label:l.i18n.translate("xpack.ml.maps.jobIdLabel",{defaultMessage:"Job ID"}),display:"columnCompressed"},Object(D.jsx)(j.EuiComboBox,{singleSelection:!0,onChange:this.onJobIdSelect,options:this.state.jobIdList,selectedOptions:this.state.jobId?[{value:this.state.jobId,label:this.state.jobId}]:[]})):Object(D.jsx)(O,{jobsManagementPath:this.props.jobsManagementPath,canCreateJobs:this.props.canCreateJobs})}}var C=a(358);class create_anomaly_source_editor_CreateAnomalySourceEditor extends u.Component{constructor(...e){super(...e),S()(this,"_isMounted",!1),S()(this,"state",{}),S()(this,"onTypicalActualChange",(e=>{this._isMounted&&this.setState({typicalActual:e},(()=>{this.configChange()}))})),S()(this,"previewLayer",(e=>{this._isMounted&&this.setState({jobId:e},(()=>{this.configChange()}))}))}configChange(){this.state.jobId&&this.props.onSourceConfigChange({jobId:this.state.jobId,typicalActual:this.state.typicalActual||E.b.ACTUAL})}componentDidMount(){this._isMounted=!0}render(){const e=this.state.jobId?Object(D.jsx)(C.a,{onChange:this.onTypicalActualChange,typicalActual:this.state.typicalActual||E.b.ACTUAL}):null;return Object(D.jsx)(j.EuiPanel,null,Object(D.jsx)(anomaly_job_selector_AnomalyJobSelector,{onJobChange:this.previewLayer,mlJobsService:this.props.mlJobsService,jobsManagementPath:this.props.jobsManagementPath,canCreateJobs:this.props.canCreateJobs}),e)}}var T=a(375);class anomaly_layer_wizard_factory_AnomalyLayerWizardFactory{constructor(e,t,a){S()(this,"type","ML_ANOMALIES"),this.getStartServices=e,this.canGetJobs=t,this.canCreateJobs=a,this.canGetJobs=t,this.canCreateJobs=a}async getServices(){const[e,t]=await this.getStartServices(),{jobsApiProvider:n}=await Promise.resolve().then(a.bind(null,52));return{mlJobsService:n(new L.a(e.http)),mlLocator:t.share.url.locators.get(r.a)}}async create(){const{mlJobsService:e,mlLocator:t}=await this.getServices();let n;t?n=await t.getUrl({page:r.b.ANOMALY_DETECTION_JOBS_MANAGE}):console.error("Unable to get job management path.");const{anomalyLayerWizard:s}=await a.e(35).then(a.bind(null,687));return s.getIsDisabled=()=>!this.canGetJobs,s.renderWizard=({previewLayers:t})=>Object(D.jsx)(create_anomaly_source_editor_CreateAnomalySourceEditor,{onSourceConfigChange:e=>{if(!e)return void t([]);const a={id:Object(j.htmlIdGenerator)()(),type:M.LAYER_TYPE.GEOJSON_VECTOR,sourceDescriptor:T.AnomalySource.createDescriptor({jobId:e.jobId,typicalActual:e.typicalActual}),style:{type:"VECTOR",properties:{fillColor:E.a,lineColor:E.a},isTimeAware:!1}};t([a])},mlJobsService:e,jobsManagementPath:n,canCreateJobs:this.canCreateJobs}),s}}async function w(e,t,{canGetJobs:a,canCreateJobs:n}){const s=new anomaly_source_factory_AnomalySourceFactory(t.getStartServices),i=new anomaly_layer_wizard_factory_AnomalyLayerWizardFactory(t.getStartServices,a,n),l=await i.create();e.registerSource({type:s.type,ConstructorFunction:await s.create()}),e.registerLayerWizard(l)}const N="ml_anomaly_swimlane",R="ml_anomaly_charts";function J(e,t,s){!function(e,t,s){const i=Object(n.c)(N,t,s);e.attachmentFramework.registerPersistableState({id:N,icon:b.e,displayName:l.i18n.translate("xpack.ml.cases.anomalySwimLane.displayName",{defaultMessage:"Anomaly swim lane"}),getAttachmentViewObject:()=>({event:Object(D.jsx)(I.FormattedMessage,{id:"xpack.ml.cases.anomalySwimLane.embeddableAddedEvent",defaultMessage:"added anomaly swim lane"}),timelineAvatar:b.e,children:p.a.lazy((async()=>{const{initComponent:e}=await a.e(29).then(a.bind(null,689));return{default:e(s.fieldFormats,i)}}))})})}(e,t,s),function(e,t,s){const i=Object(n.c)(R,t,s);e.attachmentFramework.registerPersistableState({id:R,icon:b.e,displayName:l.i18n.translate("xpack.ml.cases.anomalyCharts.displayName",{defaultMessage:"Anomaly charts"}),getAttachmentViewObject:()=>({event:Object(D.jsx)(I.FormattedMessage,{id:"xpack.ml.cases.anomalyCharts.embeddableAddedEvent",defaultMessage:"added anomaly chart"}),timelineAvatar:b.e,children:p.a.lazy((async()=>{const{initComponent:e}=await a.e(28).then(a.bind(null,688));return{default:e(s.fieldFormats,i)}}))})})}(e,t,s)}}}]);