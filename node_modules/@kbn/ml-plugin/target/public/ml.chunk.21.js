/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[21],{157:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var s=a(23);const l=()=>Object(s.useKibana)()},201:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a(2);var s=a(12),l=a(10),o=a(23),i=a(136),n=a(177),r=a(6);function c(e,t,a,c,d,b){const{http:u,theme:j,i18n:m,overlays:x,application:{currentAppId$:O}}=t;return new Promise((async(g,p)=>{try{const p=()=>{E.close(),g()},E=x.openFlyout(Object(i.a)(Object(r.jsx)(o.KibanaContextProvider,{services:{...t,share:a,data:c,lens:b,dashboardService:d,mlServices:Object(n.getMlGlobalServices)(u)}},Object(r.jsx)(e,{onClose:()=>{p(),g()}})),{theme:j,i18n:m}),{"data-test-subj":"mlFlyoutLayerSelector",ownFocus:!0,onClose:p,size:"35vw"});O.pipe(Object(s.skip)(1),Object(s.takeUntil)(Object(l.from)(E.onClose)),Object(s.distinctUntilChanged)()).subscribe((()=>{E.close()}))}catch(e){p(e)}}))}},202:function(e,t,a){"use strict";a.d(t,"a",(function(){return E}));var s,l=a(2),o=a.n(l),i=a(155),n=a.n(i),r=a(29),c=a(3),d=a(15),b=a(107),u=a(106),j=a(111),m=a(44),x=a(149),O=a(1),g=a(157),p=a(6);!function(e){e[e.DEFAULT=0]="DEFAULT",e[e.VALIDATING=1]="VALIDATING",e[e.SAVING=2]="SAVING",e[e.SAVE_SUCCESS=3]="SAVE_SUCCESS",e[e.SAVE_FAILED=4]="SAVE_FAILED"}(s||(s={}));const E=({children:e,createADJobInWizard:t,createADJob:a,layer:i,layerIndex:b,embeddable:E,timeRange:y,incomingCreateError:F,outerFormComplete:f})=>{var I;const{services:{share:C,application:h,mlServices:{mlApiServices:v}}}=Object(g.a)(),[w,A]=Object(l.useState)(""),[k,M]=Object(l.useState)(!0),[T,L]=Object(l.useState)(!0),[J,_]=Object(l.useState)(u.b),[V,z]=Object(l.useState)(""),[D,G]=Object(l.useState)(""),[R,N]=Object(l.useState)(s.DEFAULT),[B,U]=Object(l.useState)(null),$=null!==(I=null==i?void 0:i.jobType)&&void 0!==I?I:u.f.GEO,P=Object(l.useCallback)((async e=>{const t=C.url.locators.get(O.a);if(t){const a=k?e===u.f.MULTI_METRIC||e===u.f.GEO?O.b.ANOMALY_EXPLORER:O.b.SINGLE_METRIC_VIEWER:O.b.ANOMALY_DETECTION_JOBS_MANAGE,s=k?{jobIds:[w],timeRange:y}:{jobId:w},l=await t.getUrl({page:a,pageState:s});h.navigateToUrl(l)}}),[C,k,w,y,h]);return n()((function(){if(void 0===w||""===w)return;z(""),G("");const e=Object(j.e)({job_id:w,analysis_config:{detectors:[],bucket_span:J}},void 0,{max_model_memory_limit:"",effective_max_model_memory_limit:""},!0);e.contains("job_id_invalid")?z(c.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobNameAllowedCharactersDescription",{defaultMessage:"Job ID can contain lowercase alphanumeric (a-z and 0-9), hyphens or underscores; must start and end with an alphanumeric character"})):e.contains("job_id_invalid_max_length")?z(c.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobIdInvalidMaxLengthErrorMessage",{defaultMessage:"Job ID must be no more than {maxLength, plural, one {# character} other {# characters}} long.",values:{maxLength:m.b}})):v.jobs.jobsExist([w]).then((e=>{e[w].exists&&z(c.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobNameAlreadyExists",{defaultMessage:"Job ID already exists. A job ID cannot be the same as an existing job or group."}))})).catch((e=>{console.error("Could not validate whether job ID exists")})),e.contains("bucket_span_invalid")&&G(Object(x.a)(J)),N(s.DEFAULT)}),500,[w,J]),Object(p.jsx)(o.a.Fragment,null,R!==s.SAVE_SUCCESS&&R!==s.SAVING||F?Object(p.jsx)(o.a.Fragment,null,null!=e?e:null,Object(p.jsx)(r.EuiSpacer,{size:"m"}),Object(p.jsx)(r.EuiForm,null,Object(p.jsx)(r.EuiFormRow,{label:c.i18n.translate("xpack.ml.newJob.wizard.jobDetailsStep.jobId.title",{defaultMessage:"Job ID"}),error:V,isInvalid:""!==V},Object(p.jsx)(r.EuiFieldText,{"data-test-subj":`mlLensLayerJobIdInput_${b}`,value:w,onChange:e=>{A(e.target.value),N(s.VALIDATING)}})),Object(p.jsx)(r.EuiSpacer,{size:"s"}),Object(p.jsx)(r.EuiAccordion,{"data-test-subj":`mlLensLayerAdditionalSettingsButton_${b}`,id:"additional-section",buttonContent:c.i18n.translate("xpack.ml.embeddables.lensLayerFlyout.createJobCallout.additionalSettings.title",{defaultMessage:"Additional settings"})},Object(p.jsx)(r.EuiSpacer,{size:"s"}),Object(p.jsx)(r.EuiFormRow,{label:c.i18n.translate("xpack.ml.newJob.wizard.pickFieldsStep.bucketSpan.placeholder",{defaultMessage:"Bucket span"}),error:D,isInvalid:""!==D},Object(p.jsx)(r.EuiFieldText,{"data-test-subj":`mlLensLayerBucketSpanInput_${b}`,value:J,onChange:e=>{_(e.target.value),N(s.VALIDATING)}})),Object(p.jsx)(r.EuiSpacer,{size:"l"}),Object(p.jsx)(r.EuiFormRow,null,Object(p.jsx)(r.EuiCheckbox,{id:"startJob","data-test-subj":`mlLensLayerStartJobCheckbox_${b}`,checked:k,onChange:e=>{return t=e.target.checked,M(t),void L(t&&T);var t},label:c.i18n.translate("xpack.ml.embeddables.lensLayerFlyout.createJobCallout.additionalSettings.start",{defaultMessage:"Start the job after saving"})})),Object(p.jsx)(r.EuiSpacer,{size:"s"}),Object(p.jsx)(r.EuiFormRow,null,Object(p.jsx)(r.EuiCheckbox,{id:"realTime",disabled:!1===k,"data-test-subj":`mlLensLayerRealTimeCheckbox_${b}`,checked:T,onChange:e=>L(e.target.checked),label:c.i18n.translate("xpack.ml.embeddables.lensLayerFlyout.createJobCallout.additionalSettings.realTime",{defaultMessage:"Leave the job running for new data"})})),Object(p.jsx)(r.EuiSpacer,{size:"m"}))),Object(p.jsx)(r.EuiSpacer,{size:"m"}),Object(p.jsx)(r.EuiFlexGroup,null,Object(p.jsx)(r.EuiFlexItem,null,Object(p.jsx)(r.EuiButton,{disabled:R===s.VALIDATING||""===w||""!==V||""!==D||!1===f,onClick:async function(){if(void 0===w||""===w)return;N(s.SAVING),U(null);const e=await a({jobId:w,bucketSpan:J,embeddable:E,startJob:k,runInRealTime:T}),t=S(e);null===t?N(s.SAVE_SUCCESS):(N(s.SAVE_FAILED),U(t))}.bind(null,b),size:"s","data-test-subj":`mlLensLayerCreateJobButton_${b}`},Object(p.jsx)(d.FormattedMessage,{id:"xpack.ml.embeddables.lensLayerFlyout.createJobButton.saving",defaultMessage:"Create job"}))),Object(p.jsx)(r.EuiFlexItem,{grow:!1},Object(p.jsx)(r.EuiButtonEmpty,{onClick:t.bind(null,b),size:"s",iconType:"popout",iconSide:"right","data-test-subj":`mlLensLayerCreateWithWizardButton_${b}`},Object(p.jsx)(d.FormattedMessage,{id:"xpack.ml.embeddables.lensLayerFlyout.createJobButton",defaultMessage:"Create job using wizard"}))))):null,R===s.SAVE_SUCCESS?Object(p.jsx)(o.a.Fragment,null,Object(p.jsx)(r.EuiFlexGroup,{gutterSize:"s","data-test-subj":`mlLensLayerCompatible.jobCreated.success_${b}`},Object(p.jsx)(r.EuiFlexItem,{grow:!1},Object(p.jsx)(r.EuiText,{size:"s"},Object(p.jsx)(r.EuiIcon,{type:"checkInCircleFilled",color:"success"}))),Object(p.jsx)(r.EuiFlexItem,null,Object(p.jsx)(r.EuiText,{size:"s"},Object(p.jsx)(d.FormattedMessage,{id:"xpack.ml.embeddables.flyout.flyoutAdditionalSettings.saveSuccess",defaultMessage:"Job created"})))),Object(p.jsx)(r.EuiSpacer,{size:"s"}),Object(p.jsx)(r.EuiButtonEmpty,{onClick:P.bind(null,$),flush:"left","data-test-subj":`mlLensLayerResultsButton_${b}`},!1===k?Object(p.jsx)(d.FormattedMessage,{id:"xpack.ml.embeddables.flyoutAdditionalSettings.saveSuccess.resultsLink.jobList",defaultMessage:"View in job management page"}):$===u.f.MULTI_METRIC||$===u.f.GEO?Object(p.jsx)(d.FormattedMessage,{id:"xpack.ml.embeddables.flyoutAdditionalSettings.saveSuccess.resultsLink.multiMetric",defaultMessage:"View results in Anomaly Explorer"}):Object(p.jsx)(d.FormattedMessage,{id:"xpack.ml.embeddables.flyoutAdditionalSettings.saveSuccess.resultsLink.singleMetric",defaultMessage:"View results in Single Metric Viewer"}))):null,R===s.SAVING&&void 0===F?Object(p.jsx)(o.a.Fragment,null,Object(p.jsx)(r.EuiFlexGroup,null,Object(p.jsx)(r.EuiFlexItem,{grow:!1},Object(p.jsx)(d.FormattedMessage,{id:"xpack.ml.embeddables.flyoutAdditionalSettings.creatingJob",defaultMessage:"Creating job"})),Object(p.jsx)(r.EuiFlexItem,{grow:!1},Object(p.jsx)(r.EuiLoadingSpinner,null)))):null,R===s.SAVE_FAILED&&null!==B?Object(p.jsx)(o.a.Fragment,null,Object(p.jsx)(r.EuiSpacer,null),Object(p.jsx)(r.EuiCallOut,{color:"danger",title:B.text},B.errorText)):null,F?Object(p.jsx)(o.a.Fragment,null,Object(p.jsx)(r.EuiSpacer,null),Object(p.jsx)(r.EuiCallOut,{color:"danger",title:F.text},F.errorText)):null)},S=e=>e.jobCreated.error?{text:c.i18n.translate("xpack.ml.embeddables.flyoutAdditionalSettings.jobCreateError.jobCreated",{defaultMessage:"Job could not be created."}),errorText:Object(b.b)(e.jobCreated.error)}:e.datafeedCreated.error?{text:c.i18n.translate("xpack.ml.embeddables.flyoutAdditionalSettings.jobCreateError.datafeedCreated",{defaultMessage:"Job created but datafeed could not be created."}),errorText:Object(b.b)(e.datafeedCreated.error)}:e.jobOpened.error?{text:c.i18n.translate("xpack.ml.embeddables.flyoutAdditionalSettings.jobCreateError.jobOpened",{defaultMessage:"Job and datafeed created but the job could not be opened."}),errorText:Object(b.b)(e.jobOpened.error)}:e.datafeedStarted.error?{text:c.i18n.translate("xpack.ml.embeddables.flyoutAdditionalSettings.jobCreateError.datafeedStarted",{defaultMessage:"Job and datafeed created but the datafeed could not be started."}),errorText:Object(b.b)(e.datafeedStarted.error)}:null},695:function(e,t,a){"use strict";a.r(t),a.d(t,"showMapVisToADJobFlyout",(function(){return g}));var s=a(2),l=a.n(s),o=a(6),i=a(15),n=a(29),r=a(3),c=a(231),d=a(157),b=a(202);const u=({embeddable:e,layer:t,layerIndex:a})=>{var u,j,m;const[x,O]=Object(s.useState)(null),[g,p]=Object(s.useState)(),{services:{data:E,share:S,uiSettings:y,dashboardService:F,mlServices:{mlApiServices:f}}}=Object(d.a)(),I=Object(s.useMemo)((()=>new c.QuickGeoJobCreator(y,E.query.timefilter.timefilter,F,f)),[E,y]),C=Object(s.useCallback)((()=>{Object(c.redirectToGeoJobWizard)(e,t.dataView.id,t.geoField,t.query,x,S)}),[null==t||null===(u=t.dataView)||void 0===u?void 0:u.id,e,x]),h=Object(s.useCallback)((async({jobId:e,bucketSpan:a,embeddable:s,startJob:l,runInRealTime:o})=>{try{return await I.createAndSaveGeoJob({jobId:e,bucketSpan:a,embeddable:s,startJob:l,runInRealTime:o,sourceDataView:t.dataView,geoField:t.geoField,layerLevelQuery:t.query,splitField:x})}catch(e){var i;return console.error(e),p({text:r.i18n.translate("xpack.ml.embeddables.geoJobFlyout.jobCreationError",{defaultMessage:"Job could not be created."}),errorText:null!==(i=e.message)&&void 0!==i?i:e}),{jobCreated:{success:!1},datafeedCreated:{success:!1},jobOpened:{success:!1},datafeedStarted:{success:!1}}}}),[I,e,x]),v=Object(s.useMemo)((()=>{const e=[];return x&&e.push({label:x,field:x}),e}),[x]),w=Object(s.useCallback)((e=>{const t=e[0];O(void 0!==t?t.field:null)}),[]);return Object(o.jsx)(l.a.Fragment,null,Object(o.jsx)(b.a,{layerIndex:a,createADJob:h,createADJobInWizard:C,embeddable:e,timeRange:e.getInput().timeRange,incomingCreateError:g},Object(o.jsx)(l.a.Fragment,null,Object(o.jsx)(n.EuiFlexGroup,{gutterSize:"s","data-test-subj":"mlMapLayerCompatible"},Object(o.jsx)(n.EuiFlexItem,{grow:!1},Object(o.jsx)(n.EuiText,{size:"s"},Object(o.jsx)(n.EuiIcon,{type:"checkInCircleFilled",color:"success"}))),Object(o.jsx)(n.EuiFlexItem,null,Object(o.jsx)(n.EuiText,{size:"s"},Object(o.jsx)(i.FormattedMessage,{id:"xpack.ml.embeddables.geoJobFlyout.createJobCalloutTitle.multiMetric",defaultMessage:"The {geoField} field can be used to create a geo job for {sourceDataViewTitle}",values:{geoField:t.geoField,sourceDataViewTitle:null===(j=t.dataView)||void 0===j?void 0:j.getIndexPattern()}})))),null!==(m=t.splitFieldOptions)&&void 0!==m&&m.length?Object(o.jsx)(l.a.Fragment,null,Object(o.jsx)(n.EuiSpacer,{size:"m"}),Object(o.jsx)(n.EuiAccordion,{"data-test-subj":"mlGeoJobAdditionalSettingsButton",id:"additional-section",buttonContent:r.i18n.translate("xpack.ml.embeddables.geoJobFlyout.createJobCallout.splitField.title",{defaultMessage:"Optionally select a field to split the data"})},Object(o.jsx)(n.EuiFormRow,{label:Object(o.jsx)(i.FormattedMessage,{id:"xpack.ml.embeddables.geoJobFlyout.selectSplitField",defaultMessage:"Split field"})},Object(o.jsx)(n.EuiComboBox,{singleSelection:{asPlainText:!0},options:t.splitFieldOptions,selectedOptions:v,onChange:w,isClearable:!0,"data-test-subj":"mlGeoJobSplitFieldSelect"})))):null)))},j=({noDataView:e})=>Object(o.jsx)(n.EuiFlexGroup,{gutterSize:"s",color:"subdued","data-test-subj":"mlMapLayerIncompatible"},Object(o.jsx)(n.EuiFlexItem,{grow:!1},Object(o.jsx)(n.EuiText,{size:"s"},Object(o.jsx)(n.EuiIcon,{type:"error",color:"subdued"}))),Object(o.jsx)(n.EuiFlexItem,null,Object(o.jsx)(n.EuiText,{color:"subdued",size:"s"},!0===e?Object(o.jsx)(i.FormattedMessage,{id:"xpack.ml.embeddables.geoJobFlyout.noDataViewError",defaultMessage:"There is no source data view for this layer. It cannot be used to create an anomaly detection job"}):Object(o.jsx)(i.FormattedMessage,{id:"xpack.ml.embeddables.geoJobFlyout.noTimeFieldError",defaultMessage:"The source data view for this layer does not contain a timestamp field. It cannot be used to create an anomaly detection job"})))),m=({layer:e,layerIndex:t,embeddable:a})=>{var s;return Object(o.jsx)(l.a.Fragment,null,Object(o.jsx)(n.EuiSplitPanel.Outer,{grow:!0},Object(o.jsx)(n.EuiSplitPanel.Inner,null,Object(o.jsx)(n.EuiFlexGroup,{gutterSize:"s",alignItems:"center",responsive:!1},Object(o.jsx)(n.EuiFlexItem,{grow:!1},Object(o.jsx)(n.EuiIcon,{type:"tokenGeo"})),Object(o.jsx)(n.EuiFlexItem,{grow:!0},Object(o.jsx)(n.EuiText,{color:null!==(s=e.dataView)&&void 0!==s&&s.timeFieldName?"":"subdued"},Object(o.jsx)("h5",null,e.layerDisplayName))))),Object(o.jsx)(n.EuiHorizontalRule,{margin:"none"}),Object(o.jsx)(n.EuiSplitPanel.Inner,{grow:!1,color:"plain"},e.dataView&&e.dataView.timeFieldName?Object(o.jsx)(u,{embeddable:a,layer:e,layerIndex:t}):Object(o.jsx)(j,{noDataView:void 0===e.dataView}))),Object(o.jsx)(n.EuiSpacer,null))},x=({onClose:e,embeddable:t})=>{const{euiTheme:a}=Object(n.useEuiTheme)(),[r,d]=Object(s.useState)([]);return Object(s.useEffect)((()=>{(new c.VisualizationExtractor).getResultLayersFromEmbeddable(t).then(d).catch((t=>{console.error("Layers could not be extracted from embeddable",t),e()}))}),[t,e]),Object(o.jsx)(l.a.Fragment,null,Object(o.jsx)(n.EuiFlyoutHeader,{hasBorder:!0},Object(o.jsx)(n.EuiTitle,{size:"s"},Object(o.jsx)("h3",null,Object(o.jsx)(i.FormattedMessage,{id:"xpack.ml.embeddables.geoJobFlyout.title",defaultMessage:"Create anomaly detection job"}))),Object(o.jsx)(n.EuiSpacer,{size:"m"}),Object(o.jsx)(n.EuiText,{size:"s"},Object(o.jsx)(i.FormattedMessage,{id:"xpack.ml.embeddables.geoJobFlyout.secondTitle",defaultMessage:"Create an anomaly detection lat_long job from map visualization {title}.",values:{title:t.getTitle()}}))),Object(o.jsx)(n.EuiFlyoutBody,{css:Object(o.css)({backgroundColor:a.colors.lightestShade},"","")},r.map(((e,a)=>Object(o.jsx)(m,{key:`${e.layerId}`,layer:e,layerIndex:a,embeddable:t})))),Object(o.jsx)(n.EuiFlyoutFooter,null,Object(o.jsx)(n.EuiFlexGroup,{justifyContent:"spaceBetween"},Object(o.jsx)(n.EuiFlexItem,{grow:!1},Object(o.jsx)(n.EuiButtonEmpty,{iconType:"cross",onClick:e,flush:"left"},Object(o.jsx)(i.FormattedMessage,{id:"xpack.ml.embeddables.geoJobFlyout.closeButton",defaultMessage:"Close"}))))))};var O=a(201);async function g(e,t,a,s,l){return Object(O.a)((({onClose:t})=>Object(o.jsx)(x,{embeddable:e,onClose:t})),t,a,s,l)}}}]);