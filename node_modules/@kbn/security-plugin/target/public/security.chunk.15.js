/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.security_bundle_jsonpfunction=window.security_bundle_jsonpfunction||[]).push([[15],{302:function(e,t,a){"use strict";a.r(t),a.d(t,"APIKeysGridPage",(function(){return R}));var s=a(7),i=a.n(s),n=a(3),c=a(52),l=a.n(c),r=a(2),o=a.n(r),u=a(13),d=a(29),p=a.n(d),y=a(55),m=a(4),j=a(6),g=a(5),b=a(81),x=a(11),O=a(25),f=a(70),M=a(80),h=a(104),F=a(106),k=a(17);function K(e,t){return Object(r.useMemo)((()=>Object(n.htmlIdGenerator)(e)(t)),[e,t])}var E=a(75),C=a(34);const v="/internal/security/api_key";class APIKeysAPIClient{constructor(e){this.http=e}async getApiKeys(){return await this.http.get(v)}async invalidateApiKeys(e,t=!1){return await this.http.post(`${v}/invalidate`,{body:JSON.stringify({apiKeys:e,isAdmin:t})})}async createApiKey(e){return await this.http.post(v,{body:JSON.stringify(e)})}async updateApiKey(e){return await this.http.put(v,{body:JSON.stringify(e)})}}var S=a(0);const A={name:"",type:"rest",customExpiration:!1,expiration:"",includeMetadata:!1,metadata:"{}",customPrivileges:!1,access:JSON.stringify({search:[{names:["*"]}],replication:[{names:["*"]}]},null,2),role_descriptors:"{}"},w=({onSuccess:e,onCancel:t,apiKey:a,canManageCrossClusterApiKeys:s=!1,readOnly:i=!1})=>{const{services:c}=Object(g.useKibana)(),{value:u,loading:d}=Object(k.c)(),[{value:y,loading:b},x]=p()((()=>new C.RolesAPIClient(c.http).getRoles()),[c.http]),O=Object(f.useFormik)({onSubmit:async t=>{try{if(a){const s=await new APIKeysAPIClient(c.http).updateApiKey(function(e,t,a){const s=a.includeMetadata?JSON.parse(a.metadata):"{}";return"cross_cluster"===e?{type:e,id:t,metadata:s,access:JSON.parse(a.access)}:{id:t,metadata:s,role_descriptors:a.customPrivileges?JSON.parse(a.role_descriptors):"{}"}}(a.type,a.id,t));null==e||e(s)}else{const a=await new APIKeysAPIClient(c.http).createApiKey(function(e){const{type:t,name:a}=e,s=e.customExpiration?`${e.expiration}d`:void 0,i=e.includeMetadata?JSON.parse(e.metadata):"{}";return"cross_cluster"===t?{type:t,name:a,expiration:s,metadata:i,access:JSON.parse(e.access)}:{name:a,expiration:s,metadata:i,role_descriptors:e.customPrivileges?JSON.parse(e.role_descriptors):"{}"}}(t));null==e||e(a)}}catch(e){throw e}},initialValues:a?P(a):A});Object(r.useEffect)((()=>{x()}),[]),Object(r.useEffect)((()=>{if(u&&y){const e=u.roles.reduce(((e,t)=>{const a=y.find((e=>e.name===t));return a&&(e[a.name]=a.elasticsearch),e}),{});O.touched.role_descriptors||a||O.setFieldValue("role_descriptors",JSON.stringify(e,null,2))}}),[u,y]);const v=d||b,w=!(!u||!a)&&u.username===a.username,T=!!a&&a.expiration&&l()(a.expiration).isBefore(),I=w&&!T,B=Object(E.a)([v]),N=K("formFlyout","title"),_=i||a&&!I,L=v||O.submitCount>0&&!O.isValid||i||a&&!I,D=a?i||!I?m.i18n.translate("xpack.security.accountManagement.apiKeyFlyout.viewTitle",{defaultMessage:"API key details"}):m.i18n.translate("xpack.security.accountManagement.apiKeyFlyout.updateTitle",{defaultMessage:"Update API key"}):m.i18n.translate("xpack.security.accountManagement.apiKeyFlyout.createTitle",{defaultMessage:"Create API key"}),z=a?m.i18n.translate("xpack.security.accountManagement.apiKeyFlyout.updateSubmitButton",{defaultMessage:"{isSubmitting, select, true{Updating API key…} other{Update API key}}",values:{isSubmitting:O.isSubmitting}}):m.i18n.translate("xpack.security.accountManagement.apiKeyFlyout.createSubmitButton",{defaultMessage:"{isSubmitting, select, true{Creating API key…} other{Create API key}}",values:{isSubmitting:O.isSubmitting}});return Object(S.jsx)(f.FormikProvider,{value:O},Object(S.jsx)(n.EuiFlyout,{onClose:t,"aria-labelledby":N,size:"m",ownFocus:!0},Object(S.jsx)(f.Form,{onSubmit:O.handleSubmit,style:{display:"flex",flexDirection:"column",height:"100%"}},Object(S.jsx)(n.EuiFlyoutHeader,{hasBorder:!0},Object(S.jsx)(n.EuiTitle,{size:"m"},Object(S.jsx)("h2",{id:N},D))),Object(S.jsx)(n.EuiFlyoutBody,null,Object(S.jsx)(n.EuiSkeletonText,{isLoading:v},a&&!i?w?T?Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(n.EuiCallOut,{iconType:"lock",title:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.readonlyExpiredWarning",defaultMessage:"You cannot update this API key, since it has already expired."})}),Object(S.jsx)(n.EuiSpacer,null)):null:Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(n.EuiCallOut,{iconType:"lock",title:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.readonlyOwnedByOtherUserWarning",defaultMessage:"You cannot update this API key, since it is owned by another user."})}),Object(S.jsx)(n.EuiSpacer,null)):null,Object(S.jsx)(F.a,{label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.nameLabel",defaultMessage:"Name"}),fullWidth:!0},Object(S.jsx)(h.a,{name:"name",inputRef:B,"data-test-subj":"apiKeyNameInput",disabled:i||!!a,validate:{required:m.i18n.translate("xpack.security.management.apiKeys.apiKeyFlyout.nameRequired",{defaultMessage:"Enter a name."})},fullWidth:!0})),a?Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(n.EuiSpacer,null),Object(S.jsx)(n.EuiFlexGroup,{gutterSize:"xl"},Object(S.jsx)(n.EuiFlexItem,{grow:!1},Object(S.jsx)(n.EuiFormRow,{label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.typeLabel",defaultMessage:"Type"})},Object(S.jsx)(G,{type:a.type}))),Object(S.jsx)(n.EuiFlexItem,{grow:!1},Object(S.jsx)(n.EuiFormRow,{label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.ownerLabel",defaultMessage:"Owner"})},Object(S.jsx)(H,{username:a.username}))),Object(S.jsx)(n.EuiFlexItem,{grow:!1},Object(S.jsx)(n.EuiFormRow,{label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.createdLabel",defaultMessage:"Created"})},Object(S.jsx)(U,{timestamp:a.creation}))),Object(S.jsx)(n.EuiFlexItem,{grow:!1},Object(S.jsx)(n.EuiFormRow,{label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.statusLabel",defaultMessage:"Status"})},Object(S.jsx)($,{expiration:a.expiration}))))):s?Object(S.jsx)(F.a,{name:"type",label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.typeLabel",defaultMessage:"Type"}),fullWidth:!0},Object(S.jsx)(n.EuiFlexGroup,{gutterSize:"m"},Object(S.jsx)(n.EuiFlexItem,null,Object(S.jsx)(n.EuiCheckableCard,{id:"rest",label:Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(n.EuiTitle,{size:"xxs"},Object(S.jsx)("h2",null,Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.restTypeLabel",defaultMessage:"Personal API key"}))),Object(S.jsx)(n.EuiSpacer,{size:"xs"}),Object(S.jsx)(n.EuiText,{size:"s"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.restTypeDescription",defaultMessage:"Allow external services to access the Elastic Stack on your behalf."}))),onChange:()=>O.setFieldValue("type","rest"),checked:"rest"===O.values.type})),Object(S.jsx)(n.EuiFlexItem,null,Object(S.jsx)(n.EuiCheckableCard,{id:"cross_cluster",label:Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(n.EuiTitle,{size:"xxs"},Object(S.jsx)("h2",null,Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.crossClusterTypeLabel",defaultMessage:"Cross-Cluster API key"}))),Object(S.jsx)(n.EuiSpacer,{size:"xs"}),Object(S.jsx)(n.EuiText,{size:"s"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.crossClusterTypeDescription",defaultMessage:"Allow remote clusters to connect to your local cluster."}))),onChange:()=>O.setFieldValue("type","cross_cluster"),checked:"cross_cluster"===O.values.type})))):Object(S.jsx)(n.EuiFormRow,{label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.typeLabel",defaultMessage:"Type"})},Object(S.jsx)(G,{type:"rest"})),Object(S.jsx)(n.EuiHorizontalRule,null),"cross_cluster"===O.values.type?Object(S.jsx)(F.a,{"data-test-subj":"apiKeysAccessCodeEditor",label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.accessLabel",defaultMessage:"Access"}),helpText:Object(S.jsx)(M.a,{app:"elasticsearch",doc:"security-api-create-cross-cluster-api-key.html#security-api-create-cross-cluster-api-key-request-body"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.accessHelpText",defaultMessage:"Learn how to structure access permissions."})),fullWidth:!0},Object(S.jsx)(h.a,{as:g.CodeEditorField,name:"access","aria-label":m.i18n.translate("xpack.security.management.apiKeys.apiKeyFlyout.accessCodeEditor",{defaultMessage:"Code editor for access permissions"}),value:O.values.access,options:{readOnly:i||a&&!I},onChange:e=>O.setFieldValue("access",e),validate:e=>{if(!e)return m.i18n.translate("xpack.security.management.apiKeys.apiKeyFlyout.accessRequired",{defaultMessage:"Enter access permissions or disable this option."});try{JSON.parse(e)}catch(e){return m.i18n.translate("xpack.security.management.apiKeys.apiKeyFlyout.invalidJsonError",{defaultMessage:"Enter valid JSON."})}},fullWidth:!0,languageId:"xjson",height:200})):Object(S.jsx)(n.EuiFormFieldset,null,Object(S.jsx)(n.EuiSwitch,{label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.customPrivilegesLabel",defaultMessage:"Restrict privileges"}),checked:O.values.customPrivileges,"data-test-subj":"apiKeysRoleDescriptorsSwitch",onChange:e=>O.setFieldValue("customPrivileges",e.target.checked),disabled:i||a&&!I}),O.values.customPrivileges&&Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(n.EuiSpacer,{size:"m"}),Object(S.jsx)(F.a,{helpText:Object(S.jsx)(M.a,{app:"elasticsearch",doc:"security-api-create-api-key.html#security-api-create-api-key-request-body"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.roleDescriptorsHelpText",defaultMessage:"Learn how to structure role descriptors."})),fullWidth:!0,"data-test-subj":"apiKeysRoleDescriptorsCodeEditor"},Object(S.jsx)(h.a,{as:g.CodeEditorField,name:"role_descriptors","aria-label":m.i18n.translate("xpack.security.management.apiKeys.apiKeyFlyout.roleDescriptorsCodeEditor",{defaultMessage:"Code editor for role descriptors of this API key"}),value:O.values.role_descriptors,options:{readOnly:i||a&&!I},onChange:e=>O.setFieldValue("role_descriptors",e),validate:e=>{if(!e)return m.i18n.translate("xpack.security.management.apiKeys.apiKeyFlyout.roleDescriptorsRequired",{defaultMessage:"Enter role descriptors or disable this option."});try{JSON.parse(e)}catch(e){return m.i18n.translate("xpack.security.management.apiKeys.apiKeyFlyout.invalidJsonError",{defaultMessage:"Enter valid JSON."})}},fullWidth:!0,languageId:"xjson",height:200})),Object(S.jsx)(n.EuiSpacer,{size:"s"}))),!a&&Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(n.EuiSpacer,null),Object(S.jsx)(n.EuiFormFieldset,null,Object(S.jsx)(n.EuiSwitch,{label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.customExpirationLabel",defaultMessage:"Expire after time"}),checked:O.values.customExpiration,onChange:e=>O.setFieldValue("customExpiration",e.target.checked),disabled:i||!!a,"data-test-subj":"apiKeyCustomExpirationSwitch"}),O.values.customExpiration&&Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(n.EuiSpacer,{size:"m"}),Object(S.jsx)(F.a,{label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.customExpirationInputLabel",defaultMessage:"Lifetime"}),fullWidth:!0},Object(S.jsx)(h.a,{as:n.EuiFieldNumber,name:"expiration",min:0,append:m.i18n.translate("xpack.security.accountManagement.apiKeyFlyout.expirationUnit",{defaultMessage:"days"}),validate:{min:{value:1,message:m.i18n.translate("xpack.security.management.apiKeys.apiKeyFlyout.expirationRequired",{defaultMessage:"Enter a valid duration or disable this option."})}},disabled:i||!!a,"data-test-subj":"apiKeyCustomExpirationInput"})),Object(S.jsx)(n.EuiSpacer,{size:"s"})))),Object(S.jsx)(n.EuiSpacer,null),Object(S.jsx)(n.EuiFormFieldset,null,Object(S.jsx)(n.EuiSwitch,{label:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.includeMetadataLabel",defaultMessage:"Include metadata"}),"data-test-subj":"apiKeysMetadataSwitch",checked:O.values.includeMetadata,disabled:i||a&&!I,onChange:e=>O.setFieldValue("includeMetadata",e.target.checked)}),O.values.includeMetadata&&Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(n.EuiSpacer,{size:"m"}),Object(S.jsx)(F.a,{"data-test-subj":"apiKeysMetadataCodeEditor",helpText:Object(S.jsx)(M.a,{app:"elasticsearch",doc:"security-api-create-api-key.html#security-api-create-api-key-request-body"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyFlyout.metadataHelpText",defaultMessage:"Learn how to structure metadata."})),fullWidth:!0},Object(S.jsx)(h.a,{as:g.CodeEditorField,name:"metadata","aria-label":m.i18n.translate("xpack.security.management.apiKeys.apiKeyFlyout.metadataCodeEditor",{defaultMessage:"Code editor for arbitrary metadata associated with the API key"}),options:{readOnly:i||a&&!I},value:O.values.metadata,onChange:e=>O.setFieldValue("metadata",e),validate:e=>{if(!e)return m.i18n.translate("xpack.security.management.apiKeys.apiKeyFlyout.metadataRequired",{defaultMessage:"Enter metadata or disable this option."});try{JSON.parse(e)}catch(e){return m.i18n.translate("xpack.security.management.apiKeys.apiKeyFlyout.invalidJsonError",{defaultMessage:"Enter valid JSON."})}},fullWidth:!0,languageId:"xjson",height:200})),Object(S.jsx)(n.EuiSpacer,{size:"s"}))))),Object(S.jsx)(n.EuiFlyoutFooter,null,Object(S.jsx)(n.EuiFlexGroup,{justifyContent:"spaceBetween"},Object(S.jsx)(n.EuiFlexItem,{grow:!1},Object(S.jsx)(n.EuiButtonEmpty,{"data-test-subj":"formFlyoutCancelButton",flush:"right",isDisabled:v,onClick:t},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.formFlyout.cancelButton",defaultMessage:"Cancel"}))),!_&&Object(S.jsx)(n.EuiFlexItem,{grow:!1},Object(S.jsx)(n.EuiButton,{"data-test-subj":"formFlyoutSubmitButton",isLoading:O.isSubmitting,isDisabled:L,fill:!0,type:"submit"},z)))))))};function P(e){const t=Object.keys(e.metadata).length>0,a="cross_cluster"!==e.type&&Object.keys(e.role_descriptors).length>0;return{name:e.name,type:e.type,customExpiration:!!e.expiration,expiration:e.expiration?e.expiration.toString():"",includeMetadata:t,metadata:t?JSON.stringify(e.metadata,null,2):"{}",customPrivileges:a,role_descriptors:a?JSON.stringify("cross_cluster"!==e.type&&e.role_descriptors,null,2):"{}",access:"cross_cluster"===e.type?JSON.stringify(e.access,null,2):"{}"}}var T=a(101);const I=({error:e,readOnly:t,children:a})=>{const{euiTheme:s}=Object(n.useEuiTheme)(),i=K("apiKeysEmptyPrompt","accordion");if(e){if(function(e){var t;return-1!==((null===(t=e.body)||void 0===t?void 0:t.message)||"").indexOf('disabled.feature="api_keys"')}(e))return Object(S.jsx)(b.a.EmptyPrompt,{iconType:"warning",body:Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)("p",null,Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeysEmptyPrompt.disabledErrorMessage",defaultMessage:"API keys are disabled."})),Object(S.jsx)("p",null,Object(S.jsx)(M.a,{app:"elasticsearch",doc:"security-settings.html#api-key-service-settings"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeysEmptyPrompt.docsLinkText",defaultMessage:"Learn how to enable API keys."}))))});if(function(e){var t;return 403===(null===(t=e.body)||void 0===t?void 0:t.statusCode)}(e))return Object(S.jsx)(b.a.EmptyPrompt,{iconType:"lock",body:Object(S.jsx)("p",null,Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeysEmptyPrompt.forbiddenErrorMessage",defaultMessage:"You do not have permission to manage API keys."}))});const t=()=>{throw e};return Object(S.jsx)(b.a.EmptyPrompt,{iconType:"warning",body:Object(S.jsx)("p",null,Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeysEmptyPrompt.errorMessage",defaultMessage:"Could not load API keys."})),actions:Object(S.jsx)(o.a.Fragment,null,a,Object(S.jsx)(n.EuiSpacer,{size:"xl"}),Object(S.jsx)(n.EuiAccordion,{id:i,buttonClassName:Object(T.css)({name:"zl1inp",styles:"display:flex;justify-content:center"}),buttonContent:Object(S.jsx)(n.EuiText,{size:"xs",className:Object(T.css)({fontWeight:s.font.weight.medium},"","")},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeysEmptyPrompt.technicalDetailsButton",defaultMessage:"Technical details"})),arrowDisplay:"right",paddingSize:"m"},Object(S.jsx)(n.EuiText,{textAlign:"left"},Object(S.jsx)(n.EuiErrorBoundary,null,Object(S.jsx)(t,null)))))})}return t?Object(S.jsx)(b.a.EmptyPrompt,{iconType:"error",title:Object(S.jsx)("h1",null,Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeysEmptyPrompt.readOnlyEmptyTitle",defaultMessage:"You do not have permission to create API keys"})),body:Object(S.jsx)("p",null,Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeysEmptyPrompt.readOnlyEmptyMessage",defaultMessage:"Please contact your administrator for more information"}))}):Object(S.jsx)(b.a.EmptyPrompt,{iconType:"managementApp",title:Object(S.jsx)("h1",null,Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeysEmptyPrompt.emptyTitle",defaultMessage:"Create your first API key"})),body:Object(S.jsx)("p",null,Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeysEmptyPrompt.emptyMessage",defaultMessage:"Allow external services to access the Elastic Stack on your behalf."})),actions:a})},B=({isAdmin:e,children:t,notifications:a,apiKeysAPIClient:s})=>{const[i,c]=Object(r.useState)([]),[l,o]=Object(r.useState)(!1),u=Object(r.useRef)(null),d=()=>{o(!1),c([])},p=async()=>{let t,n,c;try{t=await s.invalidateApiKeys(i,e)}catch(e){n=e}if(d(),t){const{itemsInvalidated:e}=t;if(({errors:c}=t),e&&e.length){const t=e.length>1?m.i18n.translate("xpack.security.management.apiKeys.deleteApiKey.successMultipleNotificationTitle",{defaultMessage:"Deleted {count} API keys",values:{count:e.length}}):m.i18n.translate("xpack.security.management.apiKeys.deleteApiKey.successSingleNotificationTitle",{defaultMessage:"Deleted API key '{name}'",values:{name:e[0].name}});a.toasts.addSuccess(t),u.current&&u.current([...e])}}if(n||c&&c.length){const e=c&&c.length>1||n&&i.length>1?m.i18n.translate("xpack.security.management.apiKeys.deleteApiKey.errorMultipleNotificationTitle",{defaultMessage:"Error deleting {count} apiKeys",values:{count:c&&c.length||i.length}}):m.i18n.translate("xpack.security.management.apiKeys.deleteApiKey.errorSingleNotificationTitle",{defaultMessage:"Error deleting API key '{name}'",values:{name:c&&c[0].name||i[0].name}});a.toasts.addDanger(e)}};return Object(S.jsx)(r.Fragment,null,t(((e,t=(()=>{}))=>{if(!e||!e.length)throw new Error("No API key IDs specified for deletion");o(!0),c(e),u.current=t})),(()=>{if(!l)return null;const e=1===i.length;return Object(S.jsx)(n.EuiConfirmModal,{role:"dialog",title:e?m.i18n.translate("xpack.security.management.apiKeys.deleteApiKey.confirmModal.deleteSingleTitle",{defaultMessage:"Delete API key '{name}'?",values:{name:i[0].name}}):m.i18n.translate("xpack.security.management.apiKeys.deleteApiKey.confirmModal.deleteMultipleTitle",{defaultMessage:"Delete {count} API keys?",values:{count:i.length}}),onCancel:d,onConfirm:p,cancelButtonText:m.i18n.translate("xpack.security.management.apiKeys.deleteApiKey.confirmModal.cancelButtonLabel",{defaultMessage:"Cancel"}),confirmButtonText:m.i18n.translate("xpack.security.management.apiKeys.deleteApiKey.confirmModal.confirmButtonLabel",{defaultMessage:"Delete {count, plural, one {API key} other {API keys}}",values:{count:i.length}}),buttonColor:"danger","data-test-subj":"invalidateApiKeyConfirmationModal"},e?null:Object(S.jsx)(r.Fragment,null,Object(S.jsx)("p",null,m.i18n.translate("xpack.security.management.apiKeys.deleteApiKey.confirmModal.deleteMultipleListDescription",{defaultMessage:"You are about to delete these API keys:"})),Object(S.jsx)("ul",null,i.map((({name:e,id:t})=>Object(S.jsx)("li",{key:t},e))))))})())};var N=a(8),_=a(49);const L=e=>Object(S.jsx)(n.EuiFormControlLayout,i()({},e,{append:Object(S.jsx)(n.EuiCopy,{textToCopy:e.value},(e=>Object(S.jsx)(n.EuiButtonIcon,{"aria-label":m.i18n.translate("xpack.security.copyTokenField.copyButton",{defaultMessage:"Copy to clipboard"}),iconType:"copyClipboard",color:"success",style:{backgroundColor:"transparent"},onClick:e}))),style:{backgroundColor:"transparent"},readOnly:!0}),Object(S.jsx)("input",{type:"text","aria-label":m.i18n.translate("xpack.security.copyTokenField.tokenLabel",{defaultMessage:"Token"}),className:"euiFieldText euiFieldText--inGroup",value:e.value,style:{fontFamily:_.euiThemeVars.euiCodeFontFamily,fontSize:_.euiThemeVars.euiFontSizeXS,backgroundColor:"transparent"},onFocus:e=>e.currentTarget.select(),readOnly:!0})),D=e=>{const{options:t,...a}=e,[s,c]=o.a.useState(!1),[l,r]=o.a.useState(t[0]),u=t.findIndex((e=>e.key===l.key)),d=()=>c(!1);return Object(S.jsx)(L,i()({},a,{prepend:Object(S.jsx)(n.EuiPopover,{button:Object(S.jsx)(n.EuiButtonEmpty,{size:"xs",iconType:"arrowDown",iconSide:"right",color:"success",onClick:()=>c(!s)},l.label),isOpen:s,panelPaddingSize:"none",closePopover:d},Object(S.jsx)(n.EuiContextMenuPanel,{initialFocusedItemIndex:2*u,items:t.reduce(((e,a,s)=>(e.push(Object(S.jsx)(n.EuiContextMenuItem,{key:a.key,icon:a.icon,layoutAlign:"top",onClick:()=>{d(),r(a)}},Object(S.jsx)("strong",null,a.label),Object(S.jsx)(n.EuiSpacer,{size:"xs"}),Object(S.jsx)(n.EuiText,{size:"s",color:"subdued"},Object(S.jsx)("p",null,a.description)))),s<t.length-1&&e.push(Object(S.jsx)(n.EuiHorizontalRule,{key:`${a.key}-seperator`,margin:"none"})),e)),[])})),value:l.value}))};var z=a(33);const R=()=>{const{services:e}=Object(g.useKibana)(),t=Object(u.useHistory)(),a=Object(k.b)(),[s,c]=p()((()=>Promise.all([new APIKeysAPIClient(e.http).getApiKeys(),a.getCurrentUser()])),[e.http]),[l,d]=Object(r.useState)(),[O,f]=Object(r.useState)(),M=!Object(z.a)("api_keys").save;if(Object(r.useEffect)((()=>{c()}),[]),!s.value)return s.loading?Object(S.jsx)(y.SectionLoading,null,Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.loadingApiKeysDescription",defaultMessage:"Loading API keys…"})):Object(S.jsx)(I,{error:s.error},Object(S.jsx)(n.EuiButton,{iconType:"refresh",onClick:()=>c()},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeys.retryButton",defaultMessage:"Try again"})));const[{apiKeys:h,canManageCrossClusterApiKeys:F,canManageApiKeys:K,canManageOwnApiKeys:E},C]=s.value;return Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(x.a,{path:"/create"},Object(S.jsx)(N.a,{text:m.i18n.translate("xpack.security.management.apiKeys.createBreadcrumb",{defaultMessage:"Create"}),href:"/create"},Object(S.jsx)(w,{onSuccess:e=>{t.push({pathname:"/"}),d(e),c()},onCancel:()=>t.push({pathname:"/"}),canManageCrossClusterApiKeys:F}))),O&&Object(S.jsx)(w,{onSuccess:()=>{e.notifications.toasts.addSuccess({title:m.i18n.translate("xpack.security.management.apiKeys.updateSuccessMessage",{defaultMessage:"Updated API key '{name}'",values:{name:O.name}}),"data-test-subj":"updateApiKeySuccessToast"}),f(void 0),c()},onCancel:()=>f(void 0),apiKey:O,readOnly:M}),h.length?Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(b.a.Header,{pageTitle:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.apiKeysTitle",defaultMessage:"API keys"}),description:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.apiKeysAllDescription",defaultMessage:"Allow external services to access the Elastic Stack on behalf of a user."}),rightSideItems:M?void 0:[Object(S.jsx)(n.EuiButton,i()({},Object(g.reactRouterNavigate)(t,"/create"),{fill:!0,iconType:"plusInCircleFilled","data-test-subj":"apiKeysCreateTableButton"}),Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.createButton",defaultMessage:"Create API key"}))],paddingSize:"none",bottomBorder:!0}),Object(S.jsx)(n.EuiSpacer,null),Object(S.jsx)(b.a.Section,{paddingSize:"none"},l&&!s.loading&&Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(J,{createdApiKey:l}),Object(S.jsx)(n.EuiSpacer,null)),E&&!K?Object(S.jsx)(o.a.Fragment,null,Object(S.jsx)(n.EuiCallOut,{title:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.manageOwnKeysWarning",defaultMessage:"You only have permission to manage your own API keys."})}),Object(S.jsx)(n.EuiSpacer,null)):void 0,Object(S.jsx)(B,{isAdmin:K,notifications:e.notifications,apiKeysAPIClient:new APIKeysAPIClient(e.http)},(e=>Object(S.jsx)(V,{apiKeys:h,onClick:e=>f(e),onDelete:t=>e(t.map((({name:e,id:t})=>({name:e,id:t}))),c),currentUser:C,createdApiKey:l,canManageCrossClusterApiKeys:F,canManageApiKeys:K,canManageOwnApiKeys:E,readOnly:M,loading:s.loading}))))):Object(S.jsx)(I,{readOnly:M},Object(S.jsx)(n.EuiButton,i()({},Object(g.reactRouterNavigate)(t,"/create"),{fill:!0,iconType:"plusInCircleFilled","data-test-subj":"apiKeysCreatePromptButton"}),Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.createButton",defaultMessage:"Create API key"}))))},J=({createdApiKey:e})=>{const t=`${e.id}:${e.api_key}`;return Object(S.jsx)(n.EuiCallOut,{color:"success",iconType:"check",title:m.i18n.translate("xpack.security.management.apiKeys.createSuccessMessage",{defaultMessage:"Created API key '{name}'",values:{name:e.name}})},Object(S.jsx)("p",null,Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.successDescription",defaultMessage:"Copy this key now. You will not be able to view it again."})),Object(S.jsx)(D,{options:[{key:"encoded",value:e.encoded,icon:"empty",label:m.i18n.translate("xpack.security.management.apiKeys.encodedLabel",{defaultMessage:"Encoded"}),description:m.i18n.translate("xpack.security.management.apiKeys.encodedDescription",{defaultMessage:"Format used to make requests to Elasticsearch REST API."})},{key:"beats",value:t,icon:"logoBeats",label:m.i18n.translate("xpack.security.management.apiKeys.beatsLabel",{defaultMessage:"Beats"}),description:m.i18n.translate("xpack.security.management.apiKeys.beatsDescription",{defaultMessage:"Format used to configure Beats."})},{key:"logstash",value:t,icon:"logoLogstash",label:m.i18n.translate("xpack.security.management.apiKeys.logstashLabel",{defaultMessage:"Logstash"}),description:m.i18n.translate("xpack.security.management.apiKeys.logstashDescription",{defaultMessage:"Format used to configure Logstash."})}]}))},V=({apiKeys:e,createdApiKey:t,currentUser:a,onClick:s,onDelete:i,canManageApiKeys:c=!1,canManageOwnApiKeys:l=!1,readOnly:o=!1,loading:u=!1})=>{const d=[],[p,y]=Object(r.useState)([]),{categorizedApiKeys:g,typeFilters:b,usernameFilters:x,expiredFilters:O}=Object(r.useMemo)((()=>function(e){const t=[],a=new Set,s=new Set,i=new Set;return e.forEach((e=>{const n=function(e){var t;return"rest"===e.type&&(null!==(t=e.metadata)&&void 0!==t&&t.managed||0===e.name.indexOf("Alerting: "))?"managed":e.type}(e),c=!!e.expiration&&Date.now()>e.expiration;a.add(n),s.add(e.username),i.add(c),t.push({...e,type:n,expired:c})})),{categorizedApiKeys:t,typeFilters:[...a],usernameFilters:[...s],expiredFilters:[...i]}}(e)),[e]),f=e=>c||l&&e.username===a.username;d.push({field:"name",name:m.i18n.translate("xpack.security.management.apiKeys.table.nameColumnName",{defaultMessage:"Name"}),sortable:!0,render:(e,t)=>Object(S.jsx)(n.EuiLink,{onClick:()=>s(t),"data-test-subj":`apiKeyRowName-${t.name}`},e)},{field:"type",name:m.i18n.translate("xpack.security.management.apiKeys.table.typeColumnName",{defaultMessage:"Type"}),sortable:!0,render:e=>Object(S.jsx)(G,{type:e})}),(c||x.length>1)&&d.push({field:"username",name:m.i18n.translate("xpack.security.management.apiKeys.table.ownerColumnName",{defaultMessage:"Owner"}),sortable:!0,render:e=>Object(S.jsx)(H,{username:e})}),d.push({field:"creation",name:m.i18n.translate("xpack.security.management.apiKeys.table.createdColumnName",{defaultMessage:"Created"}),sortable:!0,mobileOptions:{show:!1},render:(e,a)=>Object(S.jsx)(U,{timestamp:e},a.id===(null==t?void 0:t.id)?Object(S.jsx)(n.EuiBadge,{color:"success"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.createdBadge",defaultMessage:"Just now"})):null)},{field:"expiration",name:m.i18n.translate("xpack.security.management.apiKeys.table.statusColumnName",{defaultMessage:"Status"}),sortable:!0,render:e=>Object(S.jsx)($,{expiration:e})}),o||d.push({width:"40px",actions:[{name:m.i18n.translate("xpack.security.management.apiKeys.table.deleteAction",{defaultMessage:"Delete"}),description:m.i18n.translate("xpack.security.management.apiKeys.table.deleteDescription",{defaultMessage:"Delete this API key"}),icon:"trash",type:"icon",color:"danger",onClick:e=>i([e]),available:f,"data-test-subj":"apiKeysTableDeleteAction"}]});const M=[];return b.length>1&&M.push({type:"custom_component",component:({query:e,onChange:t})=>Object(S.jsx)(q,{types:b,query:e,onChange:t})}),x.length>1&&M.push({type:"custom_component",component:({query:e,onChange:t})=>Object(S.jsx)(W,{usernames:x,query:e,onChange:t})}),O.length>1&&M.push({type:"field_value_toggle_group",field:"expired",items:[{value:!1,name:m.i18n.translate("xpack.security.management.apiKeys.table.activeFilter",{defaultMessage:"Active"})},{value:!0,name:m.i18n.translate("xpack.security.management.apiKeys.table.expiredFilter",{defaultMessage:"Expired"})}]}),Object(S.jsx)(n.EuiInMemoryTable,{items:g,itemId:"id",columns:d,search:g.length>0?{toolsLeft:p.length?Object(S.jsx)(n.EuiButton,{onClick:()=>i(p),color:"danger",iconType:"trash","data-test-subj":"bulkInvalidateActionButton"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.invalidateApiKeyButton",defaultMessage:"Delete {count, plural, one {API key} other {# API keys}}",values:{count:p.length}})):void 0,box:{incremental:!0},filters:M}:void 0,sorting:{sort:{field:"creation",direction:"desc"}},selection:o?void 0:{selectable:f,onSelectionChange:y},pagination:{initialPageSize:10,pageSizeOptions:[10,25,50]},loading:u,isSelectable:l})},q=({query:e,onChange:t,types:a})=>t?Object(S.jsx)(o.a.Fragment,null,a.includes("rest")?Object(S.jsx)(n.EuiFilterButton,{iconType:"user",iconSide:"left",hasActiveFilters:e.hasSimpleFieldClause("type","rest"),onClick:()=>t(e.hasSimpleFieldClause("type","rest")?e.removeSimpleFieldClauses("type"):e.removeSimpleFieldClauses("type").addSimpleFieldValue("type","rest")),withNext:a.includes("cross_cluster")||a.includes("managed")},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyBadge.restTitle",defaultMessage:"Personal"})):null,a.includes("cross_cluster")?Object(S.jsx)(n.EuiFilterButton,{iconType:"cluster",iconSide:"left",hasActiveFilters:e.hasSimpleFieldClause("type","cross_cluster"),onClick:()=>t(e.hasSimpleFieldClause("type","cross_cluster")?e.removeSimpleFieldClauses("type"):e.removeSimpleFieldClauses("type").addSimpleFieldValue("type","cross_cluster")),withNext:a.includes("managed")},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyBadge.crossClusterLabel",defaultMessage:"Cross-Cluster"})):null,a.includes("managed")?Object(S.jsx)(n.EuiFilterButton,{iconType:"gear",iconSide:"left",hasActiveFilters:e.hasSimpleFieldClause("type","managed"),onClick:()=>t(e.hasSimpleFieldClause("type","managed")?e.removeSimpleFieldClauses("type"):e.removeSimpleFieldClauses("type").addSimpleFieldValue("type","managed"))},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyBadge.managedTitle",defaultMessage:"Managed"})):null):null,W=({query:e,onChange:t,usernames:a})=>{const[s,i]=Object(r.useState)(!1),[c,l]=Object(r.useState)("");if(!t)return null;let o=0;const u=e.getOrFieldClause("username");u&&(o=Array.isArray(u.value)?u.value.length:1);const d=c?a.filter((e=>e.includes(c))):a;return Object(S.jsx)(O.c,{button:Object(S.jsx)(n.EuiFilterButton,{iconType:"arrowDown",onClick:()=>i((e=>!e)),isSelected:s,numFilters:a.length,hasActiveFilters:!!o,numActiveFilters:o},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.ownerFilter",defaultMessage:"Owner"})),isOpen:s,panelPaddingSize:"none",anchorPosition:"downCenter",panelClassName:"euiFilterGroup__popoverPanel",closePopover:()=>i(!1),selectableProps:{options:d.map((e=>({uid:e,user:{username:e},enabled:!1,data:{}}))),onSearchChange:l,selectedOptions:a.filter((t=>e.hasOrFieldClause("username",t))).map((e=>({uid:e,user:{username:e},enabled:!1,data:{}}))),onChange:a=>{const s=a.reduce(((e,t)=>e.addOrFieldValue("username",t.user.username)),e.removeOrFieldClauses("username"));t(s)}}})},H=({username:e})=>Object(S.jsx)(n.EuiFlexGroup,{alignItems:"center",gutterSize:"s",responsive:!1},Object(S.jsx)(n.EuiFlexItem,{grow:!1},Object(S.jsx)(O.a,{user:{username:e},size:"s"})),Object(S.jsx)(n.EuiFlexItem,{grow:!1},Object(S.jsx)(n.EuiText,{size:"s","data-test-subj":"apiKeyUsername"},e))),U=({timestamp:e,children:t})=>Object(S.jsx)(n.EuiToolTip,{content:l()(e).format("LLL")},Object(S.jsx)("span",null,null!=t?t:l()(e).fromNow())),$=({expiration:e})=>e?Date.now()>e?Object(S.jsx)(n.EuiHealth,{color:"subdued","data-test-subj":"apiKeyStatus"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.statusExpired",defaultMessage:"Expired"})):Object(S.jsx)(n.EuiHealth,{color:"warning","data-test-subj":"apiKeyStatus"},Object(S.jsx)(U,{timestamp:e},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.statusExpires",defaultMessage:"Expires {timeFromNow}",values:{timeFromNow:l()(e).fromNow()}}))):Object(S.jsx)(n.EuiHealth,{color:"primary","data-test-subj":"apiKeyStatus"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.management.apiKeys.table.statusActive",defaultMessage:"Active"})),G=({type:e})=>"cross_cluster"===e?Object(S.jsx)(n.EuiToolTip,{content:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyBadge.crossClusterDescription",defaultMessage:"Allows remote clusters to connect to your local cluster."})},Object(S.jsx)(n.EuiBadge,{color:"hollow",iconType:"cluster"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyBadge.crossClusterLabel",defaultMessage:"Cross-Cluster"}))):"managed"===e?Object(S.jsx)(n.EuiToolTip,{content:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyBadge.managedDescription",defaultMessage:"Created and managed by Kibana to correctly run background tasks."})},Object(S.jsx)(n.EuiBadge,{color:"hollow",iconType:"gear"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyBadge.managedTitle",defaultMessage:"Managed"}))):Object(S.jsx)(n.EuiToolTip,{content:Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyBadge.restDescription",defaultMessage:"Allows external services to access the Elastic Stack on behalf of a user."})},Object(S.jsx)(n.EuiBadge,{color:"hollow",iconType:"user"},Object(S.jsx)(j.FormattedMessage,{id:"xpack.security.accountManagement.apiKeyBadge.restTitle",defaultMessage:"Personal"})))},80:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var s=a(3),i=a(2),n=a(5),c=a(0);const l=({app:e,doc:t,children:a})=>{const[,l]=function(){const{services:e}=Object(n.useKibana)(),{links:t,ELASTIC_WEBSITE_URL:a,DOC_LINK_VERSION:s}=e.docLinks;return[t,Object(i.useCallback)(((e,t)=>`${a}guide/en/${e}/reference/${s}/${t}`),[a,s])]}();return Object(c.jsx)(s.EuiLink,{href:l(e,t),target:"_blank",external:!0},a)}}}]);