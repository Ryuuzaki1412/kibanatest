"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BannersPlugin = void 0;
var _react = _interopRequireDefault(require("react"));
var _public = require("@kbn/kibana-react-plugin/public");
var _components = require("./components");
var _get_banner_info = require("./get_banner_info");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

class BannersPlugin {
  constructor(context) {}
  setup({}) {
    return {};
  }
  start({
    chrome,
    uiSettings,
    http
  }, {
    screenshotMode
  }) {
    var _screenshotMode$isScr;
    if (!((_screenshotMode$isScr = screenshotMode === null || screenshotMode === void 0 ? void 0 : screenshotMode.isScreenshotMode()) !== null && _screenshotMode$isScr !== void 0 ? _screenshotMode$isScr : false)) {
      (0, _get_banner_info.getBannerInfo)(http).then(({
        allowed,
        banner
      }) => {
        if (allowed && banner.placement === 'top') {
          chrome.setHeaderBanner({
            content: (0, _public.toMountPoint)( /*#__PURE__*/_react.default.createElement(_components.Banner, {
              bannerConfig: banner
            }))
          });
        }
      }, () => {
        chrome.setHeaderBanner(undefined);
      });
    }
    return {};
  }
}
exports.BannersPlugin = BannersPlugin;