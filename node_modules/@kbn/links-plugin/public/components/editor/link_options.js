"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LinkOptionsComponent = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _public = require("@kbn/presentation-util-plugin/public");
var _public2 = require("@kbn/ui-actions-enhanced-plugin/public");
var _content_management = require("../../../common/content_management");
var _links_strings = require("../links_strings");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const LinkOptionsComponent = ({
  link,
  setLinkOptions,
  selectedLinkType
}) => {
  const [dashboardLinkOptions, setDashboardLinkOptions] = (0, _react.useState)({
    ..._public.DEFAULT_DASHBOARD_DRILLDOWN_OPTIONS,
    ...(link && link.type === _content_management.DASHBOARD_LINK_TYPE ? link.options : {})
  });
  const [externalLinkOptions, setExternalLinkOptions] = (0, _react.useState)({
    ..._public2.DEFAULT_URL_DRILLDOWN_OPTIONS,
    ...(link && link.type === _content_management.EXTERNAL_LINK_TYPE ? link.options : {})
  });
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    label: _links_strings.LinksStrings.editor.linkEditor.getLinkOptionsLabel()
  }, selectedLinkType === _content_management.DASHBOARD_LINK_TYPE ? /*#__PURE__*/_react.default.createElement(_public.DashboardDrilldownOptionsComponent, {
    options: dashboardLinkOptions,
    onOptionChange: change => {
      setDashboardLinkOptions({
        ...dashboardLinkOptions,
        ...change
      });
      setLinkOptions({
        ...dashboardLinkOptions,
        ...change
      });
    }
  }) : /*#__PURE__*/_react.default.createElement(_public2.UrlDrilldownOptionsComponent, {
    options: externalLinkOptions,
    onOptionChange: change => {
      setExternalLinkOptions({
        ...externalLinkOptions,
        ...change
      });
      setLinkOptions({
        ...externalLinkOptions,
        ...change
      });
    }
  }));
};
exports.LinkOptionsComponent = LinkOptionsComponent;