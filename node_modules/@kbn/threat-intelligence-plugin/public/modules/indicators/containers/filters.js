"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IndicatorsFilters = void 0;
var _react = _interopRequireWildcard(require("react"));
var _use_kibana = require("../../../hooks/use_kibana");
var _use_security_context = require("../../../hooks/use_security_context");
var _use_filters_context = require("../hooks/use_filters_context");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/**
 * Container used to wrap components and share the {@link FilterManager} through React context.
 */
const IndicatorsFilters = ({
  children
}) => {
  const securityContext = (0, _use_security_context.useSecurityContext)();
  const {
    services: {
      data: {
        query: {
          filterManager
        }
      }
    }
  } = (0, _use_kibana.useKibana)();
  const globalFilters = securityContext.useFilters();
  const globalQuery = securityContext.useQuery();
  const globalTimeRange = securityContext.useGlobalTime();
  const contextValue = (0, _react.useMemo)(() => ({
    timeRange: globalTimeRange,
    filters: globalFilters,
    filterQuery: globalQuery,
    filterManager
  }), [globalFilters, globalQuery, globalTimeRange, filterManager]);
  return /*#__PURE__*/_react.default.createElement(_use_filters_context.IndicatorsFiltersContext.Provider, {
    value: contextValue
  }, children);
};
exports.IndicatorsFilters = IndicatorsFilters;