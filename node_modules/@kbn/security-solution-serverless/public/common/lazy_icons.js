"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconVisualizationLazy = exports.IconTimelineLazy = exports.IconSettingsLazy = exports.IconReplicationLazy = exports.IconRapidBarGraphLazy = exports.IconOsqueryLazy = exports.IconMarketingLazy = exports.IconManagerLazy = exports.IconLensLazy = exports.IconKeywordLazy = exports.IconJobsLazy = exports.IconIntuitiveLazy = exports.IconInfraLazy = exports.IconFleetLazy = exports.IconFilebeatLazy = exports.IconFilebeatChartLazy = exports.IconEndpointLazy = exports.IconEcctlLazy = exports.IconDataViewLazy = exports.IconDashboardLazy = exports.IconChartArrowLazy = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; } /*
opyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
or more contributor license agreements. Licensed under the Elastic License
you may not use this file except in compliance with the Elastic License


const withSuspenseIcon = Component => function WithSuspenseIcon(props) {
  return /*#__PURE__*/_react.default.createElement(_react.Suspense, {
    fallback: /*#__PURE__*/_react.default.createElement(_eui.EuiLoadingSpinner, {
      size: "s"
    })
  }, /*#__PURE__*/_react.default.createElement(Component, props));
};
const IconLensLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/lens')))));
exports.IconLensLazy = IconLensLazy;
const IconEndpointLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/endpoint')))));
exports.IconEndpointLazy = IconEndpointLazy;
const IconFleetLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/fleet')))));
exports.IconFleetLazy = IconFleetLazy;
const IconEcctlLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/ecctl')))));
exports.IconEcctlLazy = IconEcctlLazy;
const IconTimelineLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/timeline')))));
exports.IconTimelineLazy = IconTimelineLazy;
const IconOsqueryLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/osquery')))));
exports.IconOsqueryLazy = IconOsqueryLazy;
const IconVisualizationLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/visualization')))));
exports.IconVisualizationLazy = IconVisualizationLazy;
const IconMarketingLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/marketing')))));
exports.IconMarketingLazy = IconMarketingLazy;
const IconInfraLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/infra')))));
exports.IconInfraLazy = IconInfraLazy;
const IconKeywordLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/keyword')))));
exports.IconKeywordLazy = IconKeywordLazy;
const IconJobsLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/jobs')))));
exports.IconJobsLazy = IconJobsLazy;
const IconSettingsLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/settings')))));
exports.IconSettingsLazy = IconSettingsLazy;
const IconDashboardLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/dashboard')))));
exports.IconDashboardLazy = IconDashboardLazy;
const IconChartArrowLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/chart_arrow')))));
exports.IconChartArrowLazy = IconChartArrowLazy;
const IconManagerLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/manager')))));
exports.IconManagerLazy = IconManagerLazy;
const IconFilebeatLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/filebeat')))));
exports.IconFilebeatLazy = IconFilebeatLazy;
const IconDataViewLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/data_view')))));
exports.IconDataViewLazy = IconDataViewLazy;
const IconReplicationLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/replication')))));
exports.IconReplicationLazy = IconReplicationLazy;
const IconIntuitiveLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/intuitive')))));
exports.IconIntuitiveLazy = IconIntuitiveLazy;
const IconRapidBarGraphLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/rapid_bar_graph')))));
exports.IconRapidBarGraphLazy = IconRapidBarGraphLazy;
const IconFilebeatChartLazy = withSuspenseIcon( /*#__PURE__*/_react.default.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./icons/filebeat_chart')))));
exports.IconFilebeatChartLazy = IconFilebeatChartLazy;