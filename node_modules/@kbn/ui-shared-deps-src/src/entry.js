"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Uuid = exports.TsLib = exports.StyledComponents = exports.SaferLodashSet = exports.RxjsOperators = exports.Rxjs = exports.Reselect = exports.ReduxjsToolkit = exports.Redux = exports.ReactRouterDomV5Compat = exports.ReactRouterDom = exports.ReactRouter = exports.ReactRedux = exports.ReactQueryDevtools = exports.ReactQuery = exports.ReactDomServer = exports.ReactDom = exports.React = exports.MonacoBarePluginApi = exports.MomentTimezone = exports.Moment = exports.LodashFp = exports.Lodash = exports.KbnUiTheme = exports.KbnStd = exports.KbnSharedUxErrorBoundary = exports.KbnRison = exports.KbnMonaco = exports.KbnI18nReact = exports.KbnI18n = exports.KbnEsQuery = exports.KbnDatemath = exports.KbnAnalytics = exports.Jquery = exports.IoTs = exports.Immer = exports.History = exports.HelloPangeaDnd = exports.Fflate = exports.EmotionReact = exports.EmotionCache = exports.ElasticNumeral = exports.ElasticEuiLibServicesFormat = exports.ElasticEuiLibServices = exports.ElasticEuiChartsTheme = exports.ElasticEui = exports.ElasticCharts = exports.Classnames = void 0;
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

require('./polyfills');
const Jquery = require('jquery');
exports.Jquery = Jquery;
window.$ = window.jQuery = Jquery;
// mutates window.jQuery and window.$
require('@kbn/flot-charts');

// stateful deps
const KbnUiTheme = require('@kbn/ui-theme');
exports.KbnUiTheme = KbnUiTheme;
const KbnI18n = require('@kbn/i18n');
exports.KbnI18n = KbnI18n;
const KbnI18nReact = require('@kbn/i18n-react');
exports.KbnI18nReact = KbnI18nReact;
const EmotionCache = require('@emotion/cache');
exports.EmotionCache = EmotionCache;
const EmotionReact = require('@emotion/react');
exports.EmotionReact = EmotionReact;
const Moment = require('moment');
exports.Moment = Moment;
const MomentTimezone = require('moment-timezone/moment-timezone');
exports.MomentTimezone = MomentTimezone;
const IoTs = require('io-ts');
exports.IoTs = IoTs;
const KbnMonaco = require('@kbn/monaco');
exports.KbnMonaco = KbnMonaco;
const MonacoBarePluginApi = require('@kbn/monaco').BarePluginApi;
exports.MonacoBarePluginApi = MonacoBarePluginApi;
const React = require('react');
exports.React = React;
const ReactDom = require('react-dom');
exports.ReactDom = ReactDom;
const ReactDomServer = require('react-dom/server');
// eslint-disable-next-line @kbn/eslint/module_migration
exports.ReactDomServer = ReactDomServer;
const ReactRouter = require('react-router');
exports.ReactRouter = ReactRouter;
const ReactRouterDom = require('react-router-dom');
exports.ReactRouterDom = ReactRouterDom;
const ReactRouterDomV5Compat = require('react-router-dom-v5-compat');
exports.ReactRouterDomV5Compat = ReactRouterDomV5Compat;
const StyledComponents = require('styled-components');
exports.StyledComponents = StyledComponents;
Moment.tz.load(require('moment-timezone/data/packed/latest.json'));

// big deps which are locked to a single version
const Rxjs = require('rxjs');
exports.Rxjs = Rxjs;
const RxjsOperators = require('rxjs/operators');
exports.RxjsOperators = RxjsOperators;
const ElasticNumeral = require('@elastic/numeral');
exports.ElasticNumeral = ElasticNumeral;
const ElasticCharts = require('@elastic/charts');
exports.ElasticCharts = ElasticCharts;
const ElasticEui = require('@elastic/eui');
exports.ElasticEui = ElasticEui;
const ElasticEuiLibServices = require('@elastic/eui/optimize/es/services');
exports.ElasticEuiLibServices = ElasticEuiLibServices;
const ElasticEuiLibServicesFormat = require('@elastic/eui/optimize/es/services/format');
exports.ElasticEuiLibServicesFormat = ElasticEuiLibServicesFormat;
const ElasticEuiChartsTheme = require('@elastic/eui/dist/eui_charts_theme');
exports.ElasticEuiChartsTheme = ElasticEuiChartsTheme;
const KbnDatemath = require('@kbn/datemath');
exports.KbnDatemath = KbnDatemath;
const HelloPangeaDnd = require('@hello-pangea/dnd/dist/dnd');
exports.HelloPangeaDnd = HelloPangeaDnd;
const ReduxjsToolkit = require('@reduxjs/toolkit');
exports.ReduxjsToolkit = ReduxjsToolkit;
const ReactRedux = require('react-redux');
exports.ReactRedux = ReactRedux;
const Redux = require('redux');
exports.Redux = Redux;
const Immer = require('immer');
exports.Immer = Immer;
const Reselect = require('reselect');
exports.Reselect = Reselect;
const Lodash = require('lodash');
exports.Lodash = Lodash;
const LodashFp = require('lodash/fp');
exports.LodashFp = LodashFp;
const {
  unzlibSync,
  strFromU8
} = require('fflate');
const Fflate = {
  unzlibSync,
  strFromU8
};

// runtime deps which don't need to be copied across all bundles
exports.Fflate = Fflate;
const TsLib = require('tslib');
exports.TsLib = TsLib;
const Uuid = require('uuid');
exports.Uuid = Uuid;
const KbnAnalytics = require('@kbn/analytics');
exports.KbnAnalytics = KbnAnalytics;
const KbnEsQuery = require('@kbn/es-query');
exports.KbnEsQuery = KbnEsQuery;
const KbnStd = require('@kbn/std');
exports.KbnStd = KbnStd;
const SaferLodashSet = require('@kbn/safer-lodash-set');
exports.SaferLodashSet = SaferLodashSet;
const KbnSharedUxErrorBoundary = require('@kbn/shared-ux-error-boundary');
exports.KbnSharedUxErrorBoundary = KbnSharedUxErrorBoundary;
const KbnRison = require('@kbn/rison');
exports.KbnRison = KbnRison;
const History = require('history');
exports.History = History;
const Classnames = require('classnames');
exports.Classnames = Classnames;
const ReactQuery = require('@tanstack/react-query');
exports.ReactQuery = ReactQuery;
const ReactQueryDevtools = require('@tanstack/react-query-devtools');
exports.ReactQueryDevtools = ReactQueryDevtools;