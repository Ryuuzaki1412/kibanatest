/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.observability_bundle_jsonpfunction=window.observability_bundle_jsonpfunction||[]).push([[19],{130:function(t,e,n){"use strict";n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return r}));var i=n(4);const o="SLO_ALERTS_EMBEDDABLE",r=`${i.ob.SLO}-embeddable-alerts-table`},164:function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return c}));var i=n(0),o=n(95),r=n(130);const a="editSloAlertsPanelAction";function c(t){return{id:a,type:a,getIconType:t=>"pencil",getDisplayName:()=>i.i18n.translate("xpack.observability.actions.editSloAlertsEmbeddableTitle",{defaultMessage:"Edit configuration"}),async execute({embeddable:e}){if(!e)throw new Error("Not possible to execute an action without the embeddable context");const[i,o]=await t();try{const{resolveEmbeddableSloUserInput:t}=await Promise.all([n.e(0),n.e(2),n.e(12)]).then(n.bind(null,171)),r=await t(i,o,e.getInput());e.updateInput(r)}catch(t){return Promise.reject()}},isCompatible:async({embeddable:t})=>t.type===r.a&&t.getInput().viewMode===o.ViewMode.EDIT}}},221:function(t,e,n){"use strict";n.r(e),n.d(e,"registerSloAlertsUiActions",(function(){return r}));var i=n(82),o=n(164);function r(t,e){const n=Object(o.b)(e.getStartServices);t.registerAction(n),t.attachAction(i.CONTEXT_MENU_TRIGGER,n.id)}}}]);