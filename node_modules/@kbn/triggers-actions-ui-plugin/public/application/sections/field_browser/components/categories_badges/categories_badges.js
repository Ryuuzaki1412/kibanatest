"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CategoriesBadges = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _categories_badges = require("./categories_badges.styles");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const CategoriesBadgesComponent = ({
  setSelectedCategoryIds,
  selectedCategoryIds
}) => {
  const {
    euiTheme
  } = (0, _eui.useEuiTheme)();
  const onUnselectCategory = (0, _react.useCallback)(categoryId => {
    setSelectedCategoryIds(selectedCategoryIds.filter(selectedCategoryId => selectedCategoryId !== categoryId));
  }, [setSelectedCategoryIds, selectedCategoryIds]);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    css: _categories_badges.styles.badgesGroup({
      euiTheme
    }),
    "data-test-subj": "category-badges",
    gutterSize: "xs",
    wrap: true
  }, selectedCategoryIds.map(categoryId => /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false,
    key: categoryId
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiBadge, {
    iconType: "cross",
    iconSide: "right",
    iconOnClick: () => onUnselectCategory(categoryId),
    iconOnClickAriaLabel: "unselect category",
    "data-test-subj": `category-badge-${categoryId}`,
    closeButtonProps: {
      'data-test-subj': `category-badge-unselect-${categoryId}`
    }
  }, categoryId))));
};
const CategoriesBadges = /*#__PURE__*/_react.default.memo(CategoriesBadgesComponent);
exports.CategoriesBadges = CategoriesBadges;