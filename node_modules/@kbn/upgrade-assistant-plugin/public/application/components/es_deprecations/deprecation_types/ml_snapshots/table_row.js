"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MlSnapshotsTableRowCells = exports.MlSnapshotsTableRow = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _shared_imports = require("../../../../../shared_imports");
var _app_context = require("../../../../app_context");
var _es_deprecations_table_cells = require("../../es_deprecations_table_cells");
var _resolution_table_cell = require("./resolution_table_cell");
var _flyout = require("./flyout");
var _context = require("./context");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const {
  useGlobalFlyout
} = _shared_imports.GlobalFlyout;
const MlSnapshotsTableRowCells = ({
  rowFieldNames,
  deprecation
}) => {
  const [showFlyout, setShowFlyout] = (0, _react.useState)(false);
  const snapshotState = (0, _context.useMlSnapshotContext)();
  const {
    addContent: addContentToGlobalFlyout,
    removeContent: removeContentFromGlobalFlyout
  } = useGlobalFlyout();
  const closeFlyout = (0, _react.useCallback)(() => {
    setShowFlyout(false);
    removeContentFromGlobalFlyout('mlFlyout');
  }, [removeContentFromGlobalFlyout]);
  (0, _react.useEffect)(() => {
    if (showFlyout) {
      addContentToGlobalFlyout({
        id: 'mlFlyout',
        Component: _flyout.FixSnapshotsFlyout,
        props: {
          deprecation,
          closeFlyout,
          ...snapshotState
        },
        flyoutProps: {
          onClose: closeFlyout,
          className: 'eui-textBreakWord',
          'data-test-subj': 'mlSnapshotDetails',
          'aria-labelledby': 'mlSnapshotDetailsFlyoutTitle'
        }
      });
    }
  }, [snapshotState, addContentToGlobalFlyout, showFlyout, deprecation, closeFlyout]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, rowFieldNames.map(field => {
    return /*#__PURE__*/_react.default.createElement(_eui.EuiTableRowCell, {
      key: field,
      truncateText: false,
      "data-test-subj": `mlTableCell-${field}`
    }, /*#__PURE__*/_react.default.createElement(_es_deprecations_table_cells.EsDeprecationsTableCells, {
      fieldName: field,
      openFlyout: () => setShowFlyout(true),
      deprecation: deprecation,
      resolutionTableCell: /*#__PURE__*/_react.default.createElement(_resolution_table_cell.MlSnapshotsResolutionCell, null)
    }));
  }));
};
exports.MlSnapshotsTableRowCells = MlSnapshotsTableRowCells;
const MlSnapshotsTableRow = props => {
  const {
    services: {
      api
    }
  } = (0, _app_context.useAppContext)();
  return /*#__PURE__*/_react.default.createElement(_context.MlSnapshotsStatusProvider, {
    snapshotId: props.deprecation.correctiveAction.snapshotId,
    jobId: props.deprecation.correctiveAction.jobId,
    mlUpgradeModeEnabled: props.mlUpgradeModeEnabled,
    api: api
  }, /*#__PURE__*/_react.default.createElement(MlSnapshotsTableRowCells, props));
};
exports.MlSnapshotsTableRow = MlSnapshotsTableRow;