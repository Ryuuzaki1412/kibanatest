"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChartLabel = void 0;
var _eui = require("@elastic/eui");
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _formatted_number = require("../../../../common/components/formatted_number");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const PlaceHolder = _styledComponents.default.div`
  padding: ${props => props.theme.eui.euiSizeS};
`;
const ChartLabelComponent = ({
  count,
  onClick
}) => {
  const onLabelClick = (0, _react.useCallback)(() => onClick && onClick(), [onClick]);
  if (count) {
    return onClick ? /*#__PURE__*/_react.default.createElement(_eui.EuiLink, {
      onClick: onLabelClick
    }, /*#__PURE__*/_react.default.createElement("b", null, /*#__PURE__*/_react.default.createElement(_formatted_number.FormattedCount, {
      count: count
    }))) : /*#__PURE__*/_react.default.createElement("b", null, /*#__PURE__*/_react.default.createElement(_formatted_number.FormattedCount, {
      count: count
    }));
  }
  return /*#__PURE__*/_react.default.createElement(PlaceHolder, null);
};
ChartLabelComponent.displayName = 'ChartLabelComponent';
const ChartLabel = /*#__PURE__*/_react.default.memo(ChartLabelComponent);
exports.ChartLabel = ChartLabel;