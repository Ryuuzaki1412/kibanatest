"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IndexPatternsMissingPromptComponent = exports.IndexPatternsMissingPrompt = void 0;
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _react = _interopRequireDefault(require("react"));
var _kibana = require("../../../../common/lib/kibana");
var i18n = _interopRequireWildcard(require("./translations"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const IndexPatternsMissingPromptComponent = () => {
  const {
    docLinks
  } = (0, _kibana.useKibana)().services;
  const kibanaBasePath = `${(0, _kibana.useBasePath)()}/app`;
  return /*#__PURE__*/_react.default.createElement(_eui.EuiEmptyPrompt, {
    iconType: "gisApp",
    title: /*#__PURE__*/_react.default.createElement("h2", null, i18n.ERROR_TITLE),
    titleSize: "xs",
    body: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      defaultMessage: "To display map data, you must define SIEM indices ({defaultIndex}) and Kibana index patterns with matching glob patterns. When using {beats}, you can run the {setup} command on your hosts to automatically create the index patterns. For example: {example}.",
      id: "xpack.securitySolution.components.embeddables.indexPatternsMissingPrompt.errorDescription1",
      values: {
        defaultIndex: /*#__PURE__*/_react.default.createElement("a", {
          href: `${kibanaBasePath}/management/kibana/settings`,
          rel: "noopener noreferrer",
          target: "_blank"
        }, 'securitySolution:defaultIndex'),
        beats: /*#__PURE__*/_react.default.createElement("a", {
          href: `${docLinks.links.libbeat.getStarted}`,
          rel: "noopener noreferrer",
          target: "_blank"
        }, 'beats'),
        setup: /*#__PURE__*/_react.default.createElement(_eui.EuiCode, null, 'setup'),
        example: /*#__PURE__*/_react.default.createElement(_eui.EuiCode, null, './packetbeat setup')
      }
    })), /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      defaultMessage: "You can also configure index patterns manually in Kibana.",
      id: "xpack.securitySolution.components.embeddables.indexPatternsMissingPrompt.errorDescription2"
    }))),
    actions: /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
      href: `${kibanaBasePath}/management/kibana/dataViews`,
      color: "primary",
      target: "_blank",
      fill: true
    }, i18n.ERROR_BUTTON)
  });
};
exports.IndexPatternsMissingPromptComponent = IndexPatternsMissingPromptComponent;
IndexPatternsMissingPromptComponent.displayName = 'IndexPatternsMissingPromptComponent';
const IndexPatternsMissingPrompt = /*#__PURE__*/_react.default.memo(IndexPatternsMissingPromptComponent);
exports.IndexPatternsMissingPrompt = IndexPatternsMissingPrompt;
IndexPatternsMissingPrompt.displayName = 'IndexPatternsMissingPrompt';