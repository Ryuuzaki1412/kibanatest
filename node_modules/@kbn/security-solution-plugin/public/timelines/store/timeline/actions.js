"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.upsertColumn = exports.updateTotalCount = exports.updateTitleAndDescription = exports.updateTimeline = exports.updateSort = exports.updateSessionViewConfig = exports.updateSavedSearchId = exports.updateSavedSearch = exports.updateRange = exports.updateProviders = exports.updateKqlMode = exports.updateItemsPerPageOptions = exports.updateItemsPerPage = exports.updateIsLoading = exports.updateIsFavorite = exports.updateGraphEventId = exports.updateEqlOptions = exports.updateDataView = exports.updateDataProviderType = exports.updateDataProviderExcluded = exports.updateDataProviderEnabled = exports.updateColumns = exports.unPinEvent = exports.toggleModalSaveTimeline = exports.toggleDetailPanel = exports.startTimelineSaving = exports.showTimeline = exports.showCallOutUnauthorizedMsg = exports.setSelected = exports.setSavedQueryId = exports.setIsDiscoverSavedSearchLoaded = exports.setInsertTimeline = exports.setFilters = exports.setExcludedRowRendererIds = exports.setEventsLoading = exports.setEventsDeleted = exports.setDataProviderVisibility = exports.setChanged = exports.setActiveTabTimeline = exports.saveTimeline = exports.removeProvider = exports.removeColumn = exports.pinEvent = exports.initializeTimelineSettings = exports.initializeSavedSearch = exports.endTimelineSaving = exports.dataProviderEdited = exports.createTimeline = exports.clearSelected = exports.clearEventsLoading = exports.clearEventsDeleted = exports.applyKqlFilterQuery = exports.applyDeltaToColumnWidth = exports.addTimeline = exports.addProvider = exports.addNoteToEvent = exports.addNote = void 0;
var _typescriptFsa = _interopRequireDefault(require("typescript-fsa"));
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const actionCreator = (0, _typescriptFsa.default)('x-pack/security_solution/local/timeline');
const addNote = actionCreator('ADD_NOTE');
exports.addNote = addNote;
const addNoteToEvent = actionCreator('ADD_NOTE_TO_EVENT');
exports.addNoteToEvent = addNoteToEvent;
const showTimeline = actionCreator('SHOW_TIMELINE');
exports.showTimeline = showTimeline;
const setInsertTimeline = actionCreator('SET_INSERT_TIMELINE');
exports.setInsertTimeline = setInsertTimeline;
const addProvider = actionCreator('ADD_PROVIDER');
exports.addProvider = addProvider;
const saveTimeline = actionCreator('SAVE_TIMELINE');
exports.saveTimeline = saveTimeline;
const createTimeline = actionCreator('CREATE_TIMELINE');
exports.createTimeline = createTimeline;
const pinEvent = actionCreator('PIN_EVENT');
exports.pinEvent = pinEvent;
const removeProvider = actionCreator('REMOVE_PROVIDER');
exports.removeProvider = removeProvider;
const updateGraphEventId = actionCreator('UPDATE_TIMELINE_GRAPH_EVENT_ID');
exports.updateGraphEventId = updateGraphEventId;
const updateSessionViewConfig = actionCreator('UPDATE_TIMELINE_SESSION_VIEW_CONFIG');
exports.updateSessionViewConfig = updateSessionViewConfig;
const unPinEvent = actionCreator('UN_PIN_EVENT');
exports.unPinEvent = unPinEvent;
const updateTimeline = actionCreator('UPDATE_TIMELINE');
exports.updateTimeline = updateTimeline;
const addTimeline = actionCreator('ADD_TIMELINE');
exports.addTimeline = addTimeline;
const startTimelineSaving = actionCreator('START_TIMELINE_SAVING');
exports.startTimelineSaving = startTimelineSaving;
const endTimelineSaving = actionCreator('END_TIMELINE_SAVING');
exports.endTimelineSaving = endTimelineSaving;
const updateDataProviderEnabled = actionCreator('TOGGLE_PROVIDER_ENABLED');
exports.updateDataProviderEnabled = updateDataProviderEnabled;
const updateDataProviderExcluded = actionCreator('TOGGLE_PROVIDER_EXCLUDED');
exports.updateDataProviderExcluded = updateDataProviderExcluded;
const dataProviderEdited = actionCreator('DATA_PROVIDER_EDITED');
exports.dataProviderEdited = dataProviderEdited;
const updateDataProviderType = actionCreator('UPDATE_PROVIDER_TYPE');
exports.updateDataProviderType = updateDataProviderType;
const updateKqlMode = actionCreator('UPDATE_KQL_MODE');
exports.updateKqlMode = updateKqlMode;
const applyKqlFilterQuery = actionCreator('APPLY_KQL_FILTER_QUERY');
exports.applyKqlFilterQuery = applyKqlFilterQuery;
const updateIsFavorite = actionCreator('UPDATE_IS_FAVORITE');
exports.updateIsFavorite = updateIsFavorite;
const updateTitleAndDescription = actionCreator('UPDATE_TITLE_AND_DESCRIPTION');
exports.updateTitleAndDescription = updateTitleAndDescription;
const updateProviders = actionCreator('UPDATE_PROVIDERS');
exports.updateProviders = updateProviders;
const updateRange = actionCreator('UPDATE_RANGE');
exports.updateRange = updateRange;
const showCallOutUnauthorizedMsg = actionCreator('SHOW_CALL_OUT_UNAUTHORIZED_MSG');
exports.showCallOutUnauthorizedMsg = showCallOutUnauthorizedMsg;
const setSavedQueryId = actionCreator('SET_TIMELINE_SAVED_QUERY');
exports.setSavedQueryId = setSavedQueryId;
const setFilters = actionCreator('SET_TIMELINE_FILTERS');
exports.setFilters = setFilters;
const setExcludedRowRendererIds = actionCreator('SET_TIMELINE_EXCLUDED_ROW_RENDERER_IDS');
exports.setExcludedRowRendererIds = setExcludedRowRendererIds;
const updateDataView = actionCreator('UPDATE_DATA_VIEW');
exports.updateDataView = updateDataView;
const setActiveTabTimeline = actionCreator('SET_ACTIVE_TAB_TIMELINE');
exports.setActiveTabTimeline = setActiveTabTimeline;
const toggleModalSaveTimeline = actionCreator('TOGGLE_MODAL_SAVE_TIMELINE');
exports.toggleModalSaveTimeline = toggleModalSaveTimeline;
const updateEqlOptions = actionCreator('UPDATE_EQL_OPTIONS_TIMELINE');
exports.updateEqlOptions = updateEqlOptions;
const updateIsLoading = actionCreator('UPDATE_LOADING');
exports.updateIsLoading = updateIsLoading;
const toggleDetailPanel = actionCreator('TOGGLE_DETAIL_PANEL');
exports.toggleDetailPanel = toggleDetailPanel;
const setEventsLoading = actionCreator('SET_TIMELINE_EVENTS_LOADING');
exports.setEventsLoading = setEventsLoading;
const setEventsDeleted = actionCreator('SET_TIMELINE_EVENTS_DELETED');
exports.setEventsDeleted = setEventsDeleted;
const removeColumn = actionCreator('REMOVE_COLUMN');
exports.removeColumn = removeColumn;
const updateColumns = actionCreator('UPDATE_COLUMNS');
exports.updateColumns = updateColumns;
const updateSort = actionCreator('UPDATE_SORT');
exports.updateSort = updateSort;
const upsertColumn = actionCreator('UPSERT_COLUMN');
exports.upsertColumn = upsertColumn;
const setSelected = actionCreator('SET_TIMELINE_SELECTED');
exports.setSelected = setSelected;
const clearSelected = actionCreator('CLEAR_TIMELINE_SELECTED');
exports.clearSelected = clearSelected;
const initializeTimelineSettings = actionCreator('INITIALIZE_TIMELINE');
exports.initializeTimelineSettings = initializeTimelineSettings;
const updateItemsPerPage = actionCreator('UPDATE_ITEMS_PER_PAGE');
exports.updateItemsPerPage = updateItemsPerPage;
const updateItemsPerPageOptions = actionCreator('UPDATE_ITEMS_PER_PAGE_OPTIONS');
exports.updateItemsPerPageOptions = updateItemsPerPageOptions;
const applyDeltaToColumnWidth = actionCreator('APPLY_DELTA_TO_COLUMN_WIDTH');
exports.applyDeltaToColumnWidth = applyDeltaToColumnWidth;
const clearEventsLoading = actionCreator('CLEAR_TGRID_EVENTS_LOADING');
exports.clearEventsLoading = clearEventsLoading;
const clearEventsDeleted = actionCreator('CLEAR_TGRID_EVENTS_DELETED');
exports.clearEventsDeleted = clearEventsDeleted;
const updateTotalCount = actionCreator('UPDATE_TOTAL_COUNT');
exports.updateTotalCount = updateTotalCount;
const updateSavedSearchId = actionCreator('UPDATE_DISCOVER_SAVED_SEARCH_ID');
exports.updateSavedSearchId = updateSavedSearchId;
const setIsDiscoverSavedSearchLoaded = actionCreator('SET_IS_DISCOVER_SAVED_SEARCH_LOADED');
exports.setIsDiscoverSavedSearchLoaded = setIsDiscoverSavedSearchLoaded;
const initializeSavedSearch = actionCreator('INITIALIZE_SAVED_SEARCH');
exports.initializeSavedSearch = initializeSavedSearch;
const updateSavedSearch = actionCreator('UPDATE_SAVED_SEARCH');
exports.updateSavedSearch = updateSavedSearch;
const setDataProviderVisibility = actionCreator('SET_DATA_PROVIDER_VISIBLITY');
exports.setDataProviderVisibility = setDataProviderVisibility;
const setChanged = actionCreator('SET_CHANGED');
exports.setChanged = setChanged;