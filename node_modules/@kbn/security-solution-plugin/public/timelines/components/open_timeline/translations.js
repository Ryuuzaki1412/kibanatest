"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ZERO_TIMELINE_TEMPLATES_MATCH = exports.ZERO_TIMELINES_MATCH = exports.WITH = exports.UNTITLED_TIMELINE = exports.TIMELINE_TEMPLATE_NAME = exports.TIMELINE_NAME = exports.TAB_TIMELINES = exports.TAB_TEMPLATES = exports.SUCCESSFULLY_IMPORTED_TIMELINES = exports.SUCCESSFULLY_EXPORTED_TIMELINE_TEMPLATES = exports.SUCCESSFULLY_EXPORTED_TIMELINES = exports.SUCCESSFULLY_DELETED_TIMELINE_TEMPLATES = exports.SUCCESSFULLY_DELETED_TIMELINES = exports.SHOWING = exports.SELECT_TIMELINE = exports.SELECTED_TIMELINES = exports.SELECTED_TEMPLATES = exports.SEARCH_TEMPLATE_PLACEHOLDER = exports.SEARCH_PLACEHOLDER = exports.REFRESH = exports.PINNED_EVENTS = exports.OVERWRITE_WITH_SAME_NAME = exports.OPEN_TIMELINE_TITLE = exports.OPEN_TIMELINE = exports.OPEN_AS_DUPLICATE_TEMPLATE = exports.OPEN_AS_DUPLICATE = exports.ONLY_FAVORITES = exports.NOTES = exports.MODIFIED_BY = exports.MISSING_SAVED_OBJECT_ID = exports.LOADING = exports.LAST_MODIFIED = exports.INITIAL_PROMPT_TEXT = exports.IMPORT_TIMELINE_BTN_TITLE = exports.IMPORT_TIMELINE = exports.IMPORT_FAILED_DETAILED = exports.IMPORT_FAILED = exports.FILTER_ELASTIC_TIMELINES = exports.FILTER_CUSTOM_TIMELINES = exports.FAVORITE_SELECTED = exports.FAVORITES = exports.EXPORT_SELECTED = exports.EXPORT_FILENAME = exports.EXPAND = exports.DESCRIPTION = exports.DELETE_TIMELINE_WARNING = exports.DELETE_TIMELINE_TEMPLATE_WARNING = exports.DELETE_SELECTED = exports.DELETE = exports.CREATE_TIMELINE_FROM_TEMPLATE = exports.CREATE_TEMPLATE_FROM_TIMELINE = exports.CREATE_RULE_FROM_TIMELINE_CORRELATION = exports.CREATE_RULE_FROM_TIMELINE = exports.COLLAPSE = exports.CANCEL = exports.BATCH_ACTIONS = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const BATCH_ACTIONS = _i18n.i18n.translate('xpack.securitySolution.open.timeline.batchActionsTitle', {
  defaultMessage: 'Bulk actions'
});
exports.BATCH_ACTIONS = BATCH_ACTIONS;
const CANCEL = _i18n.i18n.translate('xpack.securitySolution.open.timeline.cancelButton', {
  defaultMessage: 'Cancel'
});
exports.CANCEL = CANCEL;
const COLLAPSE = _i18n.i18n.translate('xpack.securitySolution.open.timeline.collapseButton', {
  defaultMessage: 'Collapse'
});
exports.COLLAPSE = COLLAPSE;
const DELETE = _i18n.i18n.translate('xpack.securitySolution.open.timeline.deleteButton', {
  defaultMessage: 'Delete'
});
exports.DELETE = DELETE;
const DELETE_SELECTED = _i18n.i18n.translate('xpack.securitySolution.open.timeline.deleteSelectedButton', {
  defaultMessage: 'Delete selected'
});
exports.DELETE_SELECTED = DELETE_SELECTED;
const DELETE_TIMELINE_WARNING = _i18n.i18n.translate('xpack.securitySolution.open.timeline.deleteWarningLabel', {
  defaultMessage: 'You will not be able to recover this timeline or its notes once deleted.'
});
exports.DELETE_TIMELINE_WARNING = DELETE_TIMELINE_WARNING;
const DELETE_TIMELINE_TEMPLATE_WARNING = _i18n.i18n.translate('xpack.securitySolution.open.timeline.deleteTemplateWarningLabel', {
  defaultMessage: 'You will not be able to recover this timeline template or its notes once deleted.'
});
exports.DELETE_TIMELINE_TEMPLATE_WARNING = DELETE_TIMELINE_TEMPLATE_WARNING;
const DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.open.timeline.descriptionTableHeader', {
  defaultMessage: 'Description'
});
exports.DESCRIPTION = DESCRIPTION;
const EXPAND = _i18n.i18n.translate('xpack.securitySolution.open.timeline.expandButton', {
  defaultMessage: 'Expand'
});
exports.EXPAND = EXPAND;
const EXPORT_FILENAME = _i18n.i18n.translate('xpack.securitySolution.open.timeline.exportFileNameTitle', {
  defaultMessage: 'timelines_export'
});
exports.EXPORT_FILENAME = EXPORT_FILENAME;
const EXPORT_SELECTED = _i18n.i18n.translate('xpack.securitySolution.open.timeline.exportSelectedButton', {
  defaultMessage: 'Export selected'
});
exports.EXPORT_SELECTED = EXPORT_SELECTED;
const FAVORITE_SELECTED = _i18n.i18n.translate('xpack.securitySolution.open.timeline.favoriteSelectedButton', {
  defaultMessage: 'Favorite selected'
});
exports.FAVORITE_SELECTED = FAVORITE_SELECTED;
const FAVORITES = _i18n.i18n.translate('xpack.securitySolution.open.timeline.favoritesTooltip', {
  defaultMessage: 'Favorites'
});
exports.FAVORITES = FAVORITES;
const LAST_MODIFIED = _i18n.i18n.translate('xpack.securitySolution.open.timeline.lastModifiedTableHeader', {
  defaultMessage: 'Last modified'
});
exports.LAST_MODIFIED = LAST_MODIFIED;
const MISSING_SAVED_OBJECT_ID = _i18n.i18n.translate('xpack.securitySolution.open.timeline.missingSavedObjectIdTooltip', {
  defaultMessage: 'Missing savedObjectId'
});
exports.MISSING_SAVED_OBJECT_ID = MISSING_SAVED_OBJECT_ID;
const MODIFIED_BY = _i18n.i18n.translate('xpack.securitySolution.open.timeline.modifiedByTableHeader', {
  defaultMessage: 'Modified by'
});
exports.MODIFIED_BY = MODIFIED_BY;
const NOTES = _i18n.i18n.translate('xpack.securitySolution.open.timeline.notesTooltip', {
  defaultMessage: 'Notes'
});
exports.NOTES = NOTES;
const ONLY_FAVORITES = _i18n.i18n.translate('xpack.securitySolution.open.timeline.onlyFavoritesButtonLabel', {
  defaultMessage: 'Only favorites'
});
exports.ONLY_FAVORITES = ONLY_FAVORITES;
const CREATE_RULE_FROM_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.open.timeline.createRuleFromTimelineTooltip', {
  defaultMessage: 'Create query rule from timeline'
});
exports.CREATE_RULE_FROM_TIMELINE = CREATE_RULE_FROM_TIMELINE;
const CREATE_RULE_FROM_TIMELINE_CORRELATION = _i18n.i18n.translate('xpack.securitySolution.open.timeline.createRuleFromTimelineEqlTooltip', {
  defaultMessage: 'Create EQL rule from timeline'
});
exports.CREATE_RULE_FROM_TIMELINE_CORRELATION = CREATE_RULE_FROM_TIMELINE_CORRELATION;
const CREATE_TEMPLATE_FROM_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.open.timeline.createTemplateFromTimelineTooltip', {
  defaultMessage: 'Create template from timeline'
});
exports.CREATE_TEMPLATE_FROM_TIMELINE = CREATE_TEMPLATE_FROM_TIMELINE;
const CREATE_TIMELINE_FROM_TEMPLATE = _i18n.i18n.translate('xpack.securitySolution.open.timeline.createTimelineFromTemplateTooltip', {
  defaultMessage: 'Create timeline from template'
});
exports.CREATE_TIMELINE_FROM_TEMPLATE = CREATE_TIMELINE_FROM_TEMPLATE;
const OPEN_AS_DUPLICATE = _i18n.i18n.translate('xpack.securitySolution.open.timeline.openAsDuplicateTooltip', {
  defaultMessage: 'Duplicate timeline'
});
exports.OPEN_AS_DUPLICATE = OPEN_AS_DUPLICATE;
const OPEN_AS_DUPLICATE_TEMPLATE = _i18n.i18n.translate('xpack.securitySolution.open.timeline.openAsDuplicateTemplateTooltip', {
  defaultMessage: 'Duplicate template'
});
exports.OPEN_AS_DUPLICATE_TEMPLATE = OPEN_AS_DUPLICATE_TEMPLATE;
const OPEN_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.open.timeline.openTimelineButton', {
  defaultMessage: 'Open Timelineâ€¦'
});
exports.OPEN_TIMELINE = OPEN_TIMELINE;
const OPEN_TIMELINE_TITLE = _i18n.i18n.translate('xpack.securitySolution.open.timeline.openTimelineTitle', {
  defaultMessage: 'Open'
});
exports.OPEN_TIMELINE_TITLE = OPEN_TIMELINE_TITLE;
const PINNED_EVENTS = _i18n.i18n.translate('xpack.securitySolution.open.timeline.pinnedEventsTooltip', {
  defaultMessage: 'Pinned events'
});
exports.PINNED_EVENTS = PINNED_EVENTS;
const REFRESH = _i18n.i18n.translate('xpack.securitySolution.open.timeline.refreshTitle', {
  defaultMessage: 'Refresh'
});
exports.REFRESH = REFRESH;
const SEARCH_PLACEHOLDER = _i18n.i18n.translate('xpack.securitySolution.open.timeline.searchPlaceholder', {
  defaultMessage: 'e.g. timeline name, or description'
});
exports.SEARCH_PLACEHOLDER = SEARCH_PLACEHOLDER;
const SEARCH_TEMPLATE_PLACEHOLDER = _i18n.i18n.translate('xpack.securitySolution.open.timeline.searchTemplatePlaceholder', {
  defaultMessage: 'e.g. template name, or description'
});
exports.SEARCH_TEMPLATE_PLACEHOLDER = SEARCH_TEMPLATE_PLACEHOLDER;
const TIMELINE_NAME = _i18n.i18n.translate('xpack.securitySolution.open.timeline.timelineNameTableHeader', {
  defaultMessage: 'Timeline name'
});
exports.TIMELINE_NAME = TIMELINE_NAME;
const TIMELINE_TEMPLATE_NAME = _i18n.i18n.translate('xpack.securitySolution.open.timeline.timelineTemplateNameTableHeader', {
  defaultMessage: 'Template name'
});
exports.TIMELINE_TEMPLATE_NAME = TIMELINE_TEMPLATE_NAME;
const UNTITLED_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.open.timeline.untitledTimelineLabel', {
  defaultMessage: 'Untitled timeline'
});
exports.UNTITLED_TIMELINE = UNTITLED_TIMELINE;
const WITH = _i18n.i18n.translate('xpack.securitySolution.open.timeline.withLabel', {
  defaultMessage: 'with'
});
exports.WITH = WITH;
const LOADING = _i18n.i18n.translate('xpack.securitySolution.open.timeline.loadingLabel', {
  defaultMessage: 'Loading...'
});
exports.LOADING = LOADING;
const ZERO_TIMELINES_MATCH = _i18n.i18n.translate('xpack.securitySolution.open.timeline.zeroTimelinesMatchLabel', {
  defaultMessage: '0 timelines match the search criteria'
});
exports.ZERO_TIMELINES_MATCH = ZERO_TIMELINES_MATCH;
const ZERO_TIMELINE_TEMPLATES_MATCH = _i18n.i18n.translate('xpack.securitySolution.open.timeline.zeroTimelineTemplatesMatchLabel', {
  defaultMessage: '0 timeline templates match the search criteria'
});
exports.ZERO_TIMELINE_TEMPLATES_MATCH = ZERO_TIMELINE_TEMPLATES_MATCH;
const SELECTED_TEMPLATES = selectedTemplates => _i18n.i18n.translate('xpack.securitySolution.open.timeline.selectedTemplatesTitle', {
  values: {
    selectedTemplates
  },
  defaultMessage: 'Selected {selectedTemplates} {selectedTemplates, plural, =1 {template} other {templates}}'
});
exports.SELECTED_TEMPLATES = SELECTED_TEMPLATES;
const SELECTED_TIMELINES = selectedTimelines => _i18n.i18n.translate('xpack.securitySolution.open.timeline.selectedTimelinesTitle', {
  values: {
    selectedTimelines
  },
  defaultMessage: 'Selected {selectedTimelines} {selectedTimelines, plural, =1 {timeline} other {timelines}}'
});
exports.SELECTED_TIMELINES = SELECTED_TIMELINES;
const SHOWING = _i18n.i18n.translate('xpack.securitySolution.open.timeline.showingLabel', {
  defaultMessage: 'Showing:'
});
exports.SHOWING = SHOWING;
const SUCCESSFULLY_EXPORTED_TIMELINES = totalTimelines => _i18n.i18n.translate('xpack.securitySolution.open.timeline.successfullyExportedTimelinesTitle', {
  values: {
    totalTimelines
  },
  defaultMessage: 'Successfully exported {totalTimelines, plural, =0 {all timelines} =1 {{totalTimelines} timeline} other {{totalTimelines} timelines}}'
});
exports.SUCCESSFULLY_EXPORTED_TIMELINES = SUCCESSFULLY_EXPORTED_TIMELINES;
const SUCCESSFULLY_EXPORTED_TIMELINE_TEMPLATES = totalTimelineTemplates => _i18n.i18n.translate('xpack.securitySolution.open.timeline.successfullyExportedTimelineTemplatesTitle', {
  values: {
    totalTimelineTemplates
  },
  defaultMessage: 'Successfully exported {totalTimelineTemplates, plural, =0 {all timelines} =1 {{totalTimelineTemplates} timeline template} other {{totalTimelineTemplates} timeline templates}}'
});
exports.SUCCESSFULLY_EXPORTED_TIMELINE_TEMPLATES = SUCCESSFULLY_EXPORTED_TIMELINE_TEMPLATES;
const SUCCESSFULLY_DELETED_TIMELINES = totalTimelines => _i18n.i18n.translate('xpack.securitySolution.open.timeline.successfullyDeletedTimelinesTitle', {
  values: {
    totalTimelines
  },
  defaultMessage: 'Successfully deleted {totalTimelines, plural, =0 {all timelines} =1 {{totalTimelines} timeline} other {{totalTimelines} timelines}}'
});
exports.SUCCESSFULLY_DELETED_TIMELINES = SUCCESSFULLY_DELETED_TIMELINES;
const SUCCESSFULLY_DELETED_TIMELINE_TEMPLATES = totalTimelineTemplates => _i18n.i18n.translate('xpack.securitySolution.open.timeline.successfullyDeletedTimelineTemplatesTitle', {
  values: {
    totalTimelineTemplates
  },
  defaultMessage: 'Successfully deleted {totalTimelineTemplates, plural, =0 {all timelines} =1 {{totalTimelineTemplates} timeline template} other {{totalTimelineTemplates} timeline templates}}'
});
exports.SUCCESSFULLY_DELETED_TIMELINE_TEMPLATES = SUCCESSFULLY_DELETED_TIMELINE_TEMPLATES;
const TAB_TIMELINES = _i18n.i18n.translate('xpack.securitySolution.timelines.components.tabs.timelinesTitle', {
  defaultMessage: 'Timelines'
});
exports.TAB_TIMELINES = TAB_TIMELINES;
const TAB_TEMPLATES = _i18n.i18n.translate('xpack.securitySolution.timelines.components.tabs.templatesTitle', {
  defaultMessage: 'Templates'
});
exports.TAB_TEMPLATES = TAB_TEMPLATES;
const FILTER_ELASTIC_TIMELINES = _i18n.i18n.translate('xpack.securitySolution.timelines.components.templateFilter.elasticTitle', {
  defaultMessage: 'Elastic templates'
});
exports.FILTER_ELASTIC_TIMELINES = FILTER_ELASTIC_TIMELINES;
const FILTER_CUSTOM_TIMELINES = _i18n.i18n.translate('xpack.securitySolution.timelines.components.templateFilter.customizedTitle', {
  defaultMessage: 'Custom templates'
});
exports.FILTER_CUSTOM_TIMELINES = FILTER_CUSTOM_TIMELINES;
const IMPORT_TIMELINE_BTN_TITLE = _i18n.i18n.translate('xpack.securitySolution.timelines.components.importTimelineModal.importTimelineTitle', {
  defaultMessage: 'Import'
});
exports.IMPORT_TIMELINE_BTN_TITLE = IMPORT_TIMELINE_BTN_TITLE;
const SELECT_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.timelines.components.importTimelineModal.selectTimelineDescription', {
  defaultMessage: 'Select a timeline or timeline template file to import'
});
exports.SELECT_TIMELINE = SELECT_TIMELINE;
const INITIAL_PROMPT_TEXT = _i18n.i18n.translate('xpack.securitySolution.timelines.components.importTimelineModal.initialPromptTextDescription', {
  defaultMessage: 'Select or drag and drop a valid timelines_export.ndjson file'
});
exports.INITIAL_PROMPT_TEXT = INITIAL_PROMPT_TEXT;
const OVERWRITE_WITH_SAME_NAME = _i18n.i18n.translate('xpack.securitySolution.timelines.components.importTimelineModal.overwriteDescription', {
  defaultMessage: 'Automatically overwrite saved objects with the same timeline ID'
});
exports.OVERWRITE_WITH_SAME_NAME = OVERWRITE_WITH_SAME_NAME;
const SUCCESSFULLY_IMPORTED_TIMELINES = totalCount => _i18n.i18n.translate('xpack.securitySolution.timelines.components.importTimelineModal.successfullyImportedTimelinesTitle', {
  values: {
    totalCount
  },
  defaultMessage: 'Successfully imported {totalCount} {totalCount, plural, =1 {item} other {items}}'
});
exports.SUCCESSFULLY_IMPORTED_TIMELINES = SUCCESSFULLY_IMPORTED_TIMELINES;
const IMPORT_FAILED = totalTimelines => _i18n.i18n.translate('xpack.securitySolution.timelines.components.importTimelineModal.importFailedTitle', {
  values: {
    totalTimelines
  },
  defaultMessage: 'Failed to import {totalTimelines} {totalTimelines, plural, =1 {timeline} other {timelines}}'
});
exports.IMPORT_FAILED = IMPORT_FAILED;
const IMPORT_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.timelines.components.importTimelineModal.importTitle', {
  defaultMessage: 'Importâ€¦'
});
exports.IMPORT_TIMELINE = IMPORT_TIMELINE;
const IMPORT_FAILED_DETAILED = message => _i18n.i18n.translate('xpack.securitySolution.timelines.components.importTimelineModal.importFailedDetailedTitle', {
  values: {
    message
  },
  defaultMessage: '{message}'
});
exports.IMPORT_FAILED_DETAILED = IMPORT_FAILED_DETAILED;