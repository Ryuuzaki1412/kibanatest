"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UNTITLED_TIMELINE = exports.UNTITLED_TEMPLATE = exports.TIMELINE_DESCRIPTION = exports.REMOVE_FROM_FAVORITES = exports.NOTES = exports.NEW_TIMELINE = exports.NEW_TEMPLATE_TIMELINE = exports.DESCRIPTION = exports.ATTACH_TO_NEW_CASE = exports.ATTACH_TO_EXISTING_CASE = exports.ATTACH_TO_CASE = exports.ADD_TO_FAVORITES = exports.ADD_TIMELINE = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const TIMELINE_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.timelineDescription', {
  defaultMessage: 'Timeline Description'
});
exports.TIMELINE_DESCRIPTION = TIMELINE_DESCRIPTION;
const ADD_TO_FAVORITES = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.addToFavoriteButtonLabel', {
  defaultMessage: 'Add to favorites'
});
exports.ADD_TO_FAVORITES = ADD_TO_FAVORITES;
const REMOVE_FROM_FAVORITES = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.removeFromFavoritesButtonLabel', {
  defaultMessage: 'Remove from favorites'
});
exports.REMOVE_FROM_FAVORITES = REMOVE_FROM_FAVORITES;
const UNTITLED_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.untitledTimelinePlaceholder', {
  defaultMessage: 'Untitled timeline'
});
exports.UNTITLED_TIMELINE = UNTITLED_TIMELINE;
const UNTITLED_TEMPLATE = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.untitledTemplatePlaceholder', {
  defaultMessage: 'Untitled template'
});
exports.UNTITLED_TEMPLATE = UNTITLED_TEMPLATE;
const DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.descriptionPlaceholder', {
  defaultMessage: 'Add a description'
});
exports.DESCRIPTION = DESCRIPTION;
const NOTES = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.notesButtonLabel', {
  defaultMessage: 'Notes'
});
exports.NOTES = NOTES;
const NEW_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.newTimelineButtonLabel', {
  defaultMessage: 'Create new Timeline'
});
exports.NEW_TIMELINE = NEW_TIMELINE;
const NEW_TEMPLATE_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.newTemplateTimelineButtonLabel', {
  defaultMessage: 'Create new Timeline template'
});
exports.NEW_TEMPLATE_TIMELINE = NEW_TEMPLATE_TIMELINE;
const ADD_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.addTimelineButtonLabel', {
  defaultMessage: 'Add new timeline or template'
});
exports.ADD_TIMELINE = ADD_TIMELINE;
const ATTACH_TO_CASE = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.attachToCaseButtonLabel', {
  defaultMessage: 'Attach to case'
});
exports.ATTACH_TO_CASE = ATTACH_TO_CASE;
const ATTACH_TO_NEW_CASE = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.attachToNewCaseButtonLabel', {
  defaultMessage: 'Attach to new case'
});
exports.ATTACH_TO_NEW_CASE = ATTACH_TO_NEW_CASE;
const ATTACH_TO_EXISTING_CASE = _i18n.i18n.translate('xpack.securitySolution.timeline.properties.attachToExistingCaseButtonLabel', {
  defaultMessage: 'Attach to existing case'
});
exports.ATTACH_TO_EXISTING_CASE = ATTACH_TO_EXISTING_CASE;