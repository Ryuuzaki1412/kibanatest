"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ExceptionsLinkedToLists = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var i18n = _interopRequireWildcard(require("./translations"));
var _utils = require("../utils");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const SectionHeader = (0, _styledComponents.default)(_eui.EuiTitle)`
  ${() => (0, _styledComponents.css)`
    font-weight: ${({
  theme
}) => theme.eui.euiFontWeightSemiBold};
  `}
`;
const ExceptionsLinkedToListsComponent = ({
  isLoadingReferences,
  errorFetchingReferences,
  listAndReferences
}) => {
  const [message, setMessage] = (0, _react.useState)( /*#__PURE__*/_react.default.createElement(_eui.EuiSkeletonText, {
    lines: 4,
    "data-test-subj": "exceptionItemListsTableLoading"
  }));
  const [error, setError] = (0, _react.useState)(undefined);
  (0, _react.useEffect)(() => {
    if (errorFetchingReferences) {
      setError(i18n.LINKED_TO_LIST_ERROR);
    } else if (!isLoadingReferences) {
      setMessage(undefined);
    }
  }, [errorFetchingReferences, isLoadingReferences]);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPanel, {
    paddingSize: "none",
    hasShadow: false,
    "data-test-subj": "exceptionItemLinkedToListSection"
  }, /*#__PURE__*/_react.default.createElement(SectionHeader, {
    size: "xs"
  }, /*#__PURE__*/_react.default.createElement("h3", null, i18n.LINKED_TO_LIST_TITLE)), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiInMemoryTable, {
    tableCaption: "Table of exception lists",
    itemId: "id",
    message: message,
    loading: isLoadingReferences,
    items: listAndReferences,
    error: error,
    columns: (0, _utils.getSharedListsTableColumns)(),
    isSelectable: false,
    sorting: true,
    "data-test-subj": "exceptionItemSharedList"
  }));
};
const ExceptionsLinkedToLists = /*#__PURE__*/_react.default.memo(ExceptionsLinkedToListsComponent);
exports.ExceptionsLinkedToLists = ExceptionsLinkedToLists;
ExceptionsLinkedToLists.displayName = 'ExceptionsLinkedToLists';