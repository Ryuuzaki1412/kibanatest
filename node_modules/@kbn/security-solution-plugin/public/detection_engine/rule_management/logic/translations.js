"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TIMELINE_PREPACKAGED_SUCCESS = exports.RULE_PREPACKAGED_SUCCESS = exports.RULE_MANAGEMENT_FILTERS_FETCH_FAILURE = exports.RULE_AND_TIMELINE_PREPACKAGED_SUCCESS = exports.RULE_AND_TIMELINE_PREPACKAGED_FAILURE = exports.RULE_AND_TIMELINE_FETCH_FAILURE = exports.RULE_ADD_FAILURE = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const RULE_AND_TIMELINE_FETCH_FAILURE = _i18n.i18n.translate('xpack.securitySolution.containers.detectionEngine.rulesAndTimelines', {
  defaultMessage: 'Failed to fetch Rules and Timelines'
});
exports.RULE_AND_TIMELINE_FETCH_FAILURE = RULE_AND_TIMELINE_FETCH_FAILURE;
const RULE_MANAGEMENT_FILTERS_FETCH_FAILURE = _i18n.i18n.translate('xpack.securitySolution.containers.detectionEngine.ruleManagementFiltersFetchFailure', {
  defaultMessage: 'Failed to fetch rule filters'
});
exports.RULE_MANAGEMENT_FILTERS_FETCH_FAILURE = RULE_MANAGEMENT_FILTERS_FETCH_FAILURE;
const RULE_ADD_FAILURE = _i18n.i18n.translate('xpack.securitySolution.containers.detectionEngine.addRuleFailDescription', {
  defaultMessage: 'Failed to add Rule'
});
exports.RULE_ADD_FAILURE = RULE_ADD_FAILURE;
const RULE_AND_TIMELINE_PREPACKAGED_FAILURE = _i18n.i18n.translate('xpack.securitySolution.containers.detectionEngine.createPrePackagedRuleAndTimelineFailDescription', {
  defaultMessage: 'Failed to installed pre-packaged rules and timelines from elastic'
});
exports.RULE_AND_TIMELINE_PREPACKAGED_FAILURE = RULE_AND_TIMELINE_PREPACKAGED_FAILURE;
const RULE_AND_TIMELINE_PREPACKAGED_SUCCESS = _i18n.i18n.translate('xpack.securitySolution.containers.detectionEngine.createPrePackagedRuleAndTimelineSuccesDescription', {
  defaultMessage: 'Installed pre-packaged rules and timeline templates from elastic'
});
exports.RULE_AND_TIMELINE_PREPACKAGED_SUCCESS = RULE_AND_TIMELINE_PREPACKAGED_SUCCESS;
const RULE_PREPACKAGED_SUCCESS = _i18n.i18n.translate('xpack.securitySolution.containers.detectionEngine.createPrePackagedRuleSuccesDescription', {
  defaultMessage: 'Installed pre-packaged rules from elastic'
});
exports.RULE_PREPACKAGED_SUCCESS = RULE_PREPACKAGED_SUCCESS;
const TIMELINE_PREPACKAGED_SUCCESS = _i18n.i18n.translate('xpack.securitySolution.containers.detectionEngine.createPrePackagedTimelineSuccesDescription', {
  defaultMessage: 'Installed pre-packaged timeline templates from elastic'
});
exports.TIMELINE_PREPACKAGED_SUCCESS = TIMELINE_PREPACKAGED_SUCCESS;