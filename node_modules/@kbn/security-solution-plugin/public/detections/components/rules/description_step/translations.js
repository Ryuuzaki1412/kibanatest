"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.THRESHOLD_TYPE_DESCRIPTION = exports.THRESHOLD_RESULTS_ALL = exports.THRESHOLD_RESULTS_AGGREGATED_BY = exports.THREAT_QUERY_LABEL = exports.THREAT_MATCH_TYPE_DESCRIPTION = exports.SAVED_QUERY_NAME_LABEL = exports.SAVED_QUERY_LABEL = exports.SAVED_QUERY_FILTERS_LABEL = exports.QUERY_TYPE_DESCRIPTION = exports.QUERY_LABEL = exports.NEW_TERMS_TYPE_DESCRIPTION = exports.ML_TYPE_DESCRIPTION = exports.FILTERS_LABEL = exports.ESQL_TYPE_DESCRIPTION = exports.ESQL_QUERY_LABEL = exports.EQL_TYPE_DESCRIPTION = exports.EQL_TIMESTAMP_FIELD_LABEL = exports.EQL_TIEBREAKER_FIELD_LABEL = exports.EQL_QUERY_LABEL = exports.EQL_EVENT_CATEGORY_FIELD_LABEL = exports.BUILDING_BLOCK_LABEL = exports.BUILDING_BLOCK_DESCRIPTION = exports.ALERT_SUPPRESSION_SUPPRESS_ON_MISSING_FIELDS = exports.ALERT_SUPPRESSION_PER_RULE_EXECUTION = exports.ALERT_SUPPRESSION_DO_NOT_SUPPRESS_ON_MISSING_FIELDS = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const FILTERS_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.filtersLabel', {
  defaultMessage: 'Filters'
});
exports.FILTERS_LABEL = FILTERS_LABEL;
const QUERY_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.queryLabel', {
  defaultMessage: 'Custom query'
});
exports.QUERY_LABEL = QUERY_LABEL;
const EQL_QUERY_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.eqlQueryLabel', {
  defaultMessage: 'EQL query'
});
exports.EQL_QUERY_LABEL = EQL_QUERY_LABEL;
const ESQL_QUERY_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.esqlQueryLabel', {
  defaultMessage: 'ES|QL query'
});
exports.ESQL_QUERY_LABEL = ESQL_QUERY_LABEL;
const THREAT_QUERY_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.threatQueryLabel', {
  defaultMessage: 'Indicator index query'
});
exports.THREAT_QUERY_LABEL = THREAT_QUERY_LABEL;
const SAVED_QUERY_NAME_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.savedIdLabel', {
  defaultMessage: 'Saved query name'
});
exports.SAVED_QUERY_NAME_LABEL = SAVED_QUERY_NAME_LABEL;
const SAVED_QUERY_FILTERS_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.savedQueryFiltersLabel', {
  defaultMessage: 'Saved query filters'
});
exports.SAVED_QUERY_FILTERS_LABEL = SAVED_QUERY_FILTERS_LABEL;
const SAVED_QUERY_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.savedQueryLabel', {
  defaultMessage: 'Saved query'
});
exports.SAVED_QUERY_LABEL = SAVED_QUERY_LABEL;
const ML_TYPE_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.mlRuleTypeDescription', {
  defaultMessage: 'Machine Learning'
});
exports.ML_TYPE_DESCRIPTION = ML_TYPE_DESCRIPTION;
const EQL_TYPE_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.eqlRuleTypeDescription', {
  defaultMessage: 'Event Correlation'
});
exports.EQL_TYPE_DESCRIPTION = EQL_TYPE_DESCRIPTION;
const QUERY_TYPE_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.queryRuleTypeDescription', {
  defaultMessage: 'Query'
});
exports.QUERY_TYPE_DESCRIPTION = QUERY_TYPE_DESCRIPTION;
const THRESHOLD_TYPE_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.thresholdRuleTypeDescription', {
  defaultMessage: 'Threshold'
});
exports.THRESHOLD_TYPE_DESCRIPTION = THRESHOLD_TYPE_DESCRIPTION;
const THREAT_MATCH_TYPE_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.threatMatchRuleTypeDescription', {
  defaultMessage: 'Indicator Match'
});
exports.THREAT_MATCH_TYPE_DESCRIPTION = THREAT_MATCH_TYPE_DESCRIPTION;
const NEW_TERMS_TYPE_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.newTermsRuleTypeDescription', {
  defaultMessage: 'New Terms'
});
exports.NEW_TERMS_TYPE_DESCRIPTION = NEW_TERMS_TYPE_DESCRIPTION;
const ESQL_TYPE_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.esqlRuleTypeDescription', {
  defaultMessage: 'ES|QL'
});
exports.ESQL_TYPE_DESCRIPTION = ESQL_TYPE_DESCRIPTION;
const THRESHOLD_RESULTS_ALL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.ruleDescription.thresholdResultsAllDescription', {
  defaultMessage: 'All results'
});
exports.THRESHOLD_RESULTS_ALL = THRESHOLD_RESULTS_ALL;
const THRESHOLD_RESULTS_AGGREGATED_BY = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.ruleDescription.thresholdResultsAggregatedByDescription', {
  defaultMessage: 'Results aggregated by'
});
exports.THRESHOLD_RESULTS_AGGREGATED_BY = THRESHOLD_RESULTS_AGGREGATED_BY;
const EQL_EVENT_CATEGORY_FIELD_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.ruleDescription.eqlEventCategoryFieldLabel', {
  defaultMessage: 'Event category field'
});
exports.EQL_EVENT_CATEGORY_FIELD_LABEL = EQL_EVENT_CATEGORY_FIELD_LABEL;
const EQL_TIEBREAKER_FIELD_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.ruleDescription.eqlTiebreakerFieldLabel', {
  defaultMessage: 'Tiebreaker field'
});
exports.EQL_TIEBREAKER_FIELD_LABEL = EQL_TIEBREAKER_FIELD_LABEL;
const EQL_TIMESTAMP_FIELD_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.ruleDescription.eqlTimestampFieldLabel', {
  defaultMessage: 'Timestamp field'
});
exports.EQL_TIMESTAMP_FIELD_LABEL = EQL_TIMESTAMP_FIELD_LABEL;
const ALERT_SUPPRESSION_PER_RULE_EXECUTION = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.ruleDescription.alertSuppressionPerRuleExecution', {
  defaultMessage: 'One rule execution'
});
exports.ALERT_SUPPRESSION_PER_RULE_EXECUTION = ALERT_SUPPRESSION_PER_RULE_EXECUTION;
const ALERT_SUPPRESSION_SUPPRESS_ON_MISSING_FIELDS = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.ruleDescription.alertSuppressionSuppressOnMissingFieldsDescription', {
  defaultMessage: 'Suppress and group alerts for events with missing fields'
});
exports.ALERT_SUPPRESSION_SUPPRESS_ON_MISSING_FIELDS = ALERT_SUPPRESSION_SUPPRESS_ON_MISSING_FIELDS;
const ALERT_SUPPRESSION_DO_NOT_SUPPRESS_ON_MISSING_FIELDS = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.ruleDescription.alertSuppressionDoNotSuppressOnMissingFieldsDescription', {
  defaultMessage: 'Do not suppress alerts for events with missing fields'
});
exports.ALERT_SUPPRESSION_DO_NOT_SUPPRESS_ON_MISSING_FIELDS = ALERT_SUPPRESSION_DO_NOT_SUPPRESS_ON_MISSING_FIELDS;
const BUILDING_BLOCK_LABEL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.ruleDescription.buildingBlockLabel', {
  defaultMessage: 'Building block'
});
exports.BUILDING_BLOCK_LABEL = BUILDING_BLOCK_LABEL;
const BUILDING_BLOCK_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.ruleDescription.buildingBlockDescription', {
  defaultMessage: 'All generated alerts will be marked as "building block" alerts'
});
exports.BUILDING_BLOCK_DESCRIPTION = BUILDING_BLOCK_DESCRIPTION;