"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.URL_FORMAT_INVALID = exports.MEDIUM = exports.LOW = exports.HIGH = exports.GLOBAL_ENDPOINT_EXCEPTION_LIST = exports.CRITICAL = exports.BUILDING_BLOCK = exports.ADVANCED_SETTINGS = exports.ADD_RULE_NOTE_HELP_TEXT = exports.ADD_REFERENCE = exports.ADD_FALSE_POSITIVE = exports.ADD_CUSTOM_HIGHLIGHTED_FIELD = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ADVANCED_SETTINGS = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepAboutRuleForm.advancedSettingsButton', {
  defaultMessage: 'Advanced settings'
});
exports.ADVANCED_SETTINGS = ADVANCED_SETTINGS;
const ADD_REFERENCE = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepAboutRuleForm.addReferenceDescription', {
  defaultMessage: 'Add reference URL'
});
exports.ADD_REFERENCE = ADD_REFERENCE;
const ADD_FALSE_POSITIVE = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepAboutRuleForm.addFalsePositiveDescription', {
  defaultMessage: 'Add false positive example'
});
exports.ADD_FALSE_POSITIVE = ADD_FALSE_POSITIVE;
const ADD_CUSTOM_HIGHLIGHTED_FIELD = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepAboutRuleForm.addCustomHighlightedFieldDescription', {
  defaultMessage: 'Add a custom highlighted field'
});
exports.ADD_CUSTOM_HIGHLIGHTED_FIELD = ADD_CUSTOM_HIGHLIGHTED_FIELD;
const GLOBAL_ENDPOINT_EXCEPTION_LIST = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepAboutRuleForm.endpointExceptionListLabel', {
  defaultMessage: 'Elastic Endpoint exceptions'
});
exports.GLOBAL_ENDPOINT_EXCEPTION_LIST = GLOBAL_ENDPOINT_EXCEPTION_LIST;
const BUILDING_BLOCK = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepAboutRuleForm.buildingBlockLabel', {
  defaultMessage: 'Building block'
});
exports.BUILDING_BLOCK = BUILDING_BLOCK;
const LOW = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepAboutRuleForm.severityOptionLowDescription', {
  defaultMessage: 'Low'
});
exports.LOW = LOW;
const MEDIUM = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepAboutRuleForm.severityOptionMediumDescription', {
  defaultMessage: 'Medium'
});
exports.MEDIUM = MEDIUM;
const HIGH = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepAboutRuleForm.severityOptionHighDescription', {
  defaultMessage: 'High'
});
exports.HIGH = HIGH;
const CRITICAL = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepAboutRuleForm.severityOptionCriticalDescription', {
  defaultMessage: 'Critical'
});
exports.CRITICAL = CRITICAL;
const URL_FORMAT_INVALID = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepDefineRule.referencesUrlInvalidError', {
  defaultMessage: 'URL is invalid format'
});
exports.URL_FORMAT_INVALID = URL_FORMAT_INVALID;
const ADD_RULE_NOTE_HELP_TEXT = _i18n.i18n.translate('xpack.securitySolution.detectionEngine.createRule.stepAboutrule.noteHelpText', {
  defaultMessage: 'Add rule investigation guide...'
});
exports.ADD_RULE_NOTE_HELP_TEXT = ADD_RULE_NOTE_HELP_TEXT;