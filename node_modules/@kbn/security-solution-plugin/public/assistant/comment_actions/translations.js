"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VIEW_APM_TRACE = exports.ELASTIC_AI_ASSISTANT = exports.COPY_TO_CLIPBOARD = exports.ADD_TO_CASE_EXISTING_CASE = exports.ADD_NOTE_TO_TIMELINE = exports.ADD_MESSAGE_CONTENT_AS_TIMELINE_NOTE = exports.ADDED_NOTE_TO_TIMELINE = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ADDED_NOTE_TO_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.assistant.commentActions.addedNoteToTimelineToast', {
  defaultMessage: 'Added note to timeline'
});
exports.ADDED_NOTE_TO_TIMELINE = ADDED_NOTE_TO_TIMELINE;
const VIEW_APM_TRACE = _i18n.i18n.translate('xpack.securitySolution.assistant.commentActions.viewAPMTraceLabel', {
  defaultMessage: 'View APM Trace for this message'
});
exports.VIEW_APM_TRACE = VIEW_APM_TRACE;
const ADD_MESSAGE_CONTENT_AS_TIMELINE_NOTE = _i18n.i18n.translate('xpack.securitySolution.assistant.commentActions.addMessageContentAsTimelineNoteAriaLabel', {
  defaultMessage: 'Add message content as a timeline note'
});
exports.ADD_MESSAGE_CONTENT_AS_TIMELINE_NOTE = ADD_MESSAGE_CONTENT_AS_TIMELINE_NOTE;
const ADD_NOTE_TO_TIMELINE = _i18n.i18n.translate('xpack.securitySolution.assistant.commentActions.addNoteToTimelineTooltip', {
  defaultMessage: 'Add note to timeline'
});
exports.ADD_NOTE_TO_TIMELINE = ADD_NOTE_TO_TIMELINE;
const ADD_TO_CASE_EXISTING_CASE = _i18n.i18n.translate('xpack.securitySolution.assistant.commentActions.addToCaseExistingCase', {
  defaultMessage: 'Add to existing case'
});
exports.ADD_TO_CASE_EXISTING_CASE = ADD_TO_CASE_EXISTING_CASE;
const ELASTIC_AI_ASSISTANT = _i18n.i18n.translate('xpack.securitySolution.assistant.commentActions.elasticAiAssistantTitle', {
  defaultMessage: 'Elastic AI Assistant'
});
exports.ELASTIC_AI_ASSISTANT = ELASTIC_AI_ASSISTANT;
const COPY_TO_CLIPBOARD = _i18n.i18n.translate('xpack.securitySolution.assistant.commentActions.copyToClipboard', {
  defaultMessage: 'Copy to clipboard'
});
exports.COPY_TO_CLIPBOARD = COPY_TO_CLIPBOARD;