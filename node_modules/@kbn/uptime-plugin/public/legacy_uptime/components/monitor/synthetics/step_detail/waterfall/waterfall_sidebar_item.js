"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WaterfallSidebarItem = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _waterfall = require("../../waterfall");
var _styles = require("../../waterfall/components/styles");
var _translations = require("../../waterfall/components/translations");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const WaterfallSidebarItem = ({
  item,
  highestIndex,
  renderFilterScreenReaderText,
  onClick
}) => {
  const [buttonRef, setButtonRef] = (0, _react.useState)();
  const {
    status,
    offsetIndex,
    index,
    isHighlighted,
    url
  } = item;
  const handleSidebarClick = (0, _react.useMemo)(() => {
    if (onClick) {
      return () => onClick({
        buttonRef,
        networkItemIndex: index
      });
    }
  }, [buttonRef, index, onClick]);
  const setRef = (0, _react.useCallback)(ref => setButtonRef(ref), [setButtonRef]);
  const isErrorStatusCode = statusCode => {
    const is400 = statusCode >= 400 && statusCode <= 499;
    const is500 = statusCode >= 500 && statusCode <= 599;
    const isSpecific300 = statusCode === 301 || statusCode === 307 || statusCode === 308;
    return is400 || is500 || isSpecific300;
  };
  const text = item.url;
  const ariaLabel = `${isHighlighted && renderFilterScreenReaderText ? `${_translations.SIDEBAR_FILTER_MATCHES_SCREENREADER_LABEL} ` : ''}${text}`;
  return /*#__PURE__*/_react.default.createElement(_styles.SideBarItemHighlighter, {
    isHighlighted: isHighlighted,
    "data-test-subj": isHighlighted ? 'sideBarHighlightedItem' : 'sideBarDimmedItem'
  }, !status || !isErrorStatusCode(status) ? /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false,
    style: {
      minWidth: 0
    }
  }, /*#__PURE__*/_react.default.createElement(_waterfall.MiddleTruncatedText, {
    index: offsetIndex,
    text: text,
    url: url,
    ariaLabel: ariaLabel,
    onClick: handleSidebarClick,
    setButtonRef: setRef,
    highestIndex: highestIndex
  }))) : /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    justifyContent: "spaceBetween",
    alignItems: "center"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false,
    style: {
      minWidth: 0
    }
  }, /*#__PURE__*/_react.default.createElement(_waterfall.MiddleTruncatedText, {
    index: offsetIndex,
    text: text,
    url: url,
    ariaLabel: ariaLabel,
    onClick: handleSidebarClick,
    setButtonRef: setRef,
    highestIndex: highestIndex
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    component: "span",
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiBadge, {
    color: "danger"
  }, status))));
};
exports.WaterfallSidebarItem = WaterfallSidebarItem;