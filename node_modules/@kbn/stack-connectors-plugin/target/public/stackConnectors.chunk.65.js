/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.stackConnectors_bundle_jsonpfunction=window.stackConnectors_bundle_jsonpfunction||[]).push([[65],{111:function(e,n,a){"use strict";a.r(n),a.d(n,"default",(function(){return d}));var t=a(1),l=a.n(t),s=a(0),c=a(2),o=a(29),i=a(3);const d=({actionConnector:e,actionParams:n,editAction:a,index:d,errors:u,messageVariables:r,defaultMessage:h,useDefaultMessage:b})=>{var g,m,v,j;const[x,f]=Object(t.useState)(),{subAction:C,subActionParams:p}=n,{channels:O=[],text:A,channelIds:k=[]}=null!=p?p:{},[I,P]=Object(t.useState)(O.length>0?O[0]:k.length>0&&k[0].length>0?k[0]:""),[M,S]=Object(t.useState)(""),{toasts:w}=Object(c.useKibana)().notifications,E=null!==(g=null==e||null===(m=e.config)||void 0===m?void 0:m.allowedChannels)&&void 0!==g?g:[],[$,B]=Object(t.useState)((null!=k?k:[]).map((e=>{const n=null==E?void 0:E.find((n=>n.id===e));return{value:e,label:n?`${n.id} - ${n.name}`:e}}))),[F,L]=Object(t.useState)([]),{response:{channel:T}={},isLoading:V,error:W}=Object(c.useSubAction)({connectorId:null==e?void 0:e.id,subAction:"validChannelId",subActionParams:{channelId:M},disabled:0===M.length&&0===E.length});Object(t.useEffect)((()=>{!b&&A||a("subActionParams",{channels:O,channelIds:k,text:h},d)}),[h,b]),Object(t.useEffect)((()=>{V||W||!T||M!==T.id||(a("subActionParams",{channels:void 0,channelIds:[T.id],text:A},d),S(""),L([]))}),[T,M,W,V,a,A,d]),Object(t.useEffect)((()=>{if(W&&M.length>0){a("subActionParams",{channels:void 0,channelIds:[],text:A},d);const e=s.i18n.translate("xpack.stackConnectors.slack.params.componentError.validChannelsRequestFailed",{defaultMessage:"{validChannelId} is not a valid Slack channel",values:{validChannelId:M}});L([e]),S(""),w.danger({title:e,body:W.message})}}),[w,W,M,a,A,d]),Object(t.useEffect)((()=>{var n;x&&x!==(null==e?void 0:e.id)&&(a("subActionParams",{channels:void 0,channelIds:[],text:A},d),P(""),S(""),L([]),B([])),f(null!==(n=null==e?void 0:e.id)&&void 0!==n?n:"")}),[null==e?void 0:e.id]),C||a("subAction","postMessage",d),p||a("subActionParams",{channels:O,channelIds:k,text:A},d);const _=Object(t.useMemo)((()=>{var n,a;return O.length>0&&0===k.length?"channel-name":(null!==(n=null==e||null===(a=e.config)||void 0===a?void 0:a.allowedChannels)&&void 0!==n?n:[]).length>0?"channel-allowed-ids":"channel-id"}),[e,k.length,O.length]),y=Object(t.useMemo)((()=>{var n,a;return(null!==(n=null==e||null===(a=e.config)||void 0===a?void 0:a.allowedChannels)&&void 0!==n?n:[]).map((e=>({label:`${e.id} - ${e.name}`,value:e.id,"data-test-subj":e.id})))}),[e]),D=Object(t.useCallback)((e=>{const n=e.map((e=>e.value.toString()));B(e),a("subActionParams",{channels:void 0,channelIds:n,text:A},d)}),[a,d,A]),R=Object(t.useCallback)((()=>{""===I&&a("subActionParams",{channels:void 0,channelIds:[],text:A},d),S(I.trim())}),[a,d,I,A]),q=Object(t.useCallback)((e=>{a("subActionParams",{channels:void 0,channelIds:[],text:A},d),P(e.target.value)}),[a,d,A]),z=Object(t.useMemo)((()=>"channel-name"===_||"channel-id"===_?Object(i.jsx)(o.EuiFieldText,{"data-test-subj":"slackApiChannelId",name:"slackApiChannelId",value:I,isLoading:V,onChange:q,onBlur:R,isInvalid:F.length>0,fullWidth:!0}):Object(i.jsx)(o.EuiComboBox,{noSuggestions:!1,"data-test-subj":"slackChannelsComboBox",options:y,selectedOptions:$,onChange:D,singleSelection:!0,fullWidth:!0})),[F.length,V,R,D,q,$,y,I,_]);return Object(i.jsx)(l.a.Fragment,null,Object(i.jsx)(o.EuiFormRow,{label:"channel-name"===_?s.i18n.translate("xpack.stackConnectors.slack.params.channelsComboBoxLabel",{defaultMessage:"Channel"}):s.i18n.translate("xpack.stackConnectors.slack.params.channelIdComboBoxLabel",{defaultMessage:"Channel ID"}),fullWidth:!0,error:F.length>0?F:u.channels,isInvalid:(null===(v=u.channels)||void 0===v?void 0:v.length)>0||F.length>0,helpText:k.length>0&&T?`${T.id} - ${T.name}`:""},z),Object(i.jsx)(o.EuiSpacer,{size:"m"}),Object(i.jsx)(c.TextAreaWithMessageVariables,{index:d,editAction:(e,n)=>a("subActionParams",{channels:O,channelIds:k,text:n},d),messageVariables:r,paramsProperty:"webApi",inputTargetValue:A,label:s.i18n.translate("xpack.stackConnectors.components.slack.messageTextAreaFieldLabel",{defaultMessage:"Message"}),errors:null!==(j=u.text)&&void 0!==j?j:[]}))}}}]);