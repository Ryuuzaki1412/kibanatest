/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.logExplorer_bundle_jsonpfunction=window.logExplorer_bundle_jsonpfunction||[]).push([[5],{259:function(t,e,a){"use strict";t.exports=function t(e,a){if(e===a)return!0;if(e&&a&&"object"==typeof e&&"object"==typeof a){if(e.constructor!==a.constructor)return!1;var n,i,o;if(Array.isArray(e)){if((n=e.length)!=a.length)return!1;for(i=n;0!=i--;)if(!t(e[i],a[i]))return!1;return!0}if(e.constructor===RegExp)return e.source===a.source&&e.flags===a.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===a.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===a.toString();if((n=(o=Object.keys(e)).length)!==Object.keys(a).length)return!1;for(i=n;0!=i--;)if(!Object.prototype.hasOwnProperty.call(a,o[i]))return!1;for(i=n;0!=i--;){var r=o[i];if(!t(e[r],a[r]))return!1}return!0}return e!=e&&a!=a}},266:function(t,e,a){"use strict";a.r(e),a.d(e,"createPureLogExplorerProfileStateMachine",(function(){return F})),a.d(e,"createLogExplorerProfileStateMachine",(function(){return R})),a.d(e,"initializeLogExplorerProfileStateService",(function(){return j})),a.d(e,"ControlPanelRT",(function(){return f})),a.d(e,"waitForState",(function(){return z}));var n=a(45),i=a(12);const o=({stateContainer:t})=>async e=>{const a=await t.actions.createAndAppendAdHocDataView(e.datasetSelection.toDataviewSpec());t.actions.setDataView(a)};var r=a(6);const s=({datasetsClient:t})=>e=>async a=>{var n;const o=null===(n=e.datasetSelection.selection.dataset.parentIntegration)||void 0===n?void 0:n.name,s=e.datasetSelection.selection.dataset.name;if("unresolved"!==e.datasetSelection.selectionType||!o)return a("LISTEN_TO_CHANGES");try{const{items:e}=await t.findIntegrations({nameQuery:o}),n=e[0];if(!n)return a("LISTEN_TO_CHANGES");const l=n.datasets.find((t=>t.name===s));if(!l)return a("LISTEN_TO_CHANGES");const c=r.a.create(l,n);a({type:"UPDATE_DATASET_SELECTION",data:i.b.create(c)})}catch(t){return a("DATASET_SELECTION_RESTORE_FAILURE")}},l={datasetSelection:i.a.create()},c="controlPanels",u={NAMESPACE:"data_stream.namespace"},d={[u.NAMESPACE]:{order:0,width:"medium",grow:!1,type:"optionsListControl",explicitInput:{id:u.NAMESPACE,fieldName:u.NAMESPACE,title:"Namespace"}}},p=Object.values(u);var g=a(22);const S=t=>()=>t.addWarning({title:g.i18n.translate("xpack.logExplorer.datasetSelection.restoreDatasetSelectionFailedToastTitle",{defaultMessage:"We couldn't restore your datasets selection."}),text:g.i18n.translate("xpack.logExplorer.datasetSelection.restoreDatasetSelectionFailedToastMessage",{defaultMessage:'We switched to "All log datasets" as the default selection.'})}),E=t=>()=>t.addWarning({title:g.i18n.translate("xpack.logExplorer.datasetSelection.createDataViewFailedToastTitle",{defaultMessage:"We couldn't create a data view for your selection."}),text:g.i18n.translate("xpack.logExplorer.datasetSelection.createDataViewFailedToastMessage",{defaultMessage:'We switched to "All log datasets" as the default selection.'})});var C=a(0);const A=C.type({order:C.number,width:C.union([C.literal("medium"),C.literal("small"),C.literal("large")]),grow:C.boolean,type:C.string,explicitInput:C.intersection([C.type({id:C.string}),C.partial({dataViewId:C.string,fieldName:C.string,title:C.union([C.string,C[void 0]]),selectedOptions:C.array(C.string)})])}),f=C.record(C.string,A);var P=a(4),D=a(259),T=a.n(D);var b=a(21);const I=({stateContainer:t})=>e=>a=>{const n=t.appState.subscribe((n=>{const{index:o}=n;if(t.appState.getPrevious().index!==o)try{const t=y({index:o,context:e});Object(i.f)(t)&&a({type:"UPDATE_DATASET_SELECTION",data:t})}catch(t){a({type:"DATASET_SELECTION_RESTORE_FAILURE"})}}));return()=>n()},O=({stateContainer:t})=>async e=>{const{index:a}=t.appState.getState();return y({index:a,context:e})},w=({stateContainer:t})=>async e=>{const a=t.stateStorage.get(c);return m(t,a)},y=({index:t,context:e})=>{var a;if(!t)return null!==(a=e.datasetSelection)&&void 0!==a?a:i.a.create();const n=Object(i.d)(t);return Object(i.e)(n)},_=({stateContainer:t})=>e=>a=>{if(!("controlGroupAPI"in e))return;const n=e.controlGroupAPI.onFiltersPublished$.subscribe((e=>{t.internalState.transitions.setCustomFilters(e),t.actions.fetchData()})),i=t.stateStorage.change$(c).subscribe((t=>{T()(t,e.controlPanels)||a({type:"UPDATE_CONTROL_PANELS",controlPanels:t})})),o=e.controlGroupAPI.getInput$().subscribe((({panels:t})=>{T()(t,e.controlPanels)||a({type:"UPDATE_CONTROL_PANELS",controlPanels:t})}));return()=>{n.unsubscribe(),i.unsubscribe(),o.unsubscribe()}},v=({stateContainer:t})=>async(e,a)=>{if(!("controlGroupAPI"in e))return;const n="controlPanels"in a&&a.controlPanels||e.controlPanels,i=m(t,n);return e.controlGroupAPI.updateInput({panels:i}),i},x=({stateContainer:t})=>async()=>{var e;const{breakdownField:a,columns:n,grid:i,rowHeight:o}=t.appState.getState(),r={};(t.appState.isEmptyURL()||!n||0===n.length)&&(r.columns=b.j);const s=null!==(e=null==i?void 0:i.columns)&&void 0!==e?e:{};r.grid={columns:{...b.i,...s}},r.rowHeight=null!=o?o:0,r.breakdownField=null!=a?a:b.m,t.appState.update(r,!0)},m=(t,e)=>{const a=t.internalState.getState().dataView,n=N(e)?e:L(a),i=h(a,n);return T()(i,t.stateStorage.get(c))||t.stateStorage.set(c,V(i),{replace:!0}),i},N=t=>Object.keys(null!=t?t:{}).length>0&&f.is(t),L=t=>(t=>p.filter((e=>void 0!==(null==t?void 0:t.fields.getByName(e)))))(t).reduce(((t,e)=>({...t,[e]:d[e]})),{}),V=t=>Object(P.mapValues)(t,(t=>{const{explicitInput:e}=t,{dataViewId:a,...n}=e;return{...t,explicitInput:n}})),h=(t,e)=>{const a=L(t),n=Object.keys(a),i=Object(P.pick)(e,n);return((t,e="")=>Object(P.mapValues)(t,(t=>({...t,explicitInput:{...t.explicitInput,dataViewId:e}}))))({...a,...i},t.id)},F=t=>Object(n.createMachine)({context:t,predictableActionArguments:!0,id:"LogExplorerProfile",initial:"uninitialized",states:{uninitialized:{always:"initializingFromUrl"},initializingFromUrl:{invoke:{src:"initializeFromUrl",onDone:{target:"initializingDataView",actions:["storeDatasetSelection"]},onError:{target:"initializingDataView",actions:["notifyDatasetSelectionRestoreFailed"]}}},initializingDataView:{invoke:{src:"createDataView",onDone:{target:"initializingControlPanels"},onError:{target:"initialized",actions:["notifyCreateDataViewFailed"]}}},initializingControlPanels:{invoke:{src:"initializeControlPanels",onDone:{target:"initializingStateContainer",actions:["storeControlPanels"]},onError:{target:"initializingStateContainer"}}},initializingStateContainer:{invoke:{src:"updateStateContainer",onDone:{target:"initialized"},onError:{target:"initialized"}}},initialized:{type:"parallel",states:{datasetSelection:{initial:"validatingSelection",states:{validatingSelection:{invoke:{src:"validateSelection"},on:{LISTEN_TO_CHANGES:{target:"idle"},UPDATE_DATASET_SELECTION:{target:"updatingDataView",actions:["storeDatasetSelection"]},DATASET_SELECTION_RESTORE_FAILURE:{target:"updatingDataView",actions:["notifyDatasetSelectionRestoreFailed"]}}},idle:{invoke:{src:"listenUrlChange"},on:{UPDATE_DATASET_SELECTION:{target:"updatingDataView",actions:["storeDatasetSelection"]},DATASET_SELECTION_RESTORE_FAILURE:{target:"updatingDataView",actions:["notifyDatasetSelectionRestoreFailed"]}}},updatingDataView:{invoke:{src:"createDataView",onDone:{target:"updatingStateContainer"},onError:{target:"updatingStateContainer",actions:["notifyCreateDataViewFailed"]}}},updatingStateContainer:{invoke:{src:"updateStateContainer",onDone:{target:"idle",actions:["notifyDataViewUpdate"]},onError:{target:"idle",actions:["notifyCreateDataViewFailed"]}}}}},controlGroups:{initial:"uninitialized",states:{uninitialized:{on:{INITIALIZE_CONTROL_GROUP_API:{target:"idle",cond:"controlGroupAPIExists",actions:["storeControlGroupAPI"]}}},idle:{invoke:{src:"subscribeControlGroup"},on:{DATA_VIEW_UPDATED:{target:"updatingControlPanels"},UPDATE_CONTROL_PANELS:{target:"updatingControlPanels"}}},updatingControlPanels:{invoke:{src:"updateControlPanels",onDone:{target:"idle",actions:["storeControlPanels"]},onError:{target:"idle"}}}}}}}}},{actions:{storeDatasetSelection:n.actions.assign(((t,e)=>"data"in e&&Object(i.f)(e.data)?{datasetSelection:e.data}:{})),storeControlGroupAPI:n.actions.assign(((t,e)=>"controlGroupAPI"in e?{controlGroupAPI:e.controlGroupAPI}:{})),storeControlPanels:n.actions.assign(((t,e)=>"data"in e&&f.is(e.data)?{controlPanels:e.data}:{})),notifyDataViewUpdate:Object(n.raise)("DATA_VIEW_UPDATED")},guards:{controlGroupAPIExists:(t,e)=>"controlGroupAPI"in e&&null!=e.controlGroupAPI}}),R=({initialContext:t=l,datasetsClient:e,stateContainer:a,toasts:n})=>F(t).withConfig({actions:{notifyCreateDataViewFailed:E(n),notifyDatasetSelectionRestoreFailed:S(n)},services:{createDataView:o({stateContainer:a}),initializeFromUrl:O({stateContainer:a}),initializeControlPanels:w({stateContainer:a}),listenUrlChange:I({stateContainer:a}),subscribeControlGroup:_({stateContainer:a}),updateControlPanels:v({stateContainer:a}),updateStateContainer:x({stateContainer:a}),validateSelection:s({datasetsClient:e})}}),j=t=>{const e=R(t);return Object(n.interpret)(e).start()},z=(t,e)=>new Promise((a=>{const{unsubscribe:n}=t.subscribe((t=>{t.matches(e)&&(a(t),n())}))}))}}]);