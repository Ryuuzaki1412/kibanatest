"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.uncategorizedLabel = exports.tryEsql = exports.technicalPreview = exports.sortOrdersLabel = exports.sortOptions = exports.showAllLogsLabel = exports.openDiscoverLabel = exports.noIntegrationsLabel = exports.noIntegrationsDescriptionLabel = exports.noDatasetsLabel = exports.noDatasetsDescriptionLabel = exports.noDataViewsLabel = exports.noDataViewsDescriptionLabel = exports.noDataRetryLabel = exports.integrationsLabel = exports.errorLabel = exports.dataViewsLabel = exports.UNCATEGORIZED_TAB_ID = exports.UNCATEGORIZED_PANEL_ID = exports.POPOVER_ID = exports.INTEGRATIONS_TAB_ID = exports.INTEGRATIONS_PANEL_ID = exports.DATA_VIEW_POPOVER_CONTENT_WIDTH = exports.DATA_VIEWS_TAB_ID = exports.DATA_VIEWS_PANEL_ID = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const POPOVER_ID = 'dataset-selector-popover';
exports.POPOVER_ID = POPOVER_ID;
const INTEGRATIONS_PANEL_ID = 'dataset-selector-integrations-panel';
exports.INTEGRATIONS_PANEL_ID = INTEGRATIONS_PANEL_ID;
const INTEGRATIONS_TAB_ID = 'dataset-selector-integrations-tab';
exports.INTEGRATIONS_TAB_ID = INTEGRATIONS_TAB_ID;
const UNCATEGORIZED_PANEL_ID = 'dataset-selector-uncategorized-panel';
exports.UNCATEGORIZED_PANEL_ID = UNCATEGORIZED_PANEL_ID;
const UNCATEGORIZED_TAB_ID = 'dataset-selector-uncategorized-tab';
exports.UNCATEGORIZED_TAB_ID = UNCATEGORIZED_TAB_ID;
const DATA_VIEWS_PANEL_ID = 'dataset-selector-data-views-panel';
exports.DATA_VIEWS_PANEL_ID = DATA_VIEWS_PANEL_ID;
const DATA_VIEWS_TAB_ID = 'dataset-selector-data-views-tab';
exports.DATA_VIEWS_TAB_ID = DATA_VIEWS_TAB_ID;
const DATA_VIEW_POPOVER_CONTENT_WIDTH = 400;
exports.DATA_VIEW_POPOVER_CONTENT_WIDTH = DATA_VIEW_POPOVER_CONTENT_WIDTH;
const showAllLogsLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.showAllLogs', {
  defaultMessage: 'Show all logs'
});
exports.showAllLogsLabel = showAllLogsLabel;
const integrationsLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.integrations', {
  defaultMessage: 'Integrations'
});
exports.integrationsLabel = integrationsLabel;
const uncategorizedLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.uncategorized', {
  defaultMessage: 'Uncategorized'
});
exports.uncategorizedLabel = uncategorizedLabel;
const dataViewsLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.dataViews', {
  defaultMessage: 'Data Views'
});
exports.dataViewsLabel = dataViewsLabel;
const openDiscoverLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.openDiscover', {
  defaultMessage: 'Opens in Discover'
});
exports.openDiscoverLabel = openDiscoverLabel;
const sortOrdersLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.sortOrders', {
  defaultMessage: 'Sort directions'
});
exports.sortOrdersLabel = sortOrdersLabel;
const noDatasetsLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.noDatasets', {
  defaultMessage: 'No data streams found'
});
exports.noDatasetsLabel = noDatasetsLabel;
const noDatasetsDescriptionLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.noDatasetsDescription', {
  defaultMessage: 'No datasets or search results found.'
});
exports.noDatasetsDescriptionLabel = noDatasetsDescriptionLabel;
const noDataViewsLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.noDataViews', {
  defaultMessage: 'No data views found'
});
exports.noDataViewsLabel = noDataViewsLabel;
const noDataViewsDescriptionLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.noDataViewsDescription', {
  defaultMessage: 'No data views or search results found.'
});
exports.noDataViewsDescriptionLabel = noDataViewsDescriptionLabel;
const noIntegrationsLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.noIntegrations', {
  defaultMessage: 'No integrations found'
});
exports.noIntegrationsLabel = noIntegrationsLabel;
const noIntegrationsDescriptionLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.noIntegrationsDescription', {
  defaultMessage: 'No integrations or search results found.'
});
exports.noIntegrationsDescriptionLabel = noIntegrationsDescriptionLabel;
const errorLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.error', {
  defaultMessage: 'error'
});
exports.errorLabel = errorLabel;
const noDataRetryLabel = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.noDataRetry', {
  defaultMessage: 'Retry'
});
exports.noDataRetryLabel = noDataRetryLabel;
const tryEsql = _i18n.i18n.translate('xpack.logExplorer.datasetSelector.TryEsql', {
  defaultMessage: 'Try ES|QL'
});
exports.tryEsql = tryEsql;
const technicalPreview = _i18n.i18n.translate('xpack.logExplorer.TechPreview', {
  defaultMessage: 'Technical preview'
});
exports.technicalPreview = technicalPreview;
const sortOptions = [{
  id: 'asc',
  iconType: 'sortAscending',
  label: 'Ascending'
}, {
  id: 'desc',
  iconType: 'sortDescending',
  label: 'Descending'
}];
exports.sortOptions = sortOptions;