"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConnectorFieldsPreviewForm = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _ = require(".");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ConnectorFieldsFormPreviewComponent = ({
  connector,
  fields
}) => {
  const {
    caseConnectorsRegistry
  } = (0, _.getCaseConnectors)();
  if (connector == null || connector.actionTypeId == null || connector.actionTypeId === '.none') {
    return null;
  }
  const {
    previewComponent: PreviewComponent
  } = caseConnectorsRegistry.get(connector.actionTypeId);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, PreviewComponent != null ? /*#__PURE__*/_react.default.createElement(_react.Suspense, {
    fallback: /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
      justifyContent: "center"
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
      grow: false
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiLoadingSpinner, {
      size: "m"
    })))
  }, /*#__PURE__*/_react.default.createElement("div", {
    "data-test-subj": 'connector-fields-preview'
  }, /*#__PURE__*/_react.default.createElement(PreviewComponent, {
    connector: connector,
    fields: fields,
    key: connector.id
  }))) : null);
};
ConnectorFieldsFormPreviewComponent.displayName = 'ConnectorFieldsFormPreview';
const ConnectorFieldsPreviewForm = /*#__PURE__*/(0, _react.memo)(ConnectorFieldsFormPreviewComponent);
exports.ConnectorFieldsPreviewForm = ConnectorFieldsPreviewForm;