"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useGetCurrentUserProfile = void 0;
var _reactQuery = require("@tanstack/react-query");
var i18n = _interopRequireWildcard(require("../translations"));
var _kibana = require("../../common/lib/kibana");
var _constants = require("../constants");
var _api = require("./api");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const useGetCurrentUserProfile = () => {
  const {
    security
  } = (0, _kibana.useKibana)().services;
  const toasts = (0, _kibana.useToasts)();
  return (0, _reactQuery.useQuery)(_constants.casesQueriesKeys.currentUser(), () => {
    return (0, _api.getCurrentUserProfile)({
      security
    });
  }, {
    retry: false,
    onError: error => {
      var _error$body;
      // Anonymous users (users authenticated via a proxy or configured in the kibana config) will result in a 404
      // from the security plugin. If this happens we'll silence the error and operate without the current user profile
      if (error.name !== 'AbortError' && ((_error$body = error.body) === null || _error$body === void 0 ? void 0 : _error$body.statusCode) !== 404) {
        toasts.addError(error.body && error.body.message ? new Error(error.body.message) : error, {
          title: i18n.ERROR_TITLE
        });
      }
    }
  });
};
exports.useGetCurrentUserProfile = useGetCurrentUserProfile;