"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRouterDom = require("react-router-dom");
var _queryString = require("query-string");
var _i18n = require("@kbn/i18n");
var _sharedUxLinkRedirectApp = require("@kbn/shared-ux-link-redirect-app");
var _object_view = require("./object_view");
require("./saved_objects_edition_page.scss");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const SavedObjectsEditionPage = ({
  coreStart,
  setBreadcrumbs,
  history
}) => {
  const {
    type,
    id
  } = (0, _reactRouterDom.useParams)();
  const capabilities = coreStart.application.capabilities;
  const docLinks = coreStart.docLinks.links;
  const {
    search
  } = (0, _reactRouterDom.useLocation)();
  const query = (0, _queryString.parse)(search);
  (0, _react.useEffect)(() => {
    setBreadcrumbs([{
      text: _i18n.i18n.translate('savedObjectsManagement.breadcrumb.index', {
        defaultMessage: 'Saved objects'
      }),
      href: '/'
    }, {
      text: _i18n.i18n.translate('savedObjectsManagement.breadcrumb.inspect', {
        defaultMessage: 'Inspect {savedObjectType}',
        values: {
          savedObjectType: type
        }
      })
    }]);
  }, [setBreadcrumbs, type]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "savedObjectsManagementEditionPage"
  }, /*#__PURE__*/_react.default.createElement(_sharedUxLinkRedirectApp.RedirectAppLinks, {
    coreStart: {
      application: coreStart.application
    }
  }, /*#__PURE__*/_react.default.createElement(_object_view.SavedObjectEdition, {
    id: id,
    savedObjectType: type,
    http: coreStart.http,
    overlays: coreStart.overlays,
    notifications: coreStart.notifications,
    capabilities: capabilities,
    notFoundType: query.notFound,
    uiSettings: coreStart.uiSettings,
    history: history,
    docLinks: docLinks,
    settings: coreStart.settings,
    theme: coreStart.theme
  })));
};

// eslint-disable-next-line import/no-default-export
exports.default = SavedObjectsEditionPage;
module.exports = exports.default;