/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */!function(t){var e={};function s(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)s.d(n,i,function(e){return t[e]}.bind(null,i));return n},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=1)}([function(t,e,s){t.exports=s(3)(2)},function(t,e,s){s(2),__kbnBundles__.define("plugin/assetManager/public",s,4)},function(t,e,s){s.p=window.__kbnPublicPath__.assetManager},function(t,e){t.exports=__kbnSharedDeps_npm__},function(t,e,s){"use strict";s.r(e),s.d(e,"plugin",(function(){return f}));var n=s(0),i=s.n(n);const r="/api/asset-manager";function u(t){return`${r}${t}`}const o=u("/assets"),l=(u("/assets/related"),u("/assets/diff"),u("/assets/hosts")),a=u("/assets/services"),c=u("/assets/containers"),g=u("/assets/pods");class public_assets_client_PublicAssetsClient{constructor(t){this.http=t}async getHosts(t){const{filters:e,...s}=t;return await this.http.get(l,{query:{stringFilters:JSON.stringify(e),...s}})}async getContainers(t){const{filters:e,...s}=t;return await this.http.get(c,{query:{stringFilters:JSON.stringify(e),...s}})}async getServices(t){const{filters:e,...s}=t;return await this.http.get(a,{query:{stringFilters:JSON.stringify(e),...s}})}async getPods(t){const{filters:e,...s}=t;return await this.http.get(g,{query:{stringFilters:JSON.stringify(e),...s}})}async getAssets(t){const{filters:e,...s}=t;return await this.http.get(o,{query:{stringFilters:JSON.stringify(e),...s}})}}class plugin_Plugin{constructor(t){i()(this,"config",void 0),i()(this,"logger",void 0),this.config=t.config.get(),this.logger=t.logger.get()}setup(t){if(this.config.alphaEnabled)return this.logger.debug("Public is enabled"),{publicAssetsClient:new public_assets_client_PublicAssetsClient(t.http)};this.logger.debug("Public is NOT enabled")}start(t){if(this.config.alphaEnabled)return{publicAssetsClient:new public_assets_client_PublicAssetsClient(t.http)}}stop(){}}const f=t=>new plugin_Plugin(t)}]);