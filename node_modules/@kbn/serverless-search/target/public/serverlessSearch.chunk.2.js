/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.serverlessSearch_bundle_jsonpfunction=window.serverlessSearch_bundle_jsonpfunction||[]).push([[2],{100:function(e,t,s){(t=s(46)(!1)).push([e.i,".apiKeySuccessPanel{background-color:#00bfb31a}",""]),e.exports=t},116:function(e,t,s){"use strict";s.r(t),s.d(t,"ElasticsearchOverview",(function(){return je}));var n,a=s(3),i=s(2),r=s(11),l=s(1),o=s.n(l),c=s(0),u=s(62);!function(e){e.ElasticsearchEndpoint="es_url",e.CloudId="cloud_id"}(n||(n={}));var d={name:"26bywx",styles:"overflow-wrap:anywhere"};const p=({cloudId:e,elasticsearchUrl:t=u.a,isPanelLeft:s=!0,overviewPanelProps:o})=>{const[p,j]=Object(l.useState)(n.ElasticsearchEndpoint),x=Object(c.jsx)(a.EuiThemeProvider,{colorMode:"dark"},Object(c.jsx)(a.EuiPanel,{paddingSize:"xs"},Object(c.jsx)(a.EuiCodeBlock,{css:d,isCopyable:!0,fontSize:"m",className:"serverlessSearchCloudDetailsCopyPanel",whiteSpace:"pre-wrap"},p===n.CloudId&&e,p===n.ElasticsearchEndpoint&&t)));return Object(c.jsx)(f,{description:i.i18n.translate("searchApiPanels.cloudIdDetails.description",{defaultMessage:"Get ready to ingest and query your data by choosing a connection option:"}),leftPanelContent:s?x:void 0,rightPanelContent:s?void 0:x,links:[],title:i.i18n.translate("searchApiPanels.cloudIdDetails.title",{defaultMessage:"Copy your connection details"}),overviewPanelProps:o},Object(c.jsx)(a.EuiSpacer,{size:"l"}),Object(c.jsx)(a.EuiCheckableCard,{id:n.ElasticsearchEndpoint,name:n.ElasticsearchEndpoint,label:Object(c.jsx)(a.EuiFlexGroup,{alignItems:"center"},Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiTitle,{size:"xxs"},Object(c.jsx)("h5",null,Object(c.jsx)(r.FormattedMessage,{id:"searchApiPanels.cloudIdDetails.elasticsearchEndpoint.title",defaultMessage:"Elasticsearch endpoint"})))),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)("span",null,Object(c.jsx)(a.EuiBadge,{color:"success"},Object(c.jsx)(r.FormattedMessage,{id:"searchApiPanels.cloudIdDetails.elasticsearchEndpoint.recommendedBadge",defaultMessage:"Recommended"}))))),checked:p===n.ElasticsearchEndpoint,onChange:()=>j(n.ElasticsearchEndpoint)},Object(c.jsx)(a.EuiText,{size:"s"},Object(c.jsx)("p",null,Object(c.jsx)(r.FormattedMessage,{id:"searchApiPanels.cloudIdDetails.elasticsearchEndpoint.description",defaultMessage:"The most common method for establishing an Elasticsearch connection."})))),Object(c.jsx)(a.EuiSpacer,null),Boolean(e)&&Object(c.jsx)(a.EuiCheckableCard,{id:n.CloudId,name:n.CloudId,label:Object(c.jsx)(a.EuiTitle,{size:"xxs"},Object(c.jsx)("h5",null,Object(c.jsx)(r.FormattedMessage,{id:"searchApiPanels.cloudIdDetails.cloudId.title",defaultMessage:"Cloud ID"}))),checked:p===n.CloudId,onChange:()=>j(n.CloudId)},Object(c.jsx)(a.EuiText,{size:"s"},Object(c.jsx)("p",null,Object(c.jsx)(r.FormattedMessage,{id:"searchApiPanels.cloudIdDetails.cloudId.description",defaultMessage:"Specific client libraries and connectors can use this unique identifier specific to Elastic Cloud."})))))};var j=s(81);const x=({request:e,application:t,sharePlugin:s})=>{var n,i,l;const{url:o}=s;if(null==t||null===(n=t.capabilities)||void 0===n||null===(i=n.dev_tools)||void 0===i||!i.show||!o)return null;const u=Object(j.compressToEncodedURIComponent)(e),d=null===(l=o.locators.get("CONSOLE_APP_LOCATOR"))||void 0===l?void 0:l.useUrl({loadFrom:`data:text/plain,${u}`},void 0,[e]);return d?Object(c.jsx)(a.EuiButtonEmpty,{href:d,iconType:"popout",target:"_blank",size:"s"},Object(c.jsx)(r.FormattedMessage,{id:"searchApiPanels.welcomeBanner.tryInConsoleButton",defaultMessage:"Try in Console"})):null};s(82);const g=({application:e,codeSnippet:t,languageType:s,languages:n,assetBasePath:r,selectedLanguage:o,setSelectedLanguage:u,sharePlugin:d,consoleRequest:p})=>{const[j,g]=Object(l.useState)(!1),b=n.map((e=>Object(c.jsx)(a.EuiContextMenuItem,{key:e.id,icon:`${r}/${e.iconType}`,onClick:()=>{u(e),g(!1)}},e.name))),h=Object(c.jsx)(a.EuiThemeProvider,{colorMode:"dark"},Object(c.jsx)(a.EuiButtonEmpty,{"aria-label":i.i18n.translate("searchApiPanels.welcomeBanner.codeBox.selectAriaLabel",{defaultMessage:"Select a programming language"}),color:"text",iconType:"arrowDown",iconSide:"left",onClick:()=>g(!j)},o.name));return Object(c.jsx)(a.EuiThemeProvider,{colorMode:"dark"},Object(c.jsx)(a.EuiPanel,{paddingSize:"xs",className:"codeBoxPanel","data-test-subj":"codeBlockControlsPanel"},Object(c.jsx)(a.EuiFlexGroup,{alignItems:"center",responsive:!1,gutterSize:"s"},Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiThemeProvider,{colorMode:"light"},Object(c.jsx)(a.EuiPopover,{button:h,isOpen:j,closePopover:()=>g(!1),panelPaddingSize:"none",anchorPosition:"downLeft"},Object(c.jsx)(a.EuiContextMenuPanel,{items:b,size:"s"})))),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiCopy,{textToCopy:t},(e=>Object(c.jsx)(a.EuiButtonEmpty,{color:"text",iconType:"copyClipboard",size:"s",onClick:e},i.i18n.translate("searchApiPanels.welcomeBanner.codeBox.copyButtonLabel",{defaultMessage:"Copy"}))))),void 0!==p&&Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(x,{request:p,application:e,sharePlugin:d}))),Object(c.jsx)(a.EuiHorizontalRule,{margin:"none"}),Object(c.jsx)(a.EuiCodeBlock,{transparentBackground:!0,fontSize:"m",language:s||o.languageStyling||o.id,overflowHeight:500,className:"codeBoxCodeBlock"},t)))},b=({assetBasePath:e,label:t,href:s})=>Object(c.jsx)(a.EuiFlexGroup,{alignItems:"center",gutterSize:"xs",justifyContent:"flexEnd"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiIcon,{size:"s",type:`${e}/github.svg`})),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiText,{size:"s"},Object(c.jsx)(a.EuiLink,{target:"_blank",href:s},t))));var h=s(9),m=s.n(h);const f=({children:e,description:t,leftPanelContent:s,links:n,rightPanelContent:i,title:r,overviewPanelProps:d})=>Object(c.jsx)(o.a.Fragment,null,Object(c.jsx)(a.EuiSpacer,{size:"xxl"}),Object(c.jsx)(a.EuiFlexGroup,{alignItems:"flexStart",gutterSize:"xl"},s&&Object(c.jsx)(a.EuiFlexItem,{grow:6},s),Object(c.jsx)(a.EuiFlexItem,{grow:4},Object(c.jsx)(a.EuiPanel,m()({paddingSize:"none",color:"subdued"},d),Object(c.jsx)(a.EuiTitle,{size:"s"},Object(c.jsx)("h2",null,r)),Object(c.jsx)(a.EuiSpacer,{size:"m"}),t&&Object(c.jsx)(a.EuiText,null,t),e,n&&n.length>0?Object(c.jsx)(o.a.Fragment,null,Object(c.jsx)(a.EuiSpacer,null),Object(c.jsx)(a.EuiTitle,{size:"xxs"},Object(c.jsx)("h3",null,u.b)),Object(c.jsx)(a.EuiSpacer,{size:"s"}),n.map((({label:e,href:t},s)=>Object(c.jsx)(l.Fragment,{key:`overviewPanel.link.${s}`},Object(c.jsx)(a.EuiText,{size:"s"},Object(c.jsx)(a.EuiLink,{key:s,href:t,target:"_blank"},e)),Object(c.jsx)(a.EuiSpacer,{size:"xs"}))))):null)),i&&Object(c.jsx)(a.EuiFlexItem,{grow:6}," ",i)),Object(c.jsx)(a.EuiSpacer,{size:"xxl"})),O=({additionalIngestionPanel:e,docLinks:t,assetBasePath:s})=>{const n=[{description:i.i18n.translate("searchApiPanels.welcomeBanner.ingestData.alternativeOptions.logstashDescription",{defaultMessage:"General-purpose data processing pipeline for Elasticsearch. Use Logstash to extract and transform data from a variety of inputs and outputs."}),title:i.i18n.translate("searchApiPanels.welcomeBanner.ingestData.alternativeOptions.logstashTitle",{defaultMessage:"Logstash"}),links:[{href:t.logstash,label:i.i18n.translate("searchApiPanels.welcomeBanner.ingestData.alternativeOptions.logstashDocumentationLabel",{defaultMessage:"Documentation"})},{href:"https://github.com/elastic/logstash",isGithubLink:!0,label:"logstash"}]},{description:i.i18n.translate("searchApiPanels.welcomeBanner.ingestData.alternativeOptions.beatsDescription",{defaultMessage:"Lightweight, single-purpose data shippers for Elasticsearch. Use Beats to send operational data from your servers."}),title:i.i18n.translate("searchApiPanels.welcomeBanner.ingestData.alternativeOptions.beatsTitle",{defaultMessage:"Beats"}),links:[{href:t.beats,label:i.i18n.translate("searchApiPanels.welcomeBanner.ingestData.alternativeOptions.beatsDocumentationLabel",{defaultMessage:"Documentation"})},{href:"https://github.com/elastic/beats",isGithubLink:!0,label:"beats"}]}];return Object(c.jsx)(o.a.Fragment,null,e,n.map((({title:e,description:t,links:n},i)=>Object(c.jsx)(a.EuiFlexGroup,{direction:"column",justifyContent:"spaceEvenly",gutterSize:"s",key:i},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiTitle,{size:"xxs"},Object(c.jsx)("h6",null,e)),Object(c.jsx)(a.EuiSpacer,{size:"xs"}),Object(c.jsx)(a.EuiText,null,Object(c.jsx)("p",null,t))),n&&n.length>0&&Object(c.jsx)(o.a.Fragment,null,Object(c.jsx)(a.EuiFlexGroup,{direction:"row",justifyContent:"flexStart",alignItems:"center"},n.map((({label:e,href:t,isGithubLink:n},i)=>Object(c.jsx)(a.EuiFlexItem,{grow:!1,key:i},n?Object(c.jsx)(b,{assetBasePath:s,label:e,href:t}):Object(c.jsx)(a.EuiLink,{href:t,target:"_blank"},e))))),Object(c.jsx)(a.EuiSpacer,{size:"m"}))))))},y=({codeSnippet:e,selectedLanguage:t,setSelectedLanguage:s,docLinks:n,assetBasePath:r,application:l,sharePlugin:o,languages:u,consoleRequest:d,additionalIngestionPanel:p})=>Object(c.jsx)(f,{description:i.i18n.translate("searchApiPanels.welcomeBanner.ingestData.description",{defaultMessage:"Add data to your data stream or index to make it searchable via API. "}),leftPanelContent:Object(c.jsx)(g,{consoleRequest:d,codeSnippet:e,languages:u,selectedLanguage:t,setSelectedLanguage:s,assetBasePath:r,application:l,sharePlugin:o}),links:[],title:i.i18n.translate("searchApiPanels.welcomeBanner.ingestData.title",{defaultMessage:"Ingest data"})},Object(c.jsx)(a.EuiSpacer,{size:"l"}),Object(c.jsx)(a.EuiTitle,{size:"xs"},Object(c.jsx)("h4",null,i.i18n.translate("searchApiPanels.welcomeBanner.ingestData.alternativeOptions",{defaultMessage:"Alternative ingestion options"}))),Object(c.jsx)(a.EuiSpacer,{size:"m"}),Object(c.jsx)(O,{assetBasePath:r,docLinks:n,additionalIngestionPanel:p}));s(71);const v=({clusterImage:e,cutImage:t,reporterImage:s})=>Object(c.jsx)(a.EuiThemeProvider,{colorMode:"dark"},Object(c.jsx)(a.EuiPanel,{paddingSize:"xl"},Object(c.jsx)(a.EuiFlexGroup,{direction:"column",gutterSize:"xl"},Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiFlexGroup,{alignItems:"flexStart",justifyContent:"flexStart"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiImage,{alt:"",src:e})),Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiTitle,{size:"s"},Object(c.jsx)("h3",null,i.i18n.translate("searchApiPanels.pipeline.overview.dataEnrichment.title",{defaultMessage:"Enrich Data"}))),Object(c.jsx)(a.EuiSpacer,{size:"s"}),Object(c.jsx)(a.EuiText,{size:"s"},Object(c.jsx)("p",null,i.i18n.translate("searchApiPanels.pipeline.overview.dataEnrichment.description",{defaultMessage:"Add information from external sources or apply transformations to your documents for more contextual, insightful search."})))))),Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiFlexGroup,{alignItems:"flexStart",justifyContent:"flexStart"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiImage,{alt:"",src:t})),Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiTitle,{size:"s"},Object(c.jsx)("h3",null,i.i18n.translate("searchApiPanels.pipeline.overview.extAndStandard.title",{defaultMessage:"Extract and standardize"}))),Object(c.jsx)(a.EuiSpacer,{size:"s"}),Object(c.jsx)(a.EuiText,{size:"s"},i.i18n.translate("searchApiPanels.pipeline.overview.extAndStandard.description",{defaultMessage:"Parse information from your documents to ensure they conform to a standardized format."}))))),Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiFlexGroup,{alignItems:"flexStart",justifyContent:"flexStart"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiImage,{alt:"",src:s})),Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiTitle,{size:"s"},Object(c.jsx)("h3",null,i.i18n.translate("searchApiPanels.pipeline.overview.anonymization.title",{defaultMessage:"Anonymize data"}))),Object(c.jsx)(a.EuiSpacer,{size:"s"}),Object(c.jsx)(a.EuiText,{size:"s"},i.i18n.translate("searchApiPanels.pipeline.overview.anonymization.description",{defaultMessage:"Remove sensitive information from documents before indexing."})))))))),E=({docLinks:e,children:t,http:s,isPanelLeft:n=!0,overviewPanelProps:l,callout:u})=>{const d=Object(c.jsx)(o.a.Fragment,null,Object(c.jsx)(a.EuiFlexGroup,{direction:"column"},Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiText,{size:"s"},Object(c.jsx)("strong",null,i.i18n.translate("searchApiPanels.welcomeBanner.selectClient.heading",{defaultMessage:"Choose one"}))))),Object(c.jsx)(a.EuiSpacer,{size:"s"}),Object(c.jsx)(a.EuiFlexGroup,{gutterSize:"xs",direction:"row"},t),Object(c.jsx)(a.EuiSpacer,{size:"l"}),u||Object(c.jsx)(a.EuiCallOut,{title:i.i18n.translate("searchApiPanels.welcomeBanner.selectClient.callout.title",{defaultMessage:"Try it now in Console"}),size:"m",iconType:"iInCircle"},Object(c.jsx)("p",null,i.i18n.translate("searchApiPanels.welcomeBanner.selectClient.callout.description",{defaultMessage:"With Console, you can get started right away with our REST APIs. No installation required."}),Object(c.jsx)("span",null,Object(c.jsx)(a.EuiLink,{target:"_blank",href:s.basePath.prepend("/app/dev_tools#/console")},i.i18n.translate("searchApiPanels.welcomeBanner.selectClient.callout.link",{defaultMessage:"Try Console now"}))))));return Object(c.jsx)(f,{description:Object(c.jsx)(r.FormattedMessage,{id:"searchApiPanels.welcomeBanner.selectClient.description",defaultMessage:"Elastic builds and maintains clients in several popular languages and our community has contributed many more. Select your favorite language client or dive into the {console} to get started.",values:{console:Object(c.jsx)(a.EuiLink,{href:s.basePath.prepend("/app/dev_tools#/console")},i.i18n.translate("searchApiPanels.welcomeBanner.selectClient.description.console.link",{defaultMessage:"Console"}))}}),leftPanelContent:n?d:void 0,rightPanelContent:n?void 0:d,links:[{href:e.elasticsearchClients,label:i.i18n.translate("searchApiPanels.welcomeBanner.selectClient.elasticsearchClientDocLink",{defaultMessage:"Elasticsearch clients "})},{href:e.kibanaRunApiInConsole,label:i.i18n.translate("searchApiPanels.welcomeBanner.selectClient.apiRequestConsoleDocLink",{defaultMessage:"Run API requests in Console "})}],title:i.i18n.translate("searchApiPanels.welcomeBanner.selectClient.title",{defaultMessage:"Select your client"}),overviewPanelProps:l})},S=({language:e,assetBasePath:t})=>e.github?Object(c.jsx)(b,{href:e.github.link,label:e.github.label,assetBasePath:t}):null,k=({codeSnippet:e,consoleRequest:t,language:s,languages:n,setSelectedLanguage:r,assetBasePath:l,application:u,sharePlugin:d,isPanelLeft:p=!0,overviewPanelProps:j})=>{const x=Object(c.jsx)(o.a.Fragment,null,Object(c.jsx)(g,{consoleRequest:t,codeSnippet:e,languageType:"shell",languages:n,selectedLanguage:s,setSelectedLanguage:r,assetBasePath:l,application:u,sharePlugin:d}),Object(c.jsx)(a.EuiSpacer,null),Object(c.jsx)(S,{language:s,assetBasePath:l}));return Object(c.jsx)(f,{description:i.i18n.translate("searchApiPanels.welcomeBanner.installClient.description",{defaultMessage:"First you need to install your programming language client of choice."}),links:s.docLink?[{href:s.docLink,label:i.i18n.translate("searchApiPanels.welcomeBanner.installClient.clientDocLink",{defaultMessage:"{languageName} client documentation",values:{languageName:s.name}})}]:[],title:i.i18n.translate("searchApiPanels.welcomeBanner.installClient.title",{defaultMessage:"Install a client"}),leftPanelContent:p?x:void 0,rightPanelContent:p?void 0:x,overviewPanelProps:j})};let w;!function(e){e.JAVA="java",e.JAVASCRIPT="javascript",e.RUBY="ruby",e.GO="go",e.DOTNET="dotnet",e.PHP="php",e.PERL="perl",e.PYTHON="python",e.RUST="rust",e.CURL="curl"}(w||(w={}));const C={buildSearchQuery:'POST /books/_search?pretty\n{\n  "query": {\n    "query_string": {\n      "query": "snow"\n    }\n  }\n}',ingestData:'POST _bulk?pretty\n{ "index" : { "_index" : "books" } }\n{"name": "Snow Crash", "author": "Neal Stephenson", "release_date": "1992-06-01", "page_count": 470}\n{ "index" : { "_index" : "books" } }\n{"name": "Revelation Space", "author": "Alastair Reynolds", "release_date": "2000-03-15", "page_count": 585}\n{ "index" : { "_index" : "books" } }\n{"name": "1984", "author": "George Orwell", "release_date": "1985-06-01", "page_count": 328}\n{ "index" : { "_index" : "books" } }\n{"name": "Fahrenheit 451", "author": "Ray Bradbury", "release_date": "1953-10-15", "page_count": 227}\n{ "index" : { "_index" : "books" } }\n{"name": "Brave New World", "author": "Aldous Huxley", "release_date": "1932-06-01", "page_count": 268}\n{ "index" : { "_index" : "books" } }\n{"name": "The Handmaid\'s Tale", "author": "Margaret Atwood", "release_date": "1985-06-01", "page_count": 311}',ingestDataIndex:({indexName:e})=>`POST _bulk?pretty\n{ "index" : { "_index" : "${null!=e?e:"index_name"}" } }\n{"name": "foo", "title": "bar"}\n`},_=(e,t,s)=>{const n=e[t];if(void 0===n)return"";switch(typeof n){case"string":return n;case"function":return n(s);default:return""}},P=(e,t)=>{if(e in C){const s=C[e];switch(typeof s){case"string":return s;case"function":return t?s(t):void 0;default:return}}},I=({user:e,assetBasePath:t,image:s,showDescription:n=!0})=>Object(c.jsx)(o.a.Fragment,null,Object(c.jsx)(a.EuiSpacer,{size:"xxl"}),Object(c.jsx)(a.EuiFlexGroup,{justifyContent:"spaceBetween",alignItems:"center"},Object(c.jsx)(a.EuiFlexItem,{grow:2},Object(c.jsx)(a.EuiFlexGroup,{justifyContent:"flexStart",direction:"columnReverse",gutterSize:"s"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiTitle,{size:"l"},Object(c.jsx)("h1",null,i.i18n.translate("searchApiPanels.welcomeBanner.header.title",{defaultMessage:"Get started with Elasticsearch"})))),Boolean(e)&&Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiText,null,Object(c.jsx)("h4",null,e?i.i18n.translate("searchApiPanels.welcomeBanner.header.greeting.customTitle",{defaultMessage:"👋 Hi {name}!",values:{name:e.full_name||e.username}}):i.i18n.translate("searchApiPanels.welcomeBanner.header.greeting.defaultTitle",{defaultMessage:"👋 Hi"}))))),Object(c.jsx)(a.EuiSpacer,null),n&&Object(c.jsx)(a.EuiText,null,i.i18n.translate("searchApiPanels.welcomeBanner.header.description",{defaultMessage:"Set up your programming language client, ingest some data, and you'll be ready to start searching within minutes."}))),Object(c.jsx)(a.EuiFlexItem,{grow:1},Object(c.jsx)(a.EuiImage,{alt:"",src:s||`${t}/serverless_header.png`,size:"original"}))),Object(c.jsx)(a.EuiSpacer,{size:"xxl"}));var T=s(36),A=s(12),B=s(43),F=s(72);const M="index_name",z={id:w.JAVA,name:i.i18n.translate("xpack.serverlessSearch.languages.java",{defaultMessage:"Java"}),iconType:"java.svg",github:{label:i.i18n.translate("xpack.serverlessSearch.languages.java.githubLabel",{defaultMessage:"elasticsearch-java-serverless"}),link:"https://github.com/elastic/elasticsearch-java/tree/main/java-client-serverless"},installClient:"dependencies {\n    implementation 'co.elastic.clients:elasticsearch-java-serverless:1.0.0-20231031'\n    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'\n}",configureClient:({apiKey:e,url:t})=>`// URL and API key\nString serverUrl = "${t}";\nString apiKey = "${e}";\n\n// Create the low-level client\nRestClient restClient = RestClient\n  .builder(HttpHost.create(serverUrl))\n  .setDefaultHeaders(new Header[]{\n      new BasicHeader("Authorization", "ApiKey " + apiKey)\n  })\n  .build();\n\n// Create the transport with a Jackson mapper\nElasticsearchTransport transport = new RestClientTransport(\n  restClient, new JacksonJsonpMapper());\n\n// And create the API client\nElasticsearchClient esClient = new ElasticsearchClient(transport);`,testConnection:"InfoResponse info = esClient.info();\n\nlogger.info(info.toString());",ingestData:'List<Book> books = new ArrayList<>();\nbooks.add(new Book("9780553351927", "Snow Crash", "Neal Stephenson", "1992-06-01", 470));\nbooks.add(new Book("9780441017225", "Revelation Space", "Alastair Reynolds", "2000-03-15", 585));\nbooks.add(new Book("9780451524935", "1984", "George Orwell", "1985-06-01", 328));\nbooks.add(new Book("9781451673319", "Fahrenheit 451", "Ray Bradbury", "1953-10-15", 227));\nbooks.add(new Book("9780060850524", "Brave New World", "Aldous Huxley", "1932-06-01", 268));\nbooks.add(new Book("9780385490818", "The Handmaid\'s Tale", "Margaret Atwood", "1985-06-01", 311));\n\nBulkRequest.Builder br = new BulkRequest.Builder();\n\nfor (Book book : books) {\n    br.operations(op -> op\n        .index(idx -> idx\n            .index("books")\n            .id(product.getId())\n            .document(book)\n        )\n    );\n}\n\nBulkResponse result = esClient.bulk(br.build());\n\n// Log errors, if any\nif (result.errors()) {\n    logger.error("Bulk had errors");\n    for (BulkResponseItem item: result.items()) {\n        if (item.error() != null) {\n            logger.error(item.error().reason());\n        }\n    }\n}',buildSearchQuery:'String searchText = "snow";\n\nSearchResponse<Book> response = esClient.search(s -> s\n  .index("books")\n  .query(q -> q\n      .match(t -> t\n          .field("name")\n          .query(searchText)\n      )\n  ),\n  Book.class\n);\n\nTotalHits total = response.hits().total();'},L={buildSearchQuery:'curl -X POST "${ES_URL}/books/_search?pretty" \\\n  -H "Authorization: ApiKey "${API_KEY}"" \\\n  -H "Content-Type: application/json" \\\n  -d\'\n{\n  "query": {\n    "query_string": {\n      "query": "snow"\n    }\n  }\n}\'',configureClient:({apiKey:e,url:t})=>`export ES_URL="${t}"\nexport API_KEY="${e}"`,docLink:A.a.apiIntro,github:{link:"https://github.com/curl/curl",label:i.i18n.translate("xpack.serverlessSearch.languages.cURL.githubLabel",{defaultMessage:"curl"})},iconType:"curl.svg",id:w.CURL,ingestData:'curl -X POST "${ES_URL}/_bulk?pretty" \\\n  -H "Authorization: ApiKey "${API_KEY}"" \\\n  -H "Content-Type: application/json" \\\n  -d\'\n{ "index" : { "_index" : "books" } }\n{"name": "Snow Crash", "author": "Neal Stephenson", "release_date": "1992-06-01", "page_count": 470}\n{ "index" : { "_index" : "books" } }\n{"name": "Revelation Space", "author": "Alastair Reynolds", "release_date": "2000-03-15", "page_count": 585}\n{ "index" : { "_index" : "books" } }\n{"name": "1984", "author": "George Orwell", "release_date": "1985-06-01", "page_count": 328}\n{ "index" : { "_index" : "books" } }\n{"name": "Fahrenheit 451", "author": "Ray Bradbury", "release_date": "1953-10-15", "page_count": 227}\n{ "index" : { "_index" : "books" } }\n{"name": "Brave New World", "author": "Aldous Huxley", "release_date": "1932-06-01", "page_count": 268}\n{ "index" : { "_index" : "books" } }\n{"name": "The Handmaid\'"\'"\'s Tale", "author": "Margaret Atwood", "release_date": "1985-06-01", "page_count": 311}\n\'',ingestDataIndex:({apiKey:e,url:t,indexName:s})=>`curl -X POST ${t}/_bulk?pretty \\\n  -H "Authorization: ApiKey ${e}" \\\n  -H "Content-Type: application/json" \\\n  -d'\n{ "index" : { "_index" : "${null!=s?s:"index_name"}" } }\n{"name": "foo", "title": "bar" }\n`,installClient:"# if cURL is not already installed on your system\n# then install it with the package manager of your choice\n\n# example\nbrew install curl",name:i.i18n.translate("xpack.serverlessSearch.languages.cURL",{defaultMessage:"cURL"}),languageStyling:"shell",testConnection:'curl "${ES_URL}" \\\n  -H "Authorization: ApiKey "${API_KEY}"" \\\n  -H "Content-Type: application/json"'},R={id:w.DOTNET,name:i.i18n.translate("xpack.serverlessSearch.languages.dotnet",{defaultMessage:".NET"}),iconType:"dotnet.svg",github:{label:i.i18n.translate("xpack.serverlessSearch.languages.dotnet.githubLabel",{defaultMessage:"elasticsearch-serverless-net"}),link:"https://github.com/elastic/elasticsearch-serverless-net"},installClient:"dotnet add package Elastic.Clients.Elasticsearch.Serverless",configureClient:({apiKey:e,cloudId:t})=>`using System;\nusing Elastic.Clients.Elasticsearch.Serverless;\nusing Elastic.Clients.Elasticsearch.Serverless.QueryDsl;\n\nvar client = new ElasticsearchClient("${t}", new ApiKey("${e}"));`,testConnection:"var info = await client.InfoAsync();",ingestData:'var doc = new Book\n{\n  Id = "9780553351927",\n  Name = "Snow Crash",\n  Author = "Neal Stephenson",\n  ReleaseDate = new DateTime(1992, 06, 01),\n  PageCount = 470\n};\n\nvar response = await client.IndexAsync(doc, "books");',buildSearchQuery:'var response = await client.SearchAsync<Book>(s => s\n  .Index("books")\n  .From(0)\n  .Size(10)\n  .Query("snow")\n);\n\nif (response.IsValidResponse)\n{\n    var books = response.Documents.FirstOrDefault();\n}'},D={apiReference:A.a.goApiReference,basicConfig:A.a.goBasicConfig,buildSearchQuery:'searchResp, err := es.Search().\n  Index("books").\n  Q("snow").\n  Do(context.Background())\n\nfmt.Println(searchResp, err)',configureClient:({url:e,apiKey:t})=>`import (\n  "context"\n  "fmt"\n  "log"\n  "strings"\n\n  "github.com/elastic/elasticsearch-serverless-go"\n)\n\nfunc main() {\n  cfg := elasticsearch.Config{\n    Address: "${e}",\n    APIKey: "${t}",\n  }\n  es, err := elasticsearch.NewClient(cfg)\n  if err != nil {\n    log.Fatalf("Error creating the client: %s", err)\n  }\n}`,docLink:A.a.goClient,github:{link:"https://github.com/elastic/elasticsearch-serverless-go",label:i.i18n.translate("xpack.serverlessSearch.languages.go.githubLabel",{defaultMessage:"elasticsearch-serverless-go"})},iconType:"go.svg",id:w.GO,ingestData:'ingestResult, err := es.Bulk().\n  Index("books").\n  Raw(strings.NewReader(`\n{"index":{"_id":"9780553351927"}}\n{"name":"Snow Crash","author":"Neal Stephenson","release_date":"1992-06-01","page_count": 470}\n{ "index": { "_id": "9780441017225"}}\n{"name": "Revelation Space", "author": "Alastair Reynolds", "release_date": "2000-03-15", "page_count": 585}\n{ "index": { "_id": "9780451524935"}}\n{"name": "1984", "author": "George Orwell", "release_date": "1985-06-01", "page_count": 328}\n{ "index": { "_id": "9781451673319"}}\n{"name": "Fahrenheit 451", "author": "Ray Bradbury", "release_date": "1953-10-15", "page_count": 227}\n{ "index": { "_id": "9780060850524"}}\n{"name": "Brave New World", "author": "Aldous Huxley", "release_date": "1932-06-01", "page_count": 268}\n{ "index": { "_id": "9780385490818"}}\n{"name": "The Handmaid\'s Tale", "author": "Margaret Atwood", "release_date": "1985-06-01", "page_count": 311}\n`)).\n  Do(context.Background())\n\nfmt.Println(ingestResult, err)',ingestDataIndex:({apiKey:e,url:t,indexName:s})=>`import (\n  "context"\n  "fmt"\n  "log"\n  "strings"\n\n  "github.com/elastic/elasticsearch-serverless-go"\n)\n\nfunc main() {\n  cfg := elasticsearch.Config{\n    Address: "${t}",\n    APIKey: "${e}",\n  }\n  es, err := elasticsearch.NewClient(cfg)\n  if err != nil {\n    log.Fatalf("Error creating the client: %s", err)\n  }\n  res, err := es.Bulk().\n    Index("${s}").\n    Raw(strings.NewReader(\`\n{ "index": { "_id": "1"}}\n{"name": "foo", "title": "bar"}\n\`)).\n    Do(context.Background())\n\n  fmt.Println(res, err)\n}`,installClient:"go get -u github.com/elastic/elasticsearch-serverless-go@latest",name:i.i18n.translate("xpack.serverlessSearch.languages.go",{defaultMessage:"Go"}),testConnection:'infores, err := es.Info().Do(context.Background())\nif err != nil {\n  log.Fatalf("Error getting response: %s", err)\n}\n\nfmt.Println(infores)'},K={apiReference:A.a.jsApiReference,basicConfig:A.a.jsBasicConfig,buildSearchQuery:"// Let's search!\nconst searchResult = await client.search({\n  index: 'my-index-name',\n  q: 'snow'\n});\n\nconsole.log(searchResult.hits.hits)\n",configureClient:({url:e,apiKey:t})=>`const { Client } = require('@elastic/elasticsearch-serverless');\nconst client = new Client({\n  node: '${e}',\n  auth: {\n    apiKey: '${t}'\n  }\n});`,docLink:A.a.jsClient,github:{link:"https://github.com/elastic/elasticsearch-serverless-js",label:i.i18n.translate("xpack.serverlessSearch.languages.javascript.githubLabel",{defaultMessage:"elasticsearch-serverless"})},iconType:"javascript.svg",id:w.JAVASCRIPT,ingestData:'// Sample books data\nconst dataset = [\n  {"name": "Snow Crash", "author": "Neal Stephenson", "release_date": "1992-06-01", "page_count": 470},\n  {"name": "Revelation Space", "author": "Alastair Reynolds", "release_date": "2000-03-15", "page_count": 585},\n  {"name": "1984", "author": "George Orwell", "release_date": "1985-06-01", "page_count": 328},\n  {"name": "Fahrenheit 451", "author": "Ray Bradbury", "release_date": "1953-10-15", "page_count": 227},\n  {"name": "Brave New World", "author": "Aldous Huxley", "release_date": "1932-06-01", "page_count": 268},\n  {"name": "The Handmaid\'s Tale", "author": "Margaret Atwood", "release_date": "1985-06-01", "page_count": 311}\n];\n\n// Index with the bulk helper\nconst result = await client.helpers.bulk({\n  datasource: dataset,\n  onDocument (doc) {\n    return { index: { _index: \'my-index-name\' }};\n  }\n});\n\nconsole.log(result);\n/**\n{\n  total: 6,\n  failed: 0,\n  retry: 0,\n  successful: 6,\n  noop: 0,\n  time: 191,\n  bytes: 787,\n  aborted: false\n}\n*/',ingestDataIndex:({apiKey:e,url:t,indexName:s})=>`const { Client } = require('@elastic/elasticsearch-serverless');\nconst client = new Client({\n  node: '${t}',\n  auth: {\n      apiKey: '${e}'\n  }\n});\nconst dataset = [\n  {'name': 'foo', 'title': 'bar'},\n];\n\n// Index with the bulk helper\nconst result = await client.helpers.bulk({\n  datasource: dataset,\n  onDocument (doc) {\n    return { index: { _index: '${null!=s?s:"index_name"}' }};\n  }\n});\nconsole.log(result);\n`,installClient:"npm install @elastic/elasticsearch-serverless",name:i.i18n.translate("xpack.serverlessSearch.languages.javascript",{defaultMessage:"JavaScript"}),testConnection:"const resp = await client.info();\n\nconsole.log(resp);\n/**\n{\n  name: 'instance-0000000000',\n  cluster_name: 'd9dcd35d12fe46dfaa28ec813f65d57b',\n  cluster_uuid: 'iln8jaivThSezhTkzp0Knw',\n  version: {\n    build_flavor: 'default',\n    build_type: 'docker',\n    build_hash: 'c94b4700cda13820dad5aa74fae6db185ca5c304',\n    build_date: '2022-10-24T16:54:16.433628434Z',\n    build_snapshot: false,\n    lucene_version: '9.4.1',\n    minimum_wire_compatibility_version: '7.17.0',\n    minimum_index_compatibility_version: '7.0.0'\n  },\n  tagline: 'You Know, for Search'\n}\n*/"},$={apiReference:A.a.phpApiReference,basicConfig:A.a.phpBasicConfig,buildSearchQuery:"$params = [ 'q' => 'snow' ];\n  $response = $client->search(index: \"books\", params: $params);\n  print_r($response['hits']['hits']); # list of books",configureClient:({url:e,apiKey:t})=>`$client = ClientBuilder::create()\n  ->setEndpoint('${e}')\n  ->setApiKey('${t}')\n  ->build();`,docLink:A.a.phpClient,github:{link:"https://github.com/elastic/elasticsearch-serverless-php",label:i.i18n.translate("xpack.serverlessSearch.languages.php.githubLink",{defaultMessage:"elasticsearch-serverless-php"})},iconType:"php.svg",id:w.PHP,ingestData:'$body = [\n    [ "index" => [ "_index" => "books" ]],\n    [ "name" => "Snow Crash", "author" => "Neal Stephenson", "release_date" => "1992-06-01", "page_count" => 470],\n    [ "index" => [ "_index" => "books" ]],\n    [ "name" => "Revelation Space", "author" => "Alastair Reynolds", "release_date" => "2000-03-15", "page_count" => 585],\n    [ "index" => [ "_index" => "books" ]],\n    [ "name" => "1984", "author" => "George Orwell", "release_date" => "1949-06-08", "page_count" => 328],\n    [ "index" => [ "_index" => "books" ]],\n    [ "name" => "Fahrenheit 451", "author" => "Ray Bradbury", "release_date" => "1953-10-15", "page_count" => 227],\n    [ "index" => [ "_index" => "books" ]],\n    [ "name" => "Brave New World", "author" => "Aldous Huxley", "release_date" => "1932-06-01", "page_count" => 268],\n    [ "index" => [ "_index" => "books" ]],\n    [ "name" => "The Handmaid\'s Tale", "author" => "Margaret Atwood", "release_date" => "1985-06-01", "page_count" => 311]\n];\n\n$response = $client->bulk(body: $body);\necho $response->getStatusCode();\necho (string) $response->getBody();',ingestDataIndex:({apiKey:e,url:t,indexName:s})=>`$client = ClientBuilder::create()\n  ->setEndpoint('${t}')\n  ->setApiKey('${e}')\n  ->build();\n\n$body = [\n  [ 'index' => [ '_index' => '${null!=s?s:M}', '_id' => '1' ]],\n  [ 'name' => 'foo', 'title' => 'bar' ]\n];\n\n$response = $client->bulk(body: $body);\necho $response->getStatusCode();\necho (string) $response->getBody();\n`,installClient:"composer require elastic/elasticsearch-serverless:*@alpha",name:i.i18n.translate("xpack.serverlessSearch.languages.php",{defaultMessage:"PHP"}),testConnection:"$response = $client->info();\necho $response->getStatusCode();\necho (string) $response->getBody();"},N={apiReference:A.a.pythonApiReference,basicConfig:A.a.pythonBasicConfig,buildSearchQuery:'client.search(index="books", q="snow")',configureClient:({url:e,apiKey:t})=>`from elasticsearch_serverless import Elasticsearch\n\nclient = Elasticsearch(\n  "${e}",\n  api_key="${t}"\n)`,docLink:A.a.pythonClient,github:{link:"https://github.com/elastic/elasticsearch-serverless-python",label:i.i18n.translate("xpack.serverlessSearch.languages.python.githubLabel",{defaultMessage:"elasticsearch-serverless-python"})},iconType:"python.svg",id:w.PYTHON,ingestData:'documents = [\n  { "index": { "_index": "books", "_id": "9780553351927"}},\n  {"name": "Snow Crash", "author": "Neal Stephenson", "release_date": "1992-06-01", "page_count": 470},\n  { "index": { "_index": "books", "_id": "9780441017225"}},\n  {"name": "Revelation Space", "author": "Alastair Reynolds", "release_date": "2000-03-15", "page_count": 585},\n  { "index": { "_index": "books", "_id": "9780451524935"}},\n  {"name": "1984", "author": "George Orwell", "release_date": "1985-06-01", "page_count": 328},\n  { "index": { "_index": "books", "_id": "9781451673319"}},\n  {"name": "Fahrenheit 451", "author": "Ray Bradbury", "release_date": "1953-10-15", "page_count": 227},\n  { "index": { "_index": "books", "_id": "9780060850524"}},\n  {"name": "Brave New World", "author": "Aldous Huxley", "release_date": "1932-06-01", "page_count": 268},\n  { "index": { "_index": "books", "_id": "9780385490818"}},\n  {"name": "The Handmaid\'s Tale", "author": "Margaret Atwood", "release_date": "1985-06-01", "page_count": 311},\n]\n\nclient.bulk(operations=documents)',ingestDataIndex:({apiKey:e,url:t,indexName:s})=>`from elasticsearch_serverless import Elasticsearch\n\nclient = Elasticsearch(\n  "${t}",\n  api_key="${e}"\n)\n\ndocuments = [\n  {"index": {"_index": "${null!=s?s:M}"}},\n  {"name": "foo", "title": "bar"},\n]\n\nclient.bulk(operations=documents)\n`,installClient:"python -m pip install elasticsearch-serverless\n\n# If your application uses async/await in Python you can install with the async extra\n# python -m pip install elasticsearch_serverless[async]\n  ",name:i.i18n.translate("xpack.serverlessSearch.languages.python",{defaultMessage:"Python"}),testConnection:"client.info()"},G={apiReference:A.a.rubyExamples,buildSearchQuery:"client.search(index: 'books', q: 'snow')",configureClient:({url:e,apiKey:t})=>`client = ElasticsearchServerless::Client.new(\n  api_key: '${t}',\n  url: '${e}'\n)\n`,basicConfig:A.a.rubyBasicConfig,docLink:A.a.rubyClient,github:{link:"https://github.com/elastic/elasticsearch-serverless-ruby",label:i.i18n.translate("xpack.serverlessSearch.languages.ruby.githubLabel",{defaultMessage:"elasticsearch-serverless-ruby"})},iconType:"ruby.svg",id:w.RUBY,ingestData:'documents = [\n  { index: { _index: \'books\', data: {name: "Snow Crash", "author": "Neal Stephenson", "release_date": "1992-06-01", "page_count": 470} } },\n  { index: { _index: \'books\', data: {name: "Revelation Space", "author": "Alastair Reynolds", "release_date": "2000-03-15", "page_count": 585} } },\n  { index: { _index: \'books\', data: {name: "1984", "author": "George Orwell", "release_date": "1985-06-01", "page_count": 328} } },\n  { index: { _index: \'books\', data: {name: "Fahrenheit 451", "author": "Ray Bradbury", "release_date": "1953-10-15", "page_count": 227} } },\n  { index: { _index: \'books\', data: {name: "Brave New World", "author": "Aldous Huxley", "release_date": "1932-06-01", "page_count": 268} } },\n  { index: { _index: \'books\', data: {name: "The Handmaid\'s Tale", "author": "Margaret Atwood", "release_date": "1985-06-01", "page_count": 311} } }\n]\nclient.bulk(body: documents)',ingestDataIndex:({apiKey:e,url:t,indexName:s})=>`client = ElasticsearchServerless::Client.new(\n  api_key: '${e}',\n  url: '${t}'\n)\n\ndocuments = [\n  { index: { _index: '${null!=s?s:M}', data: {name: "foo", "title": "bar"} } },\n]\nclient.bulk(body: documents)\n`,installClient:"# Requires Ruby version 3.0 or higher\n\n# Install from RubyGems:\ngem install elasticsearch-serverless --pre\n\n# Or include the gem in your Gemfile\ngem 'elasticsearch-serverless'\n\n# And require it in your code\nrequire 'elasticsearch-serverless'",name:i.i18n.translate("xpack.serverlessSearch.languages.ruby",{defaultMessage:"Ruby"}),testConnection:"client.info"},H={[w.CURL]:L,[w.JAVA]:z,[w.DOTNET]:R,[w.PYTHON]:N,[w.JAVASCRIPT]:K,[w.PHP]:$,[w.GO]:D,[w.RUBY]:G},U=Object.values(H),q=({assetBasePath:e,languages:t,selectedLanguage:s,setSelectedLanguage:n})=>{const{euiTheme:i}=Object(a.useEuiTheme)(),r=Object(a.useIsWithinBreakpoints)(["l"]),l=Object(a.useIsWithinBreakpoints)(["xl"])?3:r?2:1;return Object(c.jsx)(a.EuiFlexGrid,{columns:l,gutterSize:"s","data-test-subj":"client-select-container"},t.map((t=>Object(c.jsx)(a.EuiFlexItem,{key:t.id},Object(c.jsx)(a.EuiPanel,{hasBorder:!0,borderRadius:"m",className:t.id===s?"serverlessSearchSelectClientPanelSelectedBorder":"serverlessSearchSelectClientPanelBorder",onClick:()=>n(t),color:t.id===s?"primary":"plain","data-test-subj":`${t.id}-client-panel`},Object(c.jsx)(a.EuiFlexGroup,{justifyContent:"flexStart",responsive:!1},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiImage,{alt:"",src:`${e}/${t.iconType}`,height:i.size.l,width:i.size.l})),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiText,{textAlign:"left",color:t.id===s?"default":"subdued"},Object(c.jsx)("h5",null,t.name)))))))))};s(91);var W=s(35),J=s(73),Q=s(14),Y=s(42);const V=({isLoading:e,name:t,user:s,expires:n,onChangeName:l,onChangeExpires:o})=>{let u;return n&&(u=new Date,u.setDate(u.getDate()+parseInt(n,10))),Object(c.jsx)(a.EuiForm,null,Object(c.jsx)(a.EuiFormRow,{fullWidth:!0,isInvalid:!t,helpText:i.i18n.translate("xpack.serverlessSearch.apiKey.nameFieldHelpText",{defaultMessage:"A good name makes it clear what your API key does."}),label:i.i18n.translate("xpack.serverlessSearch.apiKey.nameFieldLabel",{defaultMessage:"Name"})},Object(c.jsx)(a.EuiFieldText,{fullWidth:!0,isLoading:e,value:t,onChange:e=>l(e.currentTarget.value),"data-test-subj":"create-api-key-name"})),Object(c.jsx)(a.EuiFormRow,{fullWidth:!0,helpText:i.i18n.translate("xpack.serverlessSearch.apiKey.userFieldHelpText",{defaultMessage:"ID of the user creating the API key."}),label:i.i18n.translate("xpack.serverlessSearch.apiKey.userFieldLabel",{defaultMessage:"User"})},Object(c.jsx)(a.EuiFieldText,{"data-test-subj":"serverlessSearchBasicSetupFormFieldText",fullWidth:!0,disabled:!0,value:s,onChange:()=>{}})),Object(c.jsx)(a.EuiFormRow,{fullWidth:!0,labelAppend:Object(c.jsx)(a.EuiFlexGroup,{gutterSize:"s",justifyContent:"flexEnd",alignItems:"center"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiIcon,{type:"warning",size:"s",color:"subdued"})),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiText,{color:"subdued",size:"xs"},i.i18n.translate("xpack.serverlessSearch.apiKey.expiresFieldHelpText",{defaultMessage:"API keys should be rotated regularly."})))),label:i.i18n.translate("xpack.serverlessSearch.apiKey.expiresFieldLabel",{defaultMessage:"Expires"})},Object(c.jsx)(a.EuiRadioGroup,{options:[{id:"never",label:i.i18n.translate("xpack.serverlessSearch.apiKey.expiresField.neverLabel",{defaultMessage:"Never"}),"data-test-subj":"create-api-key-expires-never-radio"},{id:"days",label:i.i18n.translate("xpack.serverlessSearch.apiKey.expiresField.daysLabel",{defaultMessage:"in days"}),"data-test-subj":"create-api-key-expires-days-radio"}],idSelected:null===n?"never":"days",onChange:e=>o("never"===e?null:"60"),"data-test-subj":"create-api-key-expires-radio"})),null!==n&&Object(c.jsx)(a.EuiFormRow,{fullWidth:!0,helpText:Object(c.jsx)(r.FormattedMessage,{id:"xpack.serverlessSearch.apiKey.expiresHelpText",defaultMessage:"This API Key will expire on {expirationDate}",values:{expirationDate:Object(c.jsx)("strong",null,Object(c.jsx)(r.FormattedDate,{year:"numeric",month:"long",day:"numeric",value:u}))}})},Object(c.jsx)(a.EuiFieldNumber,{fullWidth:!0,disabled:e,append:i.i18n.translate("xpack.serverlessSearch.apiKey.expiresFieldUnit",{defaultMessage:"days"}),placeholder:"1",defaultValue:n,min:1,onChange:e=>o(e.currentTarget.value),"data-test-subj":"create-api-key-expires-days-number-field"})))};var X=s(37);const Z=({metadata:e,onChangeMetadata:t,error:s})=>Object(c.jsx)("div",{"data-test-subj":"create-api-metadata-code-editor-container"},Object(c.jsx)(a.EuiLink,{"data-test-subj":"serverlessSearchMetadataFormLearnHowToStructureRoleMetadataLink",href:A.a.metadata,target:"_blank"},i.i18n.translate("xpack.serverlessSearch.apiKey.metadataLinkLabel",{defaultMessage:"Learn how to structure role metadata"})),Object(c.jsx)(a.EuiSpacer,null),s&&Object(c.jsx)(a.EuiText,{size:"s",color:"danger"},Object(c.jsx)("p",null,s)),Object(c.jsx)(X.CodeEditorField,{allowFullScreen:!0,fullWidth:!0,height:"600px",languageId:"json",isCopyable:!0,onChange:e=>t(e),value:e})),ee=({roleDescriptors:e,onChangeRoleDescriptors:t,error:s})=>Object(c.jsx)("div",{"data-test-subj":"create-api-role-descriptors-code-editor-container"},Object(c.jsx)(a.EuiLink,{"data-test-subj":"serverlessSearchSecurityPrivilegesFormLearnHowToStructureRoleDescriptorsLink",href:A.a.roleDescriptors,target:"_blank"},i.i18n.translate("xpack.serverlessSearch.apiKey.roleDescriptorsLinkLabel",{defaultMessage:"Learn how to structure role descriptors"})),Object(c.jsx)(a.EuiSpacer,null),s&&Object(c.jsx)(a.EuiText,{size:"s",color:"danger"},Object(c.jsx)("p",null,s)),Object(c.jsx)(X.CodeEditorField,{allowFullScreen:!0,fullWidth:!0,height:"600px",languageId:"json",isCopyable:!0,onChange:e=>t(e),value:e}));var te=s(74);const se='{\n  "serverless_search": {\n    "indices": [{\n      "names": ["*"],\n      "privileges": [\n        "all"\n      ]\n    }]\n  }\n}',ne='{\n  "application": "myapp"\n}',ae=({onClose:e,username:t,setApiKey:s})=>{const{euiTheme:n}=Object(a.useEuiTheme)(),[r,o]=Object(l.useState)(""),[u,d]=Object(l.useState)("60"),[p,j]=Object(l.useState)(se),[x,g]=Object(l.useState)(void 0),[b,h]=Object(l.useState)(ne),[m,f]=Object(l.useState)(void 0),[O,y]=Object(l.useState)(!1),[v,E]=Object(l.useState)("closed"),[S,k]=Object(l.useState)(!1),[w,C]=Object(l.useState)("closed"),{data:_,isLoading:P,isError:I,isSuccess:T,error:A,mutate:B}=Object(te.a)();Object(l.useEffect)((()=>{T&&(s(_),e())}));const F=(e=>{if(e)return(e=>Object(Y.has)("body.message",e))(e)?e.body.message:e instanceof Error?e.message:JSON.stringify(e)})(A);return Object(c.jsx)(a.EuiFlyout,{onClose:e,css:Object(c.css)("max-width:calc(",n.size.xxxxl," * 10);","")},Object(c.jsx)(a.EuiFlyoutHeader,{hasBorder:!0},Object(c.jsx)(a.EuiTitle,{size:"m"},Object(c.jsx)("h2",null,i.i18n.translate("xpack.serverlessSearch.apiKey.flyoutTitle",{defaultMessage:"Create an API key"})))),Object(c.jsx)(a.EuiFlyoutBody,null,I&&F&&Object(c.jsx)(a.EuiCallOut,{color:"danger",iconType:"warning",title:i.i18n.translate("xpack.serverlessSearch.apiKey.flyout.errorTitle",{defaultMessage:"Error creating API key"}),"data-test-subj":"create-api-key-error-callout"},F),Object(c.jsx)(a.EuiPanel,{hasBorder:!0},Object(c.jsx)(a.EuiAccordion,{id:"apiKey.setup",paddingSize:"l",initialIsOpen:!0,buttonContent:Object(c.jsx)("div",null,Object(c.jsx)(a.EuiFlexGroup,{justifyContent:"flexStart",alignItems:"center",gutterSize:"s"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiIcon,{type:"gear"})),Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiTitle,{size:"xs"},Object(c.jsx)("h4",null,i.i18n.translate("xpack.serverlessSearch.apiKey.setup.title",{defaultMessage:"Setup"}))))),Object(c.jsx)(a.EuiSpacer,{size:"xs"}),Object(c.jsx)(a.EuiText,{color:"subdued",size:"xs"},Object(c.jsx)("p",null,i.i18n.translate("xpack.serverlessSearch.apiKey.setup.description",{defaultMessage:"Basic configuration details to create your API key."})))),extraAction:Object(c.jsx)(a.EuiBadge,{color:"hollow"},Q.n)},Object(c.jsx)(a.EuiSpacer,{size:"s"}),Object(c.jsx)(V,{isLoading:P,name:r,user:t,expires:u,onChangeName:e=>o(e),onChangeExpires:e=>d(e)}))),Object(c.jsx)(a.EuiSpacer,{size:"l"}),Object(c.jsx)(a.EuiPanel,{hasBorder:!0},Object(c.jsx)(a.EuiAccordion,{id:"apiKey.privileges",paddingSize:"l",buttonContent:Object(c.jsx)("div",{style:{paddingRight:n.size.s}},Object(c.jsx)(a.EuiFlexGroup,{justifyContent:"flexStart",alignItems:"center",gutterSize:"s"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiIcon,{type:"lock"})),Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiTitle,{size:"xs"},Object(c.jsx)("h4",null,i.i18n.translate("xpack.serverlessSearch.apiKey.privileges.title",{defaultMessage:"Security Privileges"}))))),Object(c.jsx)(a.EuiSpacer,{size:"xs"}),Object(c.jsx)(a.EuiText,{color:"subdued",size:"xs"},Object(c.jsx)("p",null,i.i18n.translate("xpack.serverlessSearch.apiKey.privileges.description",{defaultMessage:"Control access to specific Elasticsearch APIs and resources using predefined roles or custom privileges per API key."})))),extraAction:Object(c.jsx)(a.EuiSwitch,{label:O?Q.i:Q.g,checked:O,onChange:e=>{const t=e.target.checked;y(t),E(t?"open":"closed"),t&&j(se)},"data-test-subj":"create-api-role-descriptors-switch"}),forceState:v,onToggle:e=>{O&&E(e?"open":"closed")}},Object(c.jsx)(a.EuiSpacer,{size:"s"}),Object(c.jsx)(ee,{roleDescriptors:p,onChangeRoleDescriptors:j,error:x}))),Object(c.jsx)(a.EuiSpacer,{size:"l"}),Object(c.jsx)(a.EuiPanel,{hasBorder:!0},Object(c.jsx)(a.EuiAccordion,{id:"apiKey.metadata",paddingSize:"l",buttonContent:Object(c.jsx)("div",{style:{paddingRight:n.size.s}},Object(c.jsx)(a.EuiFlexGroup,{justifyContent:"flexStart",alignItems:"center",gutterSize:"s"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiIcon,{type:"visVega"})),Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiTitle,{size:"xs"},Object(c.jsx)("h4",null,i.i18n.translate("xpack.serverlessSearch.apiKey.metadata.title",{defaultMessage:"Metadata"}))))),Object(c.jsx)(a.EuiSpacer,{size:"xs"}),Object(c.jsx)(a.EuiText,{color:"subdued",size:"xs"},Object(c.jsx)("p",null,i.i18n.translate("xpack.serverlessSearch.apiKey.metadata.description",{defaultMessage:"Use configurable key-value pairs to add information about the API key or customize Elasticsearch resource access."})))),extraAction:Object(c.jsx)(a.EuiSwitch,{label:S?Q.i:Q.g,checked:S,onChange:e=>{const t=e.target.checked;k(t),C(t?"open":"closed"),t&&h(ne)},"data-test-subj":"create-api-metadata-switch"}),forceState:w,onToggle:e=>{S&&C(e?"open":"closed")}},Object(c.jsx)(a.EuiSpacer,{size:"s"}),Object(c.jsx)(Z,{metadata:b,onChangeMetadata:h,error:m})))),Object(c.jsx)(a.EuiFlyoutFooter,null,Object(c.jsx)(a.EuiFlexGroup,{justifyContent:"spaceBetween"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiButtonEmpty,{isDisabled:P,onClick:e,"data-test-subj":"create-api-key-cancel"},Q.a)),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiFlexGroup,{justifyContent:"flexEnd"},Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiButton,{fill:!0,disabled:!r,isLoading:P,onClick:()=>{let e,t;if(O)try{e=p.length>0?JSON.parse(p):void 0}catch(e){return void g(Q.j)}if(x&&g(void 0),S)try{t=b.length>0?JSON.parse(b):void 0}catch(e){return void f(Q.j)}m&&f(void 0),B({expiration:null!==u?`${u}d`:void 0,metadata:t,name:r,role_descriptors:e})},"data-test-subj":"create-api-key-submit"},i.i18n.translate("xpack.serverlessSearch.apiKey.flyOutCreateLabel",{defaultMessage:"Create API Key"}))))))))};s(96);var ie={name:"1e25on7",styles:".euiStep__content{padding-bottom:0;}"};const re=({setClientApiKey:e})=>{const{http:t,user:s}=Object(B.a)(),[n,u]=Object(l.useState)(!1),{data:d}=Object(W.useQuery)({queryKey:["apiKey"],queryFn:()=>t.fetch("/internal/serverless_search/api_keys")}),[p,j]=Object(l.useState)(void 0);return Object(c.jsx)(o.a.Fragment,null,n&&Object(c.jsx)(ae,{onClose:()=>u(!1),setApiKey:t=>{j(t),t.encoded&&e(t.encoded)},username:(null==s?void 0:s.full_name)||(null==s?void 0:s.username)||""}),p?Object(c.jsx)(a.EuiPanel,{className:"apiKeySuccessPanel","data-test-subj":"api-key-create-success-panel"},Object(c.jsx)(a.EuiStep,{css:ie,status:"complete",headingElement:"h3",title:i.i18n.translate("xpack.serverlessSearch.apiKey.apiKeyStepTitle",{defaultMessage:"Store this API key"}),titleSize:"xs"},Object(c.jsx)(a.EuiText,null,i.i18n.translate("xpack.serverlessSearch.apiKey.apiKeyStepDescription",{defaultMessage:"You'll only see this key once, so save it somewhere safe. We don't store your API keys, so if you lose a key you'll need to generate a replacement."})),Object(c.jsx)(a.EuiSpacer,{size:"s"}),Object(c.jsx)(a.EuiCodeBlock,{isCopyable:!0,"data-test-subj":"api-key-created-key-codeblock"},JSON.stringify(p,void 0,2)))):Object(c.jsx)(a.EuiPanel,null,Object(c.jsx)(a.EuiTitle,{size:"xs"},Object(c.jsx)("h3",null,i.i18n.translate("xpack.serverlessSearch.apiKey.panel.title",{defaultMessage:"Add an API Key"}))),Object(c.jsx)(a.EuiSpacer,{size:"s"}),Object(c.jsx)(a.EuiText,{size:"s"},i.i18n.translate("xpack.serverlessSearch.apiKey.panel.description",{defaultMessage:"Use an existing key, or create a new one and copy it somewhere safe."})),Object(c.jsx)(a.EuiSpacer,{size:"l"}),Object(c.jsx)(a.EuiFlexGroup,{justifyContent:"spaceBetween",alignItems:"center"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiFlexGroup,{gutterSize:"m"},Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)("span",null,Object(c.jsx)(a.EuiButton,{iconType:"plusInCircleFilled",size:"s",fill:!0,onClick:()=>u(!0),"data-test-subj":"new-api-key-button"},Object(c.jsx)(a.EuiText,{size:"s"},i.i18n.translate("xpack.serverlessSearch.apiKey.newButtonLabel",{defaultMessage:"New"}))))),Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)("span",null,Object(c.jsx)(a.EuiButton,{iconType:"popout",size:"s",href:t.basePath.prepend(J.b),target:"_blank","data-test-subj":"manage-api-keys-button"},i.i18n.translate("xpack.serverlessSearch.apiKey.manageLabel",{defaultMessage:"Manage"})))))),Object(c.jsx)(a.EuiFlexItem,null,!(null==d||!d.apiKeys)&&Object(c.jsx)(a.EuiFlexGroup,{gutterSize:"s",justifyContent:"flexEnd",alignItems:"center"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiIcon,{size:"s",type:"iInCircle",color:"subdued"})),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiText,{size:"xs",color:"subdued"},Object(c.jsx)(r.FormattedMessage,{id:"xpack.serverlessSearch.apiKey.activeKeys",defaultMessage:"You have {number} active keys.",values:{number:Object(c.jsx)(a.EuiBadge,{color:d.apiKeys.length>0?"success":"warning","data-test-subj":"api-keys-count-badge"},d.apiKeys.length)}}))))))))};var le=s(52),oe=s(64);const ce=["azure_blob_storage","sharepoint_online","s3","mongodb","google_cloud_storage"],ue=()=>{const{data:e}=Object(le.a)(),{createConnector:t,isLoading:s}=Object(oe.a)(),n=null==e?void 0:e.connectors,l=n?ce.map((e=>n.find((t=>t.serviceType===e)))):void 0,o=l&&l.length;return Object(c.jsx)(a.EuiCallOut,{title:i.i18n.translate("xpack.serverlessSearch.selectClient.connectorsCallout.title",{defaultMessage:"Sync your data using a connector client"}),size:"m",iconType:"iInCircle"},Object(c.jsx)("p",null,Object(c.jsx)(r.FormattedMessage,{id:"xpack.serverlessSearch.selectClient.connectorsCallout.description",defaultMessage:"Sync a range of popular third-party data sources to Elasticsearch, by deploying open code Elastic connectors on your own infrastructure."})),Object(c.jsx)(a.EuiFlexGroup,{alignItems:"center",gutterSize:"m"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)("p",null,Object(c.jsx)(a.EuiButton,{color:"primary",fill:!0,"data-test-subj":"connectors-callout-cta",onClick:()=>t(),isLoading:s},i.i18n.translate("xpack.serverlessSearch.selectClient.connectorsCallout.cta",{defaultMessage:"Create a connector"})))),Object(c.jsx)(a.EuiFlexItem,null),o&&l.map((e=>Object(c.jsx)(a.EuiFlexItem,{grow:!1,key:e.serviceType},Object(c.jsx)(a.EuiToolTip,{content:e.name},Object(c.jsx)(a.EuiIcon,{size:"xxl",title:e.name,id:e.serviceType,type:e.iconPath}))))),o&&Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)("p",null,Object(c.jsx)(a.EuiText,{color:"subdued",size:"s"},Object(c.jsx)(r.FormattedMessage,{id:"xpack.serverlessSearch.selectClient.connectorsCallout.etc",defaultMessage:"and more"}))))))},de=({assetBasePath:e})=>{const{createConnector:t}=Object(oe.a)();return Object(c.jsx)(a.EuiFlexGroup,{direction:"column",justifyContent:"spaceEvenly",gutterSize:"s"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiTitle,{size:"xxs"},Object(c.jsx)("h6",null,i.i18n.translate("xpack.serverlessSearch.ingestData.alternativeOptions.connectorsTitle",{defaultMessage:"Connectors"}))),Object(c.jsx)(a.EuiSpacer,{size:"xs"}),Object(c.jsx)(a.EuiText,null,Object(c.jsx)("p",null,i.i18n.translate("xpack.serverlessSearch.ingestData.alternativeOptions.connectorsDescription",{defaultMessage:"Sync third-party data sources to Elasticsearch, by deploying open code Elastic connectors on your own infrastructure.  "})))),Object(c.jsx)(a.EuiFlexGroup,{direction:"row",justifyContent:"flexStart",alignItems:"center"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiLink,{"data-test-subj":"serverlessSearchConnectorIngestionPanelSetUpAConnectorLink",onClick:()=>t()},i.i18n.translate("xpack.serverlessSearch.ingestData.alternativeOptions.setupConnectorLabel",{defaultMessage:"Set up a connector"}))),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(b,{href:"https://github.com/elastic/connectors",label:"connectors",assetBasePath:e})),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiFlexGroup,{alignItems:"center",gutterSize:"xs"},Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiIcon,{size:"s",type:"logoDocker"})),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiText,{size:"s"},Object(c.jsx)(a.EuiLink,{"data-test-subj":"serverlessSearchConnectorIngestionPanelDockerLink",target:"_blank",href:"https://github.com/elastic/connectors-python/blob/main/docs/DOCKER.md"},i.i18n.translate("xpack.serverlessSearch.ingestData.alternativeOptions.connectorDockerLabel",{defaultMessage:"Docker"}))))))),Object(c.jsx)(a.EuiSpacer,{size:"m"}))},pe=()=>{const{http:e}=Object(B.a)();return Object(c.jsx)(o.a.Fragment,null,Object(c.jsx)(a.EuiSpacer,null),Object(c.jsx)(a.EuiButton,{iconType:"plusInCircle",size:"s",href:e.basePath.prepend("/app/management/ingest/ingest_pipelines/create"),"data-test-subj":"create-a-pipeline-button"},Object(c.jsx)(a.EuiText,{size:"s"},i.i18n.translate("xpack.serverlessSearch.pipeline.description.createButtonLabel",{defaultMessage:"Create a pipeline"}))))},je=()=>{const[e,t]=Object(l.useState)(z),[s,n]=Object(l.useState)("your_api_key"),{application:o,cloud:u,http:d,user:j,share:x}=Object(B.a)(),{elasticsearchURL:b,cloudId:h}=Object(l.useMemo)((()=>{var e,t;return{elasticsearchURL:null!==(e=null==u?void 0:u.elasticsearchUrl)&&void 0!==e?e:"https://your_deployment_url",cloudId:null!==(t=null==u?void 0:u.cloudId)&&void 0!==t?t:"<CLOUD_ID>"}}),[u]),m=Object(F.a)(),O={url:b,apiKey:s,cloudId:h},{hash:S}=Object(T.useLocation)();return Object(l.useEffect)((()=>{if(S){const e=S.replace("#",""),t=document.getElementById(e);t&&t.scrollIntoView({behavior:"smooth"})}}),[S]),Object(c.jsx)(a.EuiPageTemplate,{offset:0,grow:!0,restrictWidth:!0,"data-test-subj":"svlSearchOverviewPage"},Object(c.jsx)(a.EuiPageTemplate.Section,{alignment:"top",className:"serverlessSearchHeaderSection"},Object(c.jsx)(a.EuiText,{color:"ghost"},Object(c.jsx)(I,{user:j,assetBasePath:m}))),Object(c.jsx)(a.EuiPageTemplate.Section,{color:"subdued",bottomBorder:"extended","data-test-subj":"select-client-section"},Object(c.jsx)(E,{docLinks:A.a,http:d,callout:Object(c.jsx)(ue,null)},Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(q,{assetBasePath:m,setSelectedLanguage:t,languages:U,selectedLanguage:e.id})))),Object(c.jsx)(a.EuiPageTemplate.Section,{color:"subdued",bottomBorder:"extended","data-test-subj":"install-client-section"},Object(c.jsx)(k,{codeSnippet:_(e,"installClient",O),consoleRequest:P("installClient"),languages:U,language:e,setSelectedLanguage:t,assetBasePath:m,application:o,sharePlugin:x})),Object(c.jsx)(a.EuiPageTemplate.Section,{color:"subdued",bottomBorder:"extended","data-test-subj":"api-keys-section"},Object(c.jsx)(f,{description:i.i18n.translate("xpack.serverlessSearch.apiKey.description",{defaultMessage:"An API key is a private, unique identifier for authentication and authorization. You'll need an API key to securely connect to your project."}),leftPanelContent:Object(c.jsx)(re,{setClientApiKey:n}),links:[],title:i.i18n.translate("xpack.serverlessSearch.apiKey.title",{defaultMessage:"API Key"})})),Object(c.jsx)(a.EuiPageTemplate.Section,{color:"subdued",bottomBorder:"extended","data-test-subj":"cloud-details-section"},Object(c.jsx)(p,{cloudId:u.cloudId,elasticsearchUrl:u.elasticsearchUrl})),Object(c.jsx)(a.EuiPageTemplate.Section,{color:"subdued",bottomBorder:"extended","data-test-subj":"configure-client-section"},Object(c.jsx)(f,{description:i.i18n.translate("xpack.serverlessSearch.configureClient.description",{defaultMessage:"Initialize your client with your unique API key and Cloud ID"}),leftPanelContent:Object(c.jsx)(g,{languages:U,codeSnippet:_(e,"configureClient",O),consoleRequest:P("configureClient"),selectedLanguage:e,setSelectedLanguage:t,assetBasePath:m,application:o,sharePlugin:x}),links:[...e.basicConfig?[{href:e.basicConfig,label:i.i18n.translate("xpack.serverlessSearch.configureClient.basicConfigLabel",{defaultMessage:"Basic configuration"})}]:[]],title:i.i18n.translate("xpack.serverlessSearch.configureClient.title",{defaultMessage:"Configure your client"})})),Object(c.jsx)(a.EuiPageTemplate.Section,{color:"subdued",bottomBorder:"extended","data-test-subj":"test-client-section"},Object(c.jsx)(f,{description:i.i18n.translate("xpack.serverlessSearch.testConnection.description",{defaultMessage:"Send a test request to confirm your language client and Elasticsearch instance are up and running."}),leftPanelContent:Object(c.jsx)(g,{languages:U,codeSnippet:_(e,"testConnection",O),consoleRequest:P("testConnection"),selectedLanguage:e,setSelectedLanguage:t,assetBasePath:m,application:o,sharePlugin:x}),links:[],title:i.i18n.translate("xpack.serverlessSearch.testConnection.title",{defaultMessage:"Test your connection"})})),Object(c.jsx)(a.EuiPageTemplate.Section,{id:"ingestData",color:"subdued",bottomBorder:"extended","data-test-subj":"ingest-client-section"},Object(c.jsx)(y,{codeSnippet:_(e,"ingestData",O),consoleRequest:P("ingestData"),languages:U,selectedLanguage:e,setSelectedLanguage:t,assetBasePath:m,docLinks:A.a,application:o,sharePlugin:x,additionalIngestionPanel:Object(c.jsx)(de,{assetBasePath:m})})),Object(c.jsx)(a.EuiPageTemplate.Section,{color:"subdued",bottomBorder:"extended","data-test-subj":"search-client-section"},Object(c.jsx)(f,{description:i.i18n.translate("xpack.serverlessSearch.searchQuery.description",{defaultMessage:"Now you're ready to start experimenting with searching and performing aggregations on your Elasticsearch data."}),leftPanelContent:Object(c.jsx)(g,{languages:U,codeSnippet:_(e,"buildSearchQuery",O),consoleRequest:P("buildSearchQuery"),selectedLanguage:e,setSelectedLanguage:t,assetBasePath:m,application:o,sharePlugin:x}),links:[],title:i.i18n.translate("xpack.serverlessSearch.searchQuery.title",{defaultMessage:"Build your first search query"})})),Object(c.jsx)(a.EuiPageTemplate.Section,{color:"subdued",bottomBorder:"extended","data-test-subj":"pipeline-client-section"},Object(c.jsx)(f,{description:Object(c.jsx)(r.FormattedMessage,{id:"xpack.serverlessSearch.pipeline.description",defaultMessage:"Use {ingestPipelinesLink} to preprocess your data before it's indexed into Elasticsearch, which is often much easier than post-processing. Use any combination of ingest processors to add, delete, or transform fields in your documents.",values:{ingestPipelinesLink:Object(c.jsx)(a.EuiLink,{"data-test-subj":"serverlessSearchElasticsearchOverviewIngestPipelinesLink",href:A.a.ingestionPipelines,target:"_blank"},i.i18n.translate("xpack.serverlessSearch.pipeline.description.ingestPipelinesLink.link",{defaultMessage:"ingest pipelines"}))}}),leftPanelContent:Object(c.jsx)(v,{clusterImage:`${m}/cluster.svg`,cutImage:`${m}/cut.svg`,reporterImage:`${m}/reporter.svg`}),links:[],title:i.i18n.translate("xpack.serverlessSearch.pipeline.title",{defaultMessage:"Transform and enrich your data"}),children:Object(c.jsx)(pe,null)})),Object(c.jsx)(a.EuiPageTemplate.Section,{alignment:"top",className:"serverlessSearchOverviewFooterSection","data-test-subj":"footer-section"},Object(c.jsx)(f,{title:i.i18n.translate("xpack.serverlessSearch.overview.footer.title",{defaultMessage:"Do more with your data"}),description:i.i18n.translate("xpack.serverlessSearch.overview.footer.description",{defaultMessage:"Your Elasticsearch endpoint is set up and you've made some basic queries. Now you're ready to dive deeper into more advanced tools and use cases."}),leftPanelContent:Object(c.jsx)(xe,null),links:[],overviewPanelProps:{color:"transparent",hasShadow:!1}})))},xe=()=>{const{application:{navigateToApp:e},cloud:t}=Object(B.a)();return Object(c.jsx)(a.EuiFlexGroup,{gutterSize:"xl",direction:"column"},Object(c.jsx)(a.EuiFlexGroup,{gutterSize:"m",direction:"column"},Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiCard,{layout:"horizontal",icon:Object(c.jsx)(a.EuiAvatar,{size:"xl",color:"subdued",type:"space",iconType:"discoverApp",iconSize:"original",name:"discover"}),titleSize:"xs",title:i.i18n.translate("xpack.serverlessSearch.overview.footer.discover.title",{defaultMessage:"Discover"}),description:Object(c.jsx)(a.EuiFlexGroup,{justifyContent:"spaceAround"},Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)("p",null,i.i18n.translate("xpack.serverlessSearch.overview.footer.discover.description",{defaultMessage:"Search and filter your data, learn how your fields are structured, and create visualizations."}))),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiIcon,{type:"arrowRight",color:"subdued"}))),onClick:()=>e("discover")})),Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiCard,{layout:"horizontal",icon:Object(c.jsx)(a.EuiAvatar,{size:"xl",color:"subdued",type:"space",iconType:"notebookApp",iconSize:"original",name:"documentation"}),titleSize:"xs",title:i.i18n.translate("xpack.serverlessSearch.overview.footer.documentation.title",{defaultMessage:"Documentation"}),description:Object(c.jsx)(a.EuiFlexGroup,{justifyContent:"spaceAround"},Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)("p",null,i.i18n.translate("xpack.serverlessSearch.overview.footer.documentation.description",{defaultMessage:"Learn more with our references, how-to guides, and tutorials."}))),Object(c.jsx)(a.EuiFlexItem,{grow:!1},Object(c.jsx)(a.EuiIcon,{type:"arrowRight",color:"subdued"}))),href:A.a.gettingStartedSearch}))),Object(c.jsx)(a.EuiFlexGroup,{gutterSize:"m",alignItems:"center"},t.usersAndRolesUrl&&Object(c.jsx)(ge,null,Object(c.jsx)(a.EuiButtonEmpty,{"data-test-subj":"serverlessSearchOverviewFooterInviteMoreUsersButton",iconType:"users",href:t.usersAndRolesUrl},i.i18n.translate("xpack.serverlessSearch.overview.footer.links.inviteUsers",{defaultMessage:"Invite more users"}))),Object(c.jsx)(ge,null,Object(c.jsx)(a.EuiButtonEmpty,{"data-test-subj":"serverlessSearchOverviewFooterJoinOurCommunityButton",iconType:"heart",href:"https://www.elastic.co/community/"},i.i18n.translate("xpack.serverlessSearch.overview.footer.links.community",{defaultMessage:"Join our community"}))),Object(c.jsx)(ge,null,Object(c.jsx)(a.EuiButtonEmpty,{"data-test-subj":"serverlessSearchOverviewFooterGiveFeedbackButton",iconType:"faceHappy",href:A.a.kibanaFeedback},i.i18n.translate("xpack.serverlessSearch.overview.footer.links.feedback",{defaultMessage:"Give feedback"})))))},ge=({children:e})=>Object(c.jsx)(a.EuiFlexItem,null,Object(c.jsx)(a.EuiPanel,{hasShadow:!1,paddingSize:"none"},Object(c.jsx)(a.EuiFlexGroup,null,Object(c.jsx)(a.EuiFlexItem,null,e))))},45:function(e,t,s){"use strict";var n,a=function(){var e={};return function(t){if(void 0===e[t]){var s=document.querySelector(t);if(window.HTMLIFrameElement&&s instanceof window.HTMLIFrameElement)try{s=s.contentDocument.head}catch(e){s=null}e[t]=s}return e[t]}}(),i=[];function r(e){for(var t=-1,s=0;s<i.length;s++)if(i[s].identifier===e){t=s;break}return t}function l(e,t){for(var s={},n=[],a=0;a<e.length;a++){var l=e[a],o=t.base?l[0]+t.base:l[0],c=s[o]||0,u="".concat(o," ").concat(c);s[o]=c+1;var d=r(u),p={css:l[1],media:l[2],sourceMap:l[3]};-1!==d?(i[d].references++,i[d].updater(p)):i.push({identifier:u,updater:g(p,t),references:1}),n.push(u)}return n}function o(e){var t=document.createElement("style"),n=e.attributes||{};if(void 0===n.nonce){var i=s.nc;i&&(n.nonce=i)}if(Object.keys(n).forEach((function(e){t.setAttribute(e,n[e])})),"function"==typeof e.insert)e.insert(t);else{var r=a(e.insert||"head");if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}return t}var c,u=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function d(e,t,s,n){var a=s?"":n.media?"@media ".concat(n.media," {").concat(n.css,"}"):n.css;if(e.styleSheet)e.styleSheet.cssText=u(t,a);else{var i=document.createTextNode(a),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(i,r[t]):e.appendChild(i)}}function p(e,t,s){var n=s.css,a=s.media,i=s.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}var j=null,x=0;function g(e,t){var s,n,a;if(t.singleton){var i=x++;s=j||(j=o(t)),n=d.bind(null,s,i,!1),a=d.bind(null,s,i,!0)}else s=o(t),n=p.bind(null,s,t),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(s)};return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n(e=t)}else a()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===n&&(n=Boolean(window&&document&&document.all&&!window.atob)),n));var s=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var n=0;n<s.length;n++){var a=r(s[n]);i[a].references--}for(var o=l(e,t),c=0;c<s.length;c++){var u=r(s[c]);0===i[u].references&&(i[u].updater(),i.splice(u,1))}s=o}}}},46:function(e,t,s){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var s=function(e,t){var s,n,a,i=e[1]||"",r=e[3];if(!r)return i;if(t&&"function"==typeof btoa){var l=(s=r,n=btoa(unescape(encodeURIComponent(JSON.stringify(s)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),"/*# ".concat(a," */")),o=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[i].concat(o).concat([l]).join("\n")}return[i].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(s,"}"):s})).join("")},t.i=function(e,s,n){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(n)for(var i=0;i<this.length;i++){var r=this[i][0];null!=r&&(a[r]=!0)}for(var l=0;l<e.length;l++){var o=[].concat(e[l]);n&&a[o[0]]||(s&&(o[2]?o[2]="".concat(s," and ").concat(o[2]):o[2]=s),t.push(o))}},t}},71:function(e,t,s){switch(window.__kbnThemeTag__){case"v8dark":return s(87);case"v8light":return s(89)}},81:function(e,t,s){var n,a=function(){var e=String.fromCharCode,t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",n={};function a(e,t){if(!n[e]){n[e]={};for(var s=0;s<e.length;s++)n[e][e.charAt(s)]=s}return n[e][t]}var i={compressToBase64:function(e){if(null==e)return"";var s=i._compress(e,6,(function(e){return t.charAt(e)}));switch(s.length%4){default:case 0:return s;case 1:return s+"===";case 2:return s+"==";case 3:return s+"="}},decompressFromBase64:function(e){return null==e?"":""==e?null:i._decompress(e.length,32,(function(s){return a(t,e.charAt(s))}))},compressToUTF16:function(t){return null==t?"":i._compress(t,15,(function(t){return e(t+32)}))+" "},decompressFromUTF16:function(e){return null==e?"":""==e?null:i._decompress(e.length,16384,(function(t){return e.charCodeAt(t)-32}))},compressToUint8Array:function(e){for(var t=i.compress(e),s=new Uint8Array(2*t.length),n=0,a=t.length;n<a;n++){var r=t.charCodeAt(n);s[2*n]=r>>>8,s[2*n+1]=r%256}return s},decompressFromUint8Array:function(t){if(null==t)return i.decompress(t);for(var s=new Array(t.length/2),n=0,a=s.length;n<a;n++)s[n]=256*t[2*n]+t[2*n+1];var r=[];return s.forEach((function(t){r.push(e(t))})),i.decompress(r.join(""))},compressToEncodedURIComponent:function(e){return null==e?"":i._compress(e,6,(function(e){return s.charAt(e)}))},decompressFromEncodedURIComponent:function(e){return null==e?"":""==e?null:(e=e.replace(/ /g,"+"),i._decompress(e.length,32,(function(t){return a(s,e.charAt(t))})))},compress:function(t){return i._compress(t,16,(function(t){return e(t)}))},_compress:function(e,t,s){if(null==e)return"";var n,a,i,r={},l={},o="",c="",u="",d=2,p=3,j=2,x=[],g=0,b=0;for(i=0;i<e.length;i+=1)if(o=e.charAt(i),Object.prototype.hasOwnProperty.call(r,o)||(r[o]=p++,l[o]=!0),c=u+o,Object.prototype.hasOwnProperty.call(r,c))u=c;else{if(Object.prototype.hasOwnProperty.call(l,u)){if(u.charCodeAt(0)<256){for(n=0;n<j;n++)g<<=1,b==t-1?(b=0,x.push(s(g)),g=0):b++;for(a=u.charCodeAt(0),n=0;n<8;n++)g=g<<1|1&a,b==t-1?(b=0,x.push(s(g)),g=0):b++,a>>=1}else{for(a=1,n=0;n<j;n++)g=g<<1|a,b==t-1?(b=0,x.push(s(g)),g=0):b++,a=0;for(a=u.charCodeAt(0),n=0;n<16;n++)g=g<<1|1&a,b==t-1?(b=0,x.push(s(g)),g=0):b++,a>>=1}0==--d&&(d=Math.pow(2,j),j++),delete l[u]}else for(a=r[u],n=0;n<j;n++)g=g<<1|1&a,b==t-1?(b=0,x.push(s(g)),g=0):b++,a>>=1;0==--d&&(d=Math.pow(2,j),j++),r[c]=p++,u=String(o)}if(""!==u){if(Object.prototype.hasOwnProperty.call(l,u)){if(u.charCodeAt(0)<256){for(n=0;n<j;n++)g<<=1,b==t-1?(b=0,x.push(s(g)),g=0):b++;for(a=u.charCodeAt(0),n=0;n<8;n++)g=g<<1|1&a,b==t-1?(b=0,x.push(s(g)),g=0):b++,a>>=1}else{for(a=1,n=0;n<j;n++)g=g<<1|a,b==t-1?(b=0,x.push(s(g)),g=0):b++,a=0;for(a=u.charCodeAt(0),n=0;n<16;n++)g=g<<1|1&a,b==t-1?(b=0,x.push(s(g)),g=0):b++,a>>=1}0==--d&&(d=Math.pow(2,j),j++),delete l[u]}else for(a=r[u],n=0;n<j;n++)g=g<<1|1&a,b==t-1?(b=0,x.push(s(g)),g=0):b++,a>>=1;0==--d&&(d=Math.pow(2,j),j++)}for(a=2,n=0;n<j;n++)g=g<<1|1&a,b==t-1?(b=0,x.push(s(g)),g=0):b++,a>>=1;for(;;){if(g<<=1,b==t-1){x.push(s(g));break}b++}return x.join("")},decompress:function(e){return null==e?"":""==e?null:i._decompress(e.length,32768,(function(t){return e.charCodeAt(t)}))},_decompress:function(t,s,n){var a,i,r,l,o,c,u,d=[],p=4,j=4,x=3,g="",b=[],h={val:n(0),position:s,index:1};for(a=0;a<3;a+=1)d[a]=a;for(r=0,o=Math.pow(2,2),c=1;c!=o;)l=h.val&h.position,h.position>>=1,0==h.position&&(h.position=s,h.val=n(h.index++)),r|=(l>0?1:0)*c,c<<=1;switch(r){case 0:for(r=0,o=Math.pow(2,8),c=1;c!=o;)l=h.val&h.position,h.position>>=1,0==h.position&&(h.position=s,h.val=n(h.index++)),r|=(l>0?1:0)*c,c<<=1;u=e(r);break;case 1:for(r=0,o=Math.pow(2,16),c=1;c!=o;)l=h.val&h.position,h.position>>=1,0==h.position&&(h.position=s,h.val=n(h.index++)),r|=(l>0?1:0)*c,c<<=1;u=e(r);break;case 2:return""}for(d[3]=u,i=u,b.push(u);;){if(h.index>t)return"";for(r=0,o=Math.pow(2,x),c=1;c!=o;)l=h.val&h.position,h.position>>=1,0==h.position&&(h.position=s,h.val=n(h.index++)),r|=(l>0?1:0)*c,c<<=1;switch(u=r){case 0:for(r=0,o=Math.pow(2,8),c=1;c!=o;)l=h.val&h.position,h.position>>=1,0==h.position&&(h.position=s,h.val=n(h.index++)),r|=(l>0?1:0)*c,c<<=1;d[j++]=e(r),u=j-1,p--;break;case 1:for(r=0,o=Math.pow(2,16),c=1;c!=o;)l=h.val&h.position,h.position>>=1,0==h.position&&(h.position=s,h.val=n(h.index++)),r|=(l>0?1:0)*c,c<<=1;d[j++]=e(r),u=j-1,p--;break;case 2:return b.join("")}if(0==p&&(p=Math.pow(2,x),x++),d[u])g=d[u];else{if(u!==j)return null;g=i+i.charAt(0)}b.push(g),d[j++]=i+g.charAt(0),i=g,0==--p&&(p=Math.pow(2,x),x++)}}};return i}();void 0===(n=function(){return a}.call(t,s,t,e))||(e.exports=n)},82:function(e,t,s){switch(window.__kbnThemeTag__){case"v8dark":return s(83);case"v8light":return s(85)}},83:function(e,t,s){var n=s(45),a=s(84);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);n(a,{insert:"head",singleton:!1}),e.exports=a.locals||{}},84:function(e,t,s){(t=s(46)(!1)).push([e.i,".codeBoxPanel{border-top:1px solid #343741}.codeBoxCodeBlock{word-break:break-all}",""]),e.exports=t},85:function(e,t,s){var n=s(45),a=s(86);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);n(a,{insert:"head",singleton:!1}),e.exports=a.locals||{}},86:function(e,t,s){(t=s(46)(!1)).push([e.i,".codeBoxPanel{border-top:1px solid #d3dae6}.codeBoxCodeBlock{word-break:break-all}",""]),e.exports=t},87:function(e,t,s){var n=s(45),a=s(88);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);n(a,{insert:"head",singleton:!1}),e.exports=a.locals||{}},88:function(e,t,s){(t=s(46)(!1)).push([e.i,".serverlessSearchSelectClientPanelSelectedBorder{border:1px solid #36a2ef}.serverlessSearchSelectClientPanelBorder{border:1px solid #343741}",""]),e.exports=t},89:function(e,t,s){var n=s(45),a=s(90);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);n(a,{insert:"head",singleton:!1}),e.exports=a.locals||{}},90:function(e,t,s){(t=s(46)(!1)).push([e.i,".serverlessSearchSelectClientPanelSelectedBorder{border:1px solid #07c}.serverlessSearchSelectClientPanelBorder{border:1px solid #d3dae6}",""]),e.exports=t},91:function(e,t,s){switch(window.__kbnThemeTag__){case"v8dark":return s(92);case"v8light":return s(94)}},92:function(e,t,s){var n=s(45),a=s(93);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);n(a,{insert:"head",singleton:!1}),e.exports=a.locals||{}},93:function(e,t,s){(t=s(46)(!1)).push([e.i,".serverlessSearchHeaderSection{background-color:#36a2ef}.serverlessSearchHeaderSection>div{padding-bottom:0;padding-top:0}.serverlessSearchOverviewFooterSection{background-color:#36a2ef1a}.serverlessSearchCloudDetailsCopyPanel{word-break:break-all}",""]),e.exports=t},94:function(e,t,s){var n=s(45),a=s(95);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);n(a,{insert:"head",singleton:!1}),e.exports=a.locals||{}},95:function(e,t,s){(t=s(46)(!1)).push([e.i,".serverlessSearchHeaderSection{background-color:#07c}.serverlessSearchHeaderSection>div{padding-bottom:0;padding-top:0}.serverlessSearchOverviewFooterSection{background-color:#0077cc1a}.serverlessSearchCloudDetailsCopyPanel{word-break:break-all}",""]),e.exports=t},96:function(e,t,s){switch(window.__kbnThemeTag__){case"v8dark":return s(97);case"v8light":return s(99)}},97:function(e,t,s){var n=s(45),a=s(98);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);n(a,{insert:"head",singleton:!1}),e.exports=a.locals||{}},98:function(e,t,s){(t=s(46)(!1)).push([e.i,".apiKeySuccessPanel{background-color:#7dded81a}",""]),e.exports=t},99:function(e,t,s){var n=s(45),a=s(100);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);n(a,{insert:"head",singleton:!1}),e.exports=a.locals||{}}}]);